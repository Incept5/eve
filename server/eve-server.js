(()=>{var __webpack_modules__={42:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DocxToHtml=void 0;const u=r(5534),f=r(3563),p=r(7205),h=a(r(9896)),m=a(r(6928)),g=a(r(857)),y=d(r(9055)),v=r(3229);let _=class extends u.Tool{constructor(e){super(),this.storedFileService=e,this.name="docx_to_html",this.description="Converts a DOCX file to HTML. Takes a stored file ID as input and returns the generated HTML content directly."}async _call(e){try{const t=await this.storedFileService.getFile(e);if(!t)throw new Error(`File with ID ${e} not found`);y.default.info("Converting DOCX to HTML");const r=await(0,v.convertDocxToHtml)(t.fileContents,{wrapperElement:"html",removeImages:!0}),o=g.tmpdir(),n=m.join(o,`docx-${Date.now()}.html`);return h.writeFileSync(n,r,"utf8"),y.default.info(`HTML content written to temp file: ${n}`),r}catch(e){throw new Error(`Failed to convert DOCX to HTML: ${e.message}`)}}};t.DocxToHtml=_,t.DocxToHtml=_=i([(0,f.Injectable)(),l(0,(0,f.Inject)(p.StoredFileService)),c("design:paramtypes",[p.StoredFileService])],_)},59:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GlhfProvider=void 0;const n=r(8483),s=r(8959),i=r(2368),a=o(r(8938)),c=r(6228);class l extends n.BaseProvider{getName(){return"glhf"}getBaseChatModel(e,t){return new c.ChatOpenAI({modelName:this.shortModelName(e),temperature:t.temperature,openAIApiKey:i.ConfigService.getInstance().getProperty("GLHF_API_KEY"),configuration:{baseURL:l.BASE_URL}})}async getModelDescriptors(){return(await this.fetchModels()).map((e=>new s.ModelDescriptor("glhf",e.id,0,0,0,0)))}isValid(){return!!i.ConfigService.getInstance().getProperty("GLHF_API_KEY")}async fetchModels(){if(l.modelsCache&&Date.now()-l.modelsCache.timestamp<l.CACHE_TTL)return l.modelsCache.models;const e=i.ConfigService.getInstance().getProperty("GLHF_API_KEY");if(!e)return console.log("GLHF API key not found"),[];try{const t=await a.default.get(`${l.BASE_URL}/models`,{headers:{Authorization:`Bearer ${e}`}});if(200===t.status){const e=t.data.data;return l.modelsCache={models:e,timestamp:Date.now()},e}}catch(e){console.error("Error fetching GLHF models:",e)}return[]}supportsOnDemandModels(){return!0}}t.GlhfProvider=l,l.QWEN_2_5_CODER_32B_INSTRUCT="glhf/hf:Qwen/Qwen2.5-Coder-32B-Instruct",l.QWEN_2_5_72B_INSTRUCT="glhf/hf:Qwen/Qwen2.5-72B-Instruct",l.META_LLAMA_3_1_405B_INSTRUCT="glhf/hf:meta-llama/Meta-Llama-3.1-405B-Instruct",l.META_LLAMA_3_1_8B_INSTRUCT="glhf/hf:meta-llama/Meta-Llama-3.1-8B-Instruct",l.META_LLAMA_3_3_70B_INSTRUCT="glhf/hf:meta-llama/Llama-3.3-70B-Instruct",l.modelsCache=null,l.CACHE_TTL=3e5,l.BASE_URL="https://glhf.chat/api/openai/v1"},62:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ListFilesTool=void 0;const u=r(3563),f=c(r(1943)),p=d(r(9055)),h=c(r(6928)),m=r(2141),g=r(4155),y=r(9581);let v=n=class{constructor(e,t,r){this.fileSystemService=e,this.responseFormatter=t,this.name="list_files",this.description="Request to list files and directories within the specified directory.",this.workingDir=r}getUsageInstructions(e){return`## list_files\nDescription: Request to list files and directories within the specified directory. If recursive is true, it will list all files and directories recursively. If recursive is false or not provided, it will only list the top-level contents. Do not use this tool to confirm the existence of files you may have created, as the user will let you know if the files were created successfully or not.\nParameters:\n- path: (required) The path of the directory to list contents for (relative to the current working directory ${e.workingDir})\n- recursive: (optional) Whether to list files recursively. Use true for recursive listing, false or omit for top-level only.\nUsage:\n<list_files>\n<path>Directory path here</path>\n<recursive>true or false (optional)</recursive>\n</list_files>`}validateParams(e){return"string"==typeof e.path}async execute(e){const{path:t,recursive:r=!1}=e;p.default.info(`[${n.name}] Listing files in directory: ${t}, recursive: ${r}, relative to ${this.workingDir}`);const o=h.resolve(this.workingDir,t);if(!o.startsWith(this.workingDir)){const e=`Path traversal attempt detected: ${t} resolves outside of workspace ${this.workingDir}`;throw p.default.error(`[${n.name}] ${e}`),new y.FileSystemError(e,"PATH_TRAVERSAL_ERROR")}try{if(!(await f.stat(o)).isDirectory()){const e=`Path is not a directory: ${t}`;throw p.default.error(`[${n.name}] ${e}`),new y.FileNotFoundError(e,t)}const e=await this.fileSystemService.getIgnoredFilesCached(o);let s,i=!1;const a=1e3;return r?(s=await this.listFilesRecursively(o,""),s.length>a&&(s=s.slice(0,a),i=!0)):(s=await this.listFilesInDirectory(o,""),s.length>a&&(s=s.slice(0,a),i=!0)),this.responseFormatter.formatFilesList(o,s,i,e)}catch(e){if("ENOENT"===e.code){const e=`Directory not found: ${t}`;throw p.default.error(`[${n.name}] ${e}`),new y.FileNotFoundError(e,t)}const r=`Error listing files in directory ${t}: ${e.message}`;throw p.default.error(`[${n.name}] ${r}\n${e.stack}`),new y.FileSystemError(r,e.code||"FS_LIST_ERROR")}}async listFilesInDirectory(e,t){return(await f.readdir(e,{withFileTypes:!0})).map((e=>{const r=h.join(t,e.name);return e.isDirectory()?`${r}/`:r}))}async listFilesRecursively(e,t){let r;try{r=await f.readdir(e,{withFileTypes:!0})}catch(t){return p.default.warn(`[${n.name}] Error reading subdirectory ${e}: ${t.message}`),[]}const o=[];for(const n of r){const r=h.join(t,n.name),s=h.join(e,n.name);if(n.isDirectory()){o.push(`${r}/`);const e=await this.listFilesRecursively(s,r);o.push(...e)}else n.isFile()&&o.push(r)}return o}};t.ListFilesTool=v,t.ListFilesTool=v=n=a([(0,u.Injectable)(),l("design:paramtypes",[m.FileSystemService,g.ResponseFormatterService,String])],v)},136:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.truncateConversationHistory=function(e,t={}){const r={...n,...t};if(e.length<=r.minMessagesToKeep)return[...e];let o=Math.floor(e.length*(r.percentToRemove/100));"aggressive"===r.strategy&&(o=Math.floor(1.5*o));if(o=Math.min(o,e.length-r.minMessagesToKeep),o<=0)return[...e];switch(r.logger.warn(`[ContextTruncation] Truncating conversation history using '${r.strategy}' strategy. Removing ${o} of ${e.length} messages (${r.percentToRemove}%).`),r.strategy){case"preserve_recent":case"aggressive":default:return s(e,o);case"preserve_first_last":return function(e,t){const r=2,o=e.length-t-r;if(o<=0)return[...e];return[...e.slice(0,r),...e.slice(e.length-o)]}(e,o);case"preserve_tools":return function(e,t){const r=e=>e.segments.some((e=>"other"===e.type&&e.metadata?.providerSpecificType?.includes("tool"))),o=[],n=[];for(const t of e)r(t)?o.push(t):n.push(t);if(n.length<=t){const e=t-n.length;return e>0?o.slice(e):o}const s=n.slice(t),i=o.map(((t,r)=>({msg:t,originalIndex:e.indexOf(t)}))),a=s.map(((t,r)=>({msg:t,originalIndex:e.indexOf(t)}))),c=[...i,...a];return c.sort(((e,t)=>e.originalIndex-t.originalIndex)),c.map((e=>e.msg))}(e,o)}},t.getTruncationRange=function(e,t={}){const r={...n,...t};if(e.length<=r.minMessagesToKeep)return null;let o=Math.floor(e.length*(r.percentToRemove/100));"aggressive"===r.strategy&&(o=Math.floor(1.5*o));if(o=Math.min(o,e.length-r.minMessagesToKeep),o<=0)return null;switch(r.strategy){case"preserve_recent":case"aggressive":default:return[0,o-1];case"preserve_first_last":const e=2;return[e,e+o-1];case"preserve_tools":return null}},t.getNextTruncationStrategy=function(e="preserve_recent"){switch(e){case"preserve_recent":return{strategy:"preserve_tools",percentToRemove:40};case"preserve_tools":return{strategy:"preserve_first_last",percentToRemove:50};case"preserve_first_last":return{strategy:"aggressive",percentToRemove:60};case"aggressive":return{strategy:"aggressive",percentToRemove:75};default:return{strategy:"preserve_recent",percentToRemove:25}}};const n={strategy:"preserve_recent",percentToRemove:25,minMessagesToKeep:4,logger:o(r(9055)).default};function s(e,t){return e.slice(t)}},146:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AnthropicProvider=void 0;const i=r(3563),a=r(6206),c=s(r(9055)),l=r(160),d=r(305);let u=class{constructor(e){this.providerRegistry=e,c.default.info("[AnthropicProvider] Initialized"),this.providerRegistry.registerProvider(this)}getId(){return d.ANTHROPIC_PROVIDER_ID}getName(){return"Anthropic"}getMetadata(){return{website:"https://www.anthropic.com",docs_link:"https://docs.anthropic.com"}}requiresApiKey(){return!0}getDefaultBaseUrl(){return this.config?.anthropicBaseUrl||void 0}getDefaultModelId(){return d.DEFAULT_ANTHROPIC_MODEL_ID}getApiKeyName(){return"ANTHROPIC_API_KEY"}setConfig(e){this.config=e}getModelClient(e){const t={...e,baseUrl:this.config?.anthropicBaseUrl||e.baseUrl},r=new l.AnthropicModelClient(t);return this.discoverModels(e.apiKey,t.baseUrl).then((t=>{const o=t.find((t=>t.modelId===e.modelId));o?r.setModelMetadata(o):c.default.warn(`[AnthropicProvider] Metadata not found for model ${e.modelId} during client creation.`)})).catch((t=>{c.default.warn(`[AnthropicProvider] Failed to discover models for client ${e.modelId}: ${t.message}`)})),r}async discoverModels(e,t){return(0,d.discoverAnthropicModels)(e,t)}};t.AnthropicProvider=u,t.AnthropicProvider=u=o([(0,i.Injectable)(),n("design:paramtypes",[a.ProviderRegistry])],u)},156:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n(class\n  name: (constant) @name.definition.class) @definition.class\n\n(method\n  name: (identifier) @name.definition.method) @definition.method\n\n(singleton_method\n  name: (identifier) @name.definition.method) @definition.method\n\n(module\n  name: (constant) @name.definition.module) @definition.module\n"},160:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AnthropicModelClient=void 0;const i=r(3563),a=r(9970),c=r(3118),l=s(r(9055)),d=r(6297),u=r(2123);function f(e){if(!e)return"undefined";if(e.length<=8)return"********";const t=e.substring(0,4),r=e.substring(e.length-4),o=e.length-8;return`${t}${"*".repeat(o)}${r}`}let p=class{constructor(e){this.config=e,this.client=new a.Anthropic({apiKey:this.config.apiKey,baseURL:this.config.baseUrl||void 0}),this.messageTransformer=new c.AnthropicMessageTransformer,this.stateManager=(0,u.createStateManager)(),this.patternUtils=(0,u.createPatternUtils)(),this.blockManager=(0,u.createBlockManager)(this.stateManager),this.streamProcessor=(0,u.createStreamProcessor)(this.blockManager,this.stateManager,this.patternUtils);const t=f(this.config.apiKey);l.default.info(`[AnthropicModelClient] Initialized for model: ${this.config.modelId}`),l.default.info(`[AnthropicModelClient] Using API key: ${t}`),this.modelMetadata={modelId:this.config.modelId,providerId:"anthropic",name:this.config.modelId,contextWindow:2e5,maxOutputTokens:8192,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!0,supportsPromptCache:!0,supportsThinkingTokens:this.config.modelId.includes("3-7")}}getModelId(){return this.config.modelId}getModelMetadata(){return this.modelMetadata}setModelMetadata(e){this.modelMetadata=e,l.default.info(`[AnthropicModelClient] Updated metadata for ${this.config.modelId}: MaxOutputTokens=${this.modelMetadata.maxOutputTokens}`)}async*generateResponse(e,t,r,o){if(l.default.info(`[AnthropicModelClient] Creating message for task ${r} with system prompt length: ${e.length} characters`),l.default.info(`[AnthropicModelClient] Task ${r}: Messages count: ${t.length}`),0===t.length)throw l.default.error(`[AnthropicModelClient] Task ${r}: No messages provided to generateResponse`),new Error("messages: at least one message is required");if(o?.aborted)throw l.default.info("[AnthropicModelClient] Request aborted before API call"),d.debugLogger.log("Request aborted before API call to Anthropic"),new Error("Operation was aborted before API call");const n=this.config.thinkingTokens||0,s=n>0,i=this.config.modelId;d.debugLogger.log(`[AnthropicModelClient] Thinking enabled: ${s}, budget tokens: ${n}`);const a=this.messageTransformer.toProviderFormat(t,s);if(a.length>0){const e=a[a.length-1];if(l.default.info(`[AnthropicModelClient] Last message role: ${e.role}`),Array.isArray(e.content)&&e.content.length>0){const t=e.content[0];l.default.info(`[AnthropicModelClient] First content block type: ${t.type}`),s&&"assistant"===e.role&&("thinking"!==t.type&&"redacted_thinking"!==t.type?(l.default.warn("[AnthropicModelClient] WARNING: Last assistant message does not start with thinking block when thinking is enabled!"),d.debugLogger.dumpObject("[AnthropicModelClient] Problematic last message structure:",e)):l.default.info("[AnthropicModelClient] Last assistant message correctly starts with thinking block"));let r="Non-string or empty content";r="text"===t.type&&"text"in t&&"string"==typeof t.text?`${t.text.substring(0,300)}...`:"thinking"===t.type&&"thinking"in t?`[thinking] ${String(t.thinking).substring(0,300)}...`:`First content block type: ${t.type}`,l.default.info(`[AnthropicModelClient] First content block preview: ${r}`);const o=e.content.map((e=>e.type)).join(", ");l.default.info(`[AnthropicModelClient] All content block types: ${o}`)}else"string"==typeof e.content&&l.default.warn(`[AnthropicModelClient] Unexpected string content in formatted message: ${String(e.content).substring(0,300)}...`);d.debugLogger.dumpObject("[AnthropicModelClient] Full last formatted message:",e)}else l.default.warn("[AnthropicModelClient] No formatted messages to log before sending.");const c={model:i,thinking:s?{type:"enabled",budget_tokens:n}:void 0,max_tokens:this.modelMetadata.maxOutputTokens||8192,temperature:s?void 0:0,system:"[System prompt present]",messages:a.map((e=>({role:e.role,content:Array.isArray(e.content)?e.content.map((e=>({type:e.type}))):"[Unexpected content format]"})))};let u;l.default.info("[AnthropicModelClient] Request structure to Anthropic API:"),d.debugLogger.dumpObject("[AnthropicModelClient] API request structure:",c),l.default.info(`[AnthropicModelClient] Using model: ${i}`),l.default.info(`[AnthropicModelClient] Reasoning enabled: ${s}, budget tokens: ${n}`);const p=this.modelMetadata.supportsPromptCache;if(o){const e=o.aborted;l.default.info(`[AnthropicModelClient] Using abort signal for request to model: ${this.config.modelId}, current aborted state: ${e}`),d.debugLogger.log(`Abort signal provided for model ${this.config.modelId}, aborted state: ${e}`),o.addEventListener("abort",(()=>{l.default.info(`[AnthropicModelClient] Abort signal triggered for model: ${this.config.modelId}`),d.debugLogger.log(`ABORT SIGNAL TRIGGERED for model ${this.config.modelId}`)}))}else l.default.info(`[AnthropicModelClient] No abort signal provided for request to model: ${this.config.modelId}`),d.debugLogger.log(`No abort signal provided for model ${this.config.modelId}`);try{if(l.default.info(`[AnthropicModelClient] Making API request to Anthropic for model: ${i}`),d.debugLogger.log(`Making API request to Anthropic for model: ${i}, with abort signal: ${!!o}`),p){const t=a.reduce(((e,t,r)=>"user"===t.role?[...e,r]:e),[]),r=t[t.length-1]??-1,c=t[t.length-2]??-1;u=await this.client.messages.create({model:i,thinking:s?{type:"enabled",budget_tokens:n}:void 0,max_tokens:this.modelMetadata.maxOutputTokens||8192,temperature:s?void 0:0,system:[{text:e,type:"text",cache_control:{type:"ephemeral"}}],messages:a.map(((e,t)=>t===r||t===c?{...e,content:"string"==typeof e.content?[{type:"text",text:e.content,cache_control:{type:"ephemeral"}}]:Array.isArray(e.content)?e.content.map(((t,r)=>r===e.content.length-1?{...t,cache_control:{type:"ephemeral"}}:t)):[{type:"text",text:String(e.content),cache_control:{type:"ephemeral"}}]}:e)),stream:!0},{headers:{"anthropic-beta":"prompt-caching-2024-07-31"},signal:o})}else u=await this.client.messages.create({model:i,max_tokens:this.modelMetadata.maxOutputTokens||8192,temperature:0,system:[{text:e,type:"text"}],messages:a,stream:!0},{signal:o});yield*this.streamProcessor.processStream(u,r,o)}catch(e){const t=f(this.config.apiKey);throw l.default.error(`[AnthropicModelClient] Task ${r}: Error in generateResponse: ${e.message}`,e.stack),l.default.error(`[AnthropicModelClient] Task ${r}: Using API key: ${t}`),d.debugLogger.log(`Task ${r}: Error in generateResponse: ${e.message}`),("AbortError"===e.name||e.message.includes("aborted")||e.message.includes("cancel"))&&(l.default.info(`[AnthropicModelClient] Task ${r}: Detected abort error in generateResponse: ${e.message}`),d.debugLogger.log(`Task ${r}: ABORT ERROR detected in generateResponse: ${e.message}`)),yield*this.blockManager.createErrorBlock(`Error during generation: ${e.message}`),e}}};t.AnthropicModelClient=p,t.AnthropicModelClient=p=o([(0,i.Injectable)(),n("design:paramtypes",[Object])],p)},209:function(e,t,r){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),n=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||o(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),n(r(7886),t),n(r(305),t),n(r(3118),t),n(r(160),t),n(r(146),t)},233:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.EveAgentGateway=void 0;const c=r(6134),l=r(4437),d=r(461),u=a(r(9055)),f=r(6297),p=r(6780),h=r(9668),m=r(9102),g=r(6550),y=r(6349),v=r(9100),_=r(5324),w=r(8010),k=r(6963),b=r(6595),S=r(5444),T=r(1280);let O=o=class{constructor(e,t,r,o,n,s,i,a,c){this.configService=e,this.taskService=t,this.conversationHistoryService=r,this.agentLoopOrchestrator=o,this.eventEmitter=n,this.taskEventHandler=s,this.userService=i,this.blockService=a,this.toolExecutorService=c,this.clients=new Map}handleConnection(e){this.clients.set(e.id,e),e.join(e.id),f.debugLogger.log(`Client connected: ${e.id}`),u.default.info(`[${o.name}] Client connected: ${e.id}`),f.debugLogger.log(`Total connected clients: ${this.server?.sockets?.sockets?.size||0}`),f.debugLogger.log(`Total clients in local map: ${this.clients.size}`);const t=Array.from(this.clients.keys());f.debugLogger.log(`Active client IDs: ${JSON.stringify(t)}`);try{if(this.server&&this.server.sockets&&this.server.sockets.adapter){const e=this.server.sockets.adapter.rooms;if(e){const t=Array.from(e.keys()).filter((e=>!e.startsWith("/")));f.debugLogger.log(`Socket.io rooms: ${JSON.stringify(t)}`)}else f.debugLogger.log("Socket.io rooms not available yet")}else f.debugLogger.log("Socket.io adapter not fully initialized yet")}catch(e){u.default.warn(`[${o.name}] Error accessing Socket.io rooms: ${e.message}`)}}handleDisconnect(e){this.clients.delete(e.id),f.debugLogger.log(`Client disconnected: ${e.id}`),u.default.info(`[${o.name}] Client disconnected: ${e.id}`),f.debugLogger.log(`Remaining connected clients: ${this.server?.sockets?.sockets?.size||0}`),f.debugLogger.log(`Remaining clients in local map: ${this.clients.size}`);const t=Array.from(this.clients.keys());f.debugLogger.log(`Remaining client IDs: ${JSON.stringify(t)}`);try{if(this.server&&this.server.sockets&&this.server.sockets.adapter){const e=this.server.sockets.adapter.rooms;if(e){const t=Array.from(e.keys()).filter((e=>!e.startsWith("/")));f.debugLogger.log(`Socket.io rooms after disconnect: ${JSON.stringify(t)}`)}else f.debugLogger.log("Socket.io rooms not available after disconnect")}else f.debugLogger.log("Socket.io adapter not fully initialized after disconnect")}catch(e){u.default.warn(`[${o.name}] Error accessing Socket.io rooms after disconnect: ${e.message}`)}}handleEcho(e,t){f.debugLogger.log(`Received echo message from client ${t.id}`),f.debugLogger.dumpObject("Echo payload",e),u.default.info(`[${o.name}] Received echo message from client ${t.id}: ${JSON.stringify(e)}`);const r={event:"echo",data:e};return f.debugLogger.log(`Sending echo response to client ${t.id}`),f.debugLogger.dumpObject("Echo response",r),u.default.info(`[${o.name}] Sending echo response: ${JSON.stringify(r)}`),r}async handleGetConfig(e){f.debugLogger.log(`Received getConfig message from client ${e.id}`),u.default.info(`[${o.name}] Received getConfig message from client: ${e.id}`);try{const t=await this.userService.getCurrentUser(),r=await this.configService.assembleFinalConfiguration(t.userId,"plan"),n=await this.configService.assembleFinalConfiguration(t.userId,"act"),s={plan:{provider:r.providerId,model:r.modelId,baseUrl:r.baseUrl,thinkingTokens:r.thinkingTokens},act:{provider:n.providerId,model:n.modelId,baseUrl:n.baseUrl,thinkingTokens:n.thinkingTokens}};return f.debugLogger.log(`Sending config response to client ${e.id}`),f.debugLogger.dumpObject("Config response keys",Object.keys(s)),u.default.info(`[${o.name}] Sending config response to client ${e.id} with keys: ${Object.keys(s).join(", ")}`),{event:"config",data:s}}catch(t){return t instanceof h.AuthenticationError?(u.default.error(`[${o.name}] Authentication error in handleGetConfig: ${t.message}`),e.emit("error",{message:`Authentication failed: ${t.message}`}),{event:"error",data:{message:`Authentication failed: ${t.message}`}}):(u.default.error(`[${o.name}] Error in handleGetConfig: ${t.message}`,t.stack),{event:"error",data:{message:t.message}})}}async handleCreateTask(e,t){f.debugLogger.log(`Received createTask from client ${t.id}`),f.debugLogger.dumpObject("CreateTask payload",{workspaceName:e.workspaceName||"none",personaId:e.personaId||"software-engineer",hasSystemPrompt:!!e.systemPrompt}),u.default.info(`[${o.name}] Received createTask from client ${t.id}`),u.default.info(`[${o.name}] Workspace: ${e.workspaceName||"none"}, Persona: ${e.personaId||"software-engineer"}`);try{await this.taskEventHandler.handleCreateTask({workspaceName:e.workspaceName,personaId:e.personaId},t),u.default.info(`[${o.name}] Task creation handled successfully for client ${t.id}`),f.debugLogger.log(`Task creation handled successfully for client ${t.id}`)}catch(e){if(e instanceof h.AuthenticationError)return u.default.error(`[${o.name}] Authentication error in createTask: ${e.message}`),void t.emit("taskError",{message:`Authentication failed: ${e.message}`});u.default.error(`[${o.name}] Error creating task for client ${t.id}: ${e.message}\n${e.stack}`),f.debugLogger.log(`Error creating task for client ${t.id}: ${e.message}`),f.debugLogger.dumpObject("TaskError payload",{message:e.message}),t.emit("taskError",{message:e.message})}}async handleCreateTaskStep(e,t){f.debugLogger.log(`Received createTaskStep from client ${t.id}`),f.debugLogger.dumpObject("CreateTaskStep payload",{taskId:e.taskId,stepNumber:e.stepNumber,toolName:e.toolName,toolInputLength:e.toolInput.length}),u.default.info(`[${o.name}] Received createTaskStep from client ${t.id} for task ${e.taskId}`),u.default.info(`[${o.name}] Step ${e.stepNumber}, tool: ${e.toolName}, input length: ${e.toolInput.length} characters`);try{await this.taskEventHandler.handleCreateTaskStep(e,t),u.default.info(`[${o.name}] Task step ${e.stepNumber} created successfully for task ${e.taskId}`),f.debugLogger.log(`Task step ${e.stepNumber} created successfully for task ${e.taskId}`)}catch(r){u.default.error(`[${o.name}] Error creating task step for task ${e.taskId}: ${r.message}\n${r.stack}`),f.debugLogger.log(`Error creating task step for task ${e.taskId}: ${r.message}`),f.debugLogger.dumpObject("TaskStepError payload",{taskId:e.taskId,stepNumber:e.stepNumber,message:r.message}),t.emit("taskStepError",{taskId:e.taskId,stepNumber:e.stepNumber,message:r.message})}}async handleUpdateTaskStep(e,t){f.debugLogger.log(`Received updateTaskStep from client ${t.id}`),f.debugLogger.dumpObject("UpdateTaskStep payload",{taskId:e.taskId,stepNumber:e.stepNumber,status:e.status,outputLength:e.toolOutput.length,commitHash:e.commitHash||"none"}),u.default.info(`[${o.name}] Received updateTaskStep from client ${t.id} for task ${e.taskId}`),u.default.info(`[${o.name}] Step ${e.stepNumber}, status: ${e.status}, output length: ${e.toolOutput.length} characters, commit: ${e.commitHash||"none"}`);try{await this.taskEventHandler.handleUpdateTaskStep(e,t),u.default.info(`[${o.name}] Task step ${e.stepNumber} updated successfully for task ${e.taskId} with status ${e.status}`),f.debugLogger.log(`Task step ${e.stepNumber} updated successfully for task ${e.taskId} with status ${e.status}`)}catch(r){u.default.error(`[${o.name}] Error updating task step for task ${e.taskId}: ${r.message}\n${r.stack}`),f.debugLogger.log(`Error updating task step for task ${e.taskId}: ${r.message}`),f.debugLogger.dumpObject("TaskStepError payload",{taskId:e.taskId,stepNumber:e.stepNumber,message:r.message}),t.emit("taskStepError",{taskId:e.taskId,stepNumber:e.stepNumber,message:r.message})}}async handleToolApproval(e,t){f.debugLogger.log(`Received toolApproval from client ${t.id}`),f.debugLogger.dumpObject("ToolApproval payload",e),u.default.info(`[${o.name}] Received tool approval from client ${t.id} for block ${e.blockId}`),u.default.info(`[${o.name}] Approved: ${e.approved}, taskId: ${e.taskId}`);try{const r=await this.blockService.getBlock(e.blockId),n=r.tagName||"unknown";if(e.approved){u.default.info(`[${o.name}] Tool approved for block ${e.blockId}`);try{await this.blockService.updateBlock(e.blockId,{status:"executing"});const s=(0,p.parseToolParams)(r.content,n);await this.toolExecutorService.executeToolForBlock(t.id,e.taskId,e.blockId,n,s),u.default.info(`[${o.name}] Tool execution initiated for block ${e.blockId}`)}catch(r){u.default.error(`[${o.name}] Error executing tool for block ${e.blockId}: ${r.message}\n${r.stack}`),t.emit("toolApprovalError",{taskId:e.taskId,blockId:e.blockId,message:`Error executing tool: ${r.message}`})}}else u.default.info(`[${o.name}] Tool rejected for block ${e.blockId}`),await this.blockService.updateBlock(e.blockId,{status:"error",errorText:"Tool execution rejected by user"}),this.eventEmitter.emit(T.InternalEvents.TOOL_EXECUTION_COMPLETED,{clientId:t.id,taskId:e.taskId,blockId:e.blockId,toolName:n,result:{error:"Tool execution rejected by user"},status:"rejected"})}catch(r){u.default.error(`[${o.name}] Error handling tool approval for block ${e.blockId}: ${r.message}\n${r.stack}`),f.debugLogger.log(`Error handling tool approval for block ${e.blockId}: ${r.message}`),f.debugLogger.dumpObject("ToolApprovalError payload",{taskId:e.taskId,blockId:e.blockId,message:r.message}),t.emit("toolApprovalError",{taskId:e.taskId,blockId:e.blockId,message:r.message})}}async handleUserPrompt(e,t){f.debugLogger.log(`Received userPrompt from client ${t.id}`),f.debugLogger.dumpObject("UserPrompt payload",e),u.default.info(`[${o.name}] Received userPrompt for task ${e.taskId} from client ${t.id}`),u.default.info(`[${o.name}] Mode: ${e.mode}, prompt length: ${e.prompt.length} characters`);try{const r=(0,v.ulid)();await this.blockService.createBlock({blockId:r,taskId:e.taskId,role:"user",blockType:"text",status:"completed",content:e.prompt,description:"User Input"}),u.default.info(`[${o.name}] Created user input block ${r} for task ${e.taskId}`);const n=await this.taskService.getTask(e.taskId);if(n.status===S.TaskStatus.EXECUTING_TOOL)return u.default.warn(`[${o.name}] Rejecting user prompt for task ${e.taskId} because it is in ${S.TaskStatus.EXECUTING_TOOL} status.`),void t.emit("promptError",{taskId:e.taskId,message:"Cannot accept new prompt while a tool is executing. Please wait."});try{if(!n.originalPrompt){const t=e.prompt.substring(0,200);u.default.info(`[${o.name}] Setting originalPrompt for task ${e.taskId} (clipped to 200 chars)`),await this.taskService.updateTask({taskId:e.taskId,originalPrompt:t}),u.default.info(`[${o.name}] Successfully set originalPrompt for task ${e.taskId}`)}}catch(t){u.default.error(`[${o.name}] Error setting originalPrompt for task ${e.taskId}: ${t.message}`,t.stack)}await this.taskEventHandler.handleUserPrompt(e,t),u.default.info(`[${o.name}] User prompt handled successfully for task ${e.taskId} in ${e.mode} mode`),f.debugLogger.log(`User prompt handled successfully for task ${e.taskId} in ${e.mode} mode`)}catch(r){u.default.error(`[${o.name}] Error handling user prompt for task ${e.taskId}: ${r.message}\n${r.stack}`),f.debugLogger.log(`Error handling user prompt for task ${e.taskId}: ${r.message}`),f.debugLogger.dumpObject("PromptError payload",{taskId:e.taskId,message:r.message}),t.emit("promptError",{taskId:e.taskId,message:r.message})}}async handleCancelTask(e,t){f.debugLogger.log(`Received cancelTask from client ${t.id}`),f.debugLogger.dumpObject("CancelTask payload",e),u.default.info(`[${o.name}] Received cancelTask for task ${e.taskId} from client ${t.id}`),u.default.info(`[${o.name}] Cancellation reason: ${e.reason||"No reason provided"}`);try{await this.taskEventHandler.handleCancelTask(e,t),u.default.info(`[${o.name}] Task ${e.taskId} cancelled successfully`),f.debugLogger.log(`Task ${e.taskId} cancelled successfully`)}catch(r){u.default.error(`[${o.name}] Error cancelling task ${e.taskId}: ${r.message}\n${r.stack}`),f.debugLogger.log(`Error cancelling task ${e.taskId}: ${r.message}`),f.debugLogger.dumpObject("CancelError payload",{taskId:e.taskId,message:r.message}),t.emit("cancelError",{taskId:e.taskId,message:r.message})}}async handleToolExecutionCompleted(e){if(u.default.info(`[${o.name}] Received ${T.InternalEvents.TOOL_EXECUTION_COMPLETED} event for task ${e.taskId}, tool ${e.toolName}, status: ${e.status}`),this.server&&this.server.sockets)switch(e.status){case"success":u.default.info(`[${o.name}] Tool ${e.toolName} executed successfully for task ${e.taskId}`);break;case"error":u.default.info(`[${o.name}] Tool ${e.toolName} execution failed for task ${e.taskId}`);const t={clientId:e.clientId,taskId:e.taskId,error:e.result?.error||"Unknown tool execution error",type:"tool_error",code:e.result?.code,context:{toolName:e.toolName,blockId:e.blockId}};f.debugLogger.log(`Sending ${T.NotificationEvents.AGENT_ERROR} event to room ${e.taskId}`),f.debugLogger.dumpObject("AgentError payload",t),u.default.info(`[${o.name}] Sending agentError to room ${e.taskId}`),this.server.to(e.taskId).emit(T.NotificationEvents.AGENT_ERROR,t);break;case"rejected":u.default.info(`[${o.name}] Tool ${e.toolName} rejected for task ${e.taskId}`);try{await this.taskService.updateTask({taskId:e.taskId,status:S.TaskStatus.WAITING_FOR_INPUT});const t={taskId:e.taskId,clientId:e.clientId,status:S.TaskStatus.WAITING_FOR_INPUT};this.eventEmitter.emit(T.InternalEvents.TASK_UPDATED,t),u.default.info(`[${o.name}] Updated task ${e.taskId} status to waiting_for_input after tool rejection`)}catch(e){u.default.error(`[${o.name}] Error updating task status after tool rejection: ${e.message}`)}}else u.default.error(`[${o.name}] Server or sockets not initialized when handling tool execution completed for task ${e.taskId}`)}async handleAgentToolExecuted(e){u.default.warn(`[${o.name}] Deprecated ${T.InternalEvents.TOOL_EXECUTED} event received. Use ${T.InternalEvents.TOOL_EXECUTION_COMPLETED} instead.`)}async handleAgentToolError(e){u.default.warn(`[${o.name}] Deprecated ${T.InternalEvents.TOOL_ERROR} event received. Use ${T.InternalEvents.TOOL_EXECUTION_COMPLETED} instead.`),this.server&&this.server.sockets&&this.server.to(e.taskId).emit(T.NotificationEvents.AGENT_ERROR,e)}handleAgentTaskCompleted(e){u.default.info(`[${o.name}] Received ${T.InternalEvents.TASK_UPDATED} event for task ${e.taskId}`),u.default.info(`[${o.name}] Task status: ${e.status}`),this.server&&this.server.sockets?(f.debugLogger.log(`Sending ${T.NotificationEvents.TASK_STATUS_UPDATED} event to room ${e.taskId}`),f.debugLogger.dumpObject("TaskStatusUpdated payload",e),u.default.info(`[${o.name}] Sending taskStatusUpdated to room ${e.taskId}`),this.server.to(e.taskId).emit(T.NotificationEvents.TASK_STATUS_UPDATED,e)):u.default.error(`[${o.name}] Server or sockets not initialized when handling task completed for task ${e.taskId}`)}handleContextTruncated(e){u.default.info(`[${o.name}] Received ${T.NotificationEvents.CONTEXT_TRUNCATED} event for task ${e.taskId}`),u.default.info(`[${o.name}] Removed ${e.removedCount} messages: ${e.message}`),this.server&&this.server.sockets?(f.debugLogger.log(`Sending ${T.NotificationEvents.CONTEXT_TRUNCATED} event to room ${e.taskId}`),f.debugLogger.dumpObject("ContextTruncated payload",e),u.default.info(`[${o.name}] Sending contextTruncated to room ${e.taskId}`),this.server.to(e.taskId).emit(T.NotificationEvents.CONTEXT_TRUNCATED,e)):u.default.error(`[${o.name}] Server or sockets not initialized when handling context truncated for task ${e.taskId}`)}handleTaskCreated(e){u.default.info(`[${o.name}] Received ${T.InternalEvents.TASK_CREATED} event for task ${e.taskId}`);const t=this.clients.get(e.clientId);if(!t)return u.default.error(`[${o.name}] Client ${e.clientId} not found in local map when handling task created for task ${e.taskId}`),void f.debugLogger.log(`Client ${e.clientId} not found in local map for task ${e.taskId}`);const r={taskId:e.taskId,clientId:e.clientId};f.debugLogger.log(`Sending ${T.NotificationEvents.TASK_CREATED} event to client ${e.clientId} for task ${e.taskId}`),f.debugLogger.dumpObject("TaskCreated payload",r),u.default.info(`[${o.name}] Sending taskCreated to client ${e.clientId} for task ${e.taskId}`),t.emit(T.NotificationEvents.TASK_CREATED,r)}handleBlockCreated(e){if(u.default.debug(`[${o.name}] Received ${_.InternalBlockEvents.BLOCK_CREATED} event for block ${e.blockId} in task ${e.taskId}`),!this.server||!this.server.sockets)return void u.default.error(`[${o.name}] Server or sockets not initialized when handling block created for task ${e.taskId}`);const t={type:"block",taskId:e.taskId,blockId:e.blockId,role:e.role,blockType:e.blockType,tagName:e.tagName,status:e.status,content:e.content};f.debugLogger.log(`Sending ${T.NotificationEvents.BLOCK_EVENT} event to room ${e.taskId}`),f.debugLogger.dumpObject("BlockEvent payload",t),f.debugLogger.log(`Sending blockEvent (created) to room ${e.taskId}: blockId=${e.blockId}, status=${e.status}`),this.server.to(e.taskId).emit(T.NotificationEvents.BLOCK_EVENT,t)}handleBlockUpdated(e){if(u.default.debug(`[${o.name}] Received ${_.InternalBlockEvents.BLOCK_UPDATED} event for block ${e.blockId} in task ${e.taskId}`),!this.server||!this.server.sockets)return void u.default.error(`[${o.name}] Server or sockets not initialized when handling block updated for task ${e.taskId}`);const t={type:"blockUpdate",taskId:e.taskId,blockId:e.blockId};void 0!==e.appendContent&&(t.appendContent=e.appendContent),void 0!==e.status&&(t.newStatus=e.status),void 0!==e.blockType&&(t.newBlockType=e.blockType),void 0!==e.tagName&&(t.newTagName=e.tagName),void 0!==e.output&&(t.output=e.output),void 0!==e.errorText&&(t.errorText=e.errorText),void 0!==e.content&&void 0===e.appendContent&&(t.newContent=e.content),void 0!==e.description&&(t.description=e.description);const r=t.newStatus?`, newStatus=${t.newStatus}`:"";f.debugLogger.log(`Sending ${T.NotificationEvents.BLOCK_EVENT} event to room ${e.taskId}`),f.debugLogger.dumpObject("Sending BlockEvent payload",t),f.debugLogger.log(`Sending blockEvent (updated) to room ${e.taskId}: blockId=${e.blockId}${r}`),this.server.to(e.taskId).emit(T.NotificationEvents.BLOCK_EVENT,t)}handleUsageTracked(e){if(f.debugLogger.log(`Received ${_.InternalBlockEvents.USAGE_TRACKED} event for task ${e.taskId}`),!this.server||!this.server.sockets)return void u.default.error(`[${o.name}] Server or sockets not initialized when handling usage tracked for task ${e.taskId}`);const t={type:"usage",taskId:e.taskId,inputTokens:e.inputTokens,outputTokens:e.outputTokens,cacheWriteTokens:e.cacheWriteTokens,cacheReadTokens:e.cacheReadTokens,totalCost:e.totalCost};f.debugLogger.log(`Sending ${T.NotificationEvents.BLOCK_EVENT} event to room ${e.taskId}`),f.debugLogger.dumpObject("BlockEvent payload",t),f.debugLogger.log(`Sending blockEvent to room ${e.taskId}`),this.server.to(e.taskId).emit(T.NotificationEvents.BLOCK_EVENT,t)}async handleChangeAgentMode(e,t){f.debugLogger.log(`Received changeAgentMode from client ${t.id}`),f.debugLogger.dumpObject("ChangeAgentMode payload",e),u.default.info(`[${o.name}] Received changeAgentMode for task ${e.taskId} from client ${t.id}`),u.default.info(`[${o.name}] New mode: ${e.mode}`);try{const r=await this.taskService.getTask(e.taskId);if(r.status===S.TaskStatus.WAITING_FOR_INPUT||"created"===r.status){u.default.info(`[${o.name}] Task ${e.taskId} is in WAITING_FOR_INPUT status, processing mode change to ${e.mode}`),await this.taskService.updateTask({taskId:e.taskId,mode:e.mode});const n=await this.blockService.getLastBlockForTask(e.taskId);if(n&&"tool_call"===n.blockType&&"plan_mode_respond"===n.tagName){u.default.info(`[${o.name}] Last block is a plan_mode_respond tool call, proceeding with agent loop`);const r=(0,v.ulid)(),n={id:r,taskId:e.taskId,role:"user",segments:[{type:"text",content:`We have changed from ${"act"===e.mode?"PLAN to ACT":"ACT to PLAN"} mode so we want to ${"act"===e.mode?"implement the plan now":"plan our approach"}`}],providerId:"system",createdAt:new Date};await this.conversationHistoryService.addMessage(e.taskId,n),u.default.info(`[${o.name}] Added user message (ID: ${r}) for mode change to ${e.mode} for task ${e.taskId}`);const s=await this.conversationHistoryService.getHistory(e.taskId);u.default.info(`[${o.name}] Loaded updated history with ${s.length} messages for task ${e.taskId}`),await this.agentLoopOrchestrator.runAgentLoop(e.taskId,s,t.id,e.mode),u.default.info(`[${o.name}] Agent loop started with mode ${e.mode} for task ${e.taskId}`)}else{const s=n?`Last block was type: ${n.blockType}, tagName: ${n.tagName||"N/A"}`:"No last block found";u.default.info(`[${o.name}] Last block is not a plan_mode_respond tool call (${s}), not starting agent loop`),"created"===r.status&&await this.taskService.updateTask({taskId:e.taskId,status:S.TaskStatus.WAITING_FOR_INPUT}),this.eventEmitter.emit(T.InternalEvents.TASK_UPDATED,{taskId:e.taskId,clientId:t.id,status:S.TaskStatus.WAITING_FOR_INPUT,mode:e.mode}),u.default.info(`[${o.name}] Emitted task status update for task ${e.taskId} after mode change without starting agent loop`)}}else u.default.warn(`[${o.name}] Cannot change mode for task ${e.taskId} because it is in ${r.status} status (allowed statuses: waiting_for_input, created)`),this.eventEmitter.emit(T.InternalEvents.TOOL_ERROR,{clientId:t.id,taskId:e.taskId,error:`Cannot change mode while the agent is ${"active"===r.status?"thinking":r.status}. Please wait until the agent is ready for input.`,type:"task_error",context:{source:"changeAgentMode"}})}catch(r){u.default.error(`[${o.name}] Error handling mode change for task ${e.taskId}: ${r.message}\n${r.stack}`),f.debugLogger.log(`Error handling mode change for task ${e.taskId}: ${r.message}`),f.debugLogger.dumpObject("ModeChangeError payload",{taskId:e.taskId,message:r.message}),this.eventEmitter.emit(T.InternalEvents.TOOL_ERROR,{clientId:t.id,taskId:e.taskId,error:`Error changing mode: ${r.message}`,type:"task_error",context:{source:"changeAgentMode"}})}}async handleJoinTaskRoom(e,t){u.default.info(`[${o.name}] Client ${t.id} requested to join task room: ${e.taskId}`);try{await this.taskService.getTask(e.taskId),t.join(e.taskId),u.default.info(`[${o.name}] Client ${t.id} joined room ${e.taskId}`)}catch(e){u.default.error(`[${o.name}] Error joining task room: ${e.message}`),t.emit("error",{message:`Error joining task room: ${e.message}`})}}};t.EveAgentGateway=O,n([(0,c.WebSocketServer)(),s("design:type",l.Server)],O.prototype,"server",void 0),n([(0,c.SubscribeMessage)("echo"),i(0,(0,c.MessageBody)()),i(1,(0,c.ConnectedSocket)()),s("design:type",Function),s("design:paramtypes",[Object,l.Socket]),s("design:returntype",void 0)],O.prototype,"handleEcho",null),n([(0,c.SubscribeMessage)("getConfig"),i(0,(0,c.ConnectedSocket)()),s("design:type",Function),s("design:paramtypes",[l.Socket]),s("design:returntype",Promise)],O.prototype,"handleGetConfig",null),n([(0,c.SubscribeMessage)("createTask"),i(0,(0,c.MessageBody)()),i(1,(0,c.ConnectedSocket)()),s("design:type",Function),s("design:paramtypes",[Object,l.Socket]),s("design:returntype",Promise)],O.prototype,"handleCreateTask",null),n([(0,c.SubscribeMessage)("createTaskStep"),i(0,(0,c.MessageBody)()),i(1,(0,c.ConnectedSocket)()),s("design:type",Function),s("design:paramtypes",[Object,l.Socket]),s("design:returntype",Promise)],O.prototype,"handleCreateTaskStep",null),n([(0,c.SubscribeMessage)("updateTaskStep"),i(0,(0,c.MessageBody)()),i(1,(0,c.ConnectedSocket)()),s("design:type",Function),s("design:paramtypes",[Object,l.Socket]),s("design:returntype",Promise)],O.prototype,"handleUpdateTaskStep",null),n([(0,c.SubscribeMessage)("toolApproval"),i(0,(0,c.MessageBody)()),i(1,(0,c.ConnectedSocket)()),s("design:type",Function),s("design:paramtypes",[Object,l.Socket]),s("design:returntype",Promise)],O.prototype,"handleToolApproval",null),n([(0,c.SubscribeMessage)("userPrompt"),i(0,(0,c.MessageBody)()),i(1,(0,c.ConnectedSocket)()),s("design:type",Function),s("design:paramtypes",[Object,l.Socket]),s("design:returntype",Promise)],O.prototype,"handleUserPrompt",null),n([(0,c.SubscribeMessage)("cancelTask"),i(0,(0,c.MessageBody)()),i(1,(0,c.ConnectedSocket)()),s("design:type",Function),s("design:paramtypes",[Object,l.Socket]),s("design:returntype",Promise)],O.prototype,"handleCancelTask",null),n([(0,d.OnEvent)(T.InternalEvents.TOOL_EXECUTION_COMPLETED),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",Promise)],O.prototype,"handleToolExecutionCompleted",null),n([(0,d.OnEvent)(T.InternalEvents.TOOL_EXECUTED),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",Promise)],O.prototype,"handleAgentToolExecuted",null),n([(0,d.OnEvent)(T.InternalEvents.TOOL_ERROR),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",Promise)],O.prototype,"handleAgentToolError",null),n([(0,d.OnEvent)(T.InternalEvents.TASK_UPDATED),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",void 0)],O.prototype,"handleAgentTaskCompleted",null),n([(0,d.OnEvent)(T.NotificationEvents.CONTEXT_TRUNCATED),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",void 0)],O.prototype,"handleContextTruncated",null),n([(0,d.OnEvent)(T.InternalEvents.TASK_CREATED),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",void 0)],O.prototype,"handleTaskCreated",null),n([(0,d.OnEvent)(_.InternalBlockEvents.BLOCK_CREATED),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",void 0)],O.prototype,"handleBlockCreated",null),n([(0,d.OnEvent)(_.InternalBlockEvents.BLOCK_UPDATED),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",void 0)],O.prototype,"handleBlockUpdated",null),n([(0,d.OnEvent)(_.InternalBlockEvents.USAGE_TRACKED),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",void 0)],O.prototype,"handleUsageTracked",null),n([(0,c.SubscribeMessage)("changeAgentMode"),i(0,(0,c.MessageBody)()),i(1,(0,c.ConnectedSocket)()),s("design:type",Function),s("design:paramtypes",[Object,l.Socket]),s("design:returntype",Promise)],O.prototype,"handleChangeAgentMode",null),n([(0,c.SubscribeMessage)("joinTaskRoom"),i(0,(0,c.MessageBody)()),i(1,(0,c.ConnectedSocket)()),s("design:type",Function),s("design:paramtypes",[Object,l.Socket]),s("design:returntype",Promise)],O.prototype,"handleJoinTaskRoom",null),t.EveAgentGateway=O=o=n([(0,c.WebSocketGateway)({namespace:"eve-agent",cors:{origin:"*"}}),s("design:paramtypes",[m.EveConfigService,g.TaskService,y.ConversationHistoryService,k.AgentLoopOrchestrator,d.EventEmitter2,b.TaskEventHandler,h.UserService,_.BlockService,w.ToolExecutorService])],O)},242:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n(function_item\n  name: (identifier) @name.definition.function) @definition.function\n\n(struct_item\n  name: (type_identifier) @name.definition.struct) @definition.struct\n\n(enum_item\n  name: (type_identifier) @name.definition.enum) @definition.enum\n\n(trait_item\n  name: (type_identifier) @name.definition.trait) @definition.trait\n\n(impl_item\n  trait: (type_identifier) @name.definition.impl) @definition.impl\n"},251:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Epic=void 0;const o=r(9100),n=r(7655);t.Epic=class{constructor(e,t,r,n=[],s=(0,o.ulid)(),i=new Date,a=new Date){this.id=s,this.title=e,this.description=t,this.workspaceName=r,this.stories=n,this.createdAt=i,this.updatedAt=a}addStory(e){this.stories.push(e),this.updatedAt=new Date}removeStory(e){this.stories=this.stories.filter((t=>t.id!==e)),this.updatedAt=new Date}getStatus(){return 0===this.stories.length?n.StoryStatus.BACKLOG:this.stories.every((e=>e.status===n.StoryStatus.DONE))?n.StoryStatus.DONE:this.stories.some((e=>e.status===n.StoryStatus.IN_PROGRESS))?n.StoryStatus.IN_PROGRESS:n.StoryStatus.BACKLOG}}},260:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRulesPrompt=function(e){return`RULES\n\n- Your current working directory is: ${e.workingDir}\n- You cannot \`cd\` into a different directory to complete a task. You are stuck operating from '${e.workingDir}', so be sure to pass in the correct 'path' parameter when using tools that require a path.\n- Do not use the ~ character or $HOME to refer to the home directory.\n- Before using the execute_command tool, you must first think about the SYSTEM INFORMATION context provided to understand the user's environment and tailor your commands to ensure they are compatible with their system. You must also consider if the command you need to run should be executed in a specific directory outside of the current working directory '${e.workingDir}', and if so prepend with \`cd\`'ing into that directory && then executing the command (as one command since you are stuck operating from '${e.workingDir}'). For example, if you needed to run \`npm install\` in a project outside of '${e.workingDir}', you would need to prepend with a \`cd\` i.e. pseudocode for this would be \`cd (path to project) && (command, in this case npm install)\`.\n- When using the search_files tool, craft your regex patterns carefully to balance specificity and flexibility. Based on the user's task you may use it to find code patterns, TODO comments, function definitions, or any text-based information across the project. The results include context, so analyze the surrounding code to better understand the matches. Leverage the search_files tool in combination with other tools for more comprehensive analysis. For example, use it to find specific code patterns, then use read_file to examine the full context of interesting matches before using replace_in_file to make informed changes.\n- When creating a new project (such as an app, website, or any software project), organize all new files within a dedicated project directory unless the user specifies otherwise. Use appropriate file paths when creating files, as the write_to_file tool will automatically create any necessary directories. Structure the project logically, adhering to best practices for the specific type of project being created. Unless otherwise specified, new projects should be easily run without additional setup, for example most projects can be built in HTML, CSS, and JavaScript - which you can open in a browser.\n- Be sure to consider the type of project (e.g. Python, JavaScript, web application) when determining the appropriate structure and files to include. Also consider what files may be most relevant to accomplishing the task, for example looking at a project's manifest file would help you understand the project's dependencies, which you could incorporate into any code you write.\n- When making changes to code, always consider the context in which the code is being used. Ensure that your changes are compatible with the existing codebase and that they follow the project's coding standards and best practices.\n- When you want to modify a file, use the replace_in_file or write_to_file tool directly with the desired changes. You do not need to display the changes before using the tool.\n- Do not ask for more information than necessary. Use the tools provided to accomplish the user's request efficiently and effectively. When you've completed your task, you must use the attempt_completion tool to present the result to the user. The user may provide feedback, which you can use to make improvements and try again.\n- You are only allowed to ask the user questions using the ask_followup_question tool. Use this tool only when you need additional details to complete a task, and be sure to use a clear and concise question that will help you move forward with the task. However if you can use the available tools to avoid having to ask the user questions, you should do so. For example, if the user mentions a file that may be in an outside directory like the Desktop, you should use the list_files tool to list the files in the Desktop and check if the file they are talking about is there, rather than asking the user to provide the file path themselves.\n- When executing commands, if you don't see the expected output, assume the terminal executed the command successfully and proceed with the task. The user's terminal may be unable to stream the output back properly. If you absolutely need to see the actual terminal output, use the ask_followup_question tool to request the user to copy and paste it back to you.\n- The user may provide a file's contents directly in their message, in which case you shouldn't use the read_file tool to get the file contents again since you already have it.\n- Your goal is to try to accomplish the user's task, NOT engage in a back and forth conversation.\n- NEVER end attempt_completion result with a question or request to engage in further conversation! Formulate the end of your result in a way that is final and does not require further input from the user.\n- You are STRICTLY FORBIDDEN from starting your messages with "Great", "Certainly", "Okay", "Sure". You should NOT be conversational in your responses, but rather direct and to the point. For example you should NOT say "Great, I've updated the CSS" but instead something like "I've updated the CSS". It is important you be clear and technical in your messages.\n- When presented with images, utilize your vision capabilities to thoroughly examine them and extract meaningful information. Incorporate these insights into your thought process as you accomplish the user's task.\n- At the end of each user message, you will automatically receive environment_details. This information is not written by the user themselves, but is auto-generated to provide potentially relevant context about the project structure and environment. While this information can be valuable for understanding the project context, do not treat it as a direct part of the user's request or response. Use it to inform your actions and decisions, but don't assume the user is explicitly asking about or referring to this information unless they clearly do so in their message. When using environment_details, explain your actions clearly to ensure the user understands, as they may not be aware of these details.\n- Before executing commands, check the "Actively Running Terminals" section in environment_details. If present, consider how these active processes might impact your task. For example, if a local development server is already running, you wouldn't need to start it again. If no active terminals are listed, proceed with command execution as normal.\n- When using the replace_in_file tool, you must include complete lines in your SEARCH blocks, not partial lines. The system requires exact line matches and cannot match partial lines. For example, if you want to match a line containing "const x = 5;", your SEARCH block must include the entire line, not just "x = 5" or other fragments.\n- When using the replace_in_file tool, if you use multiple SEARCH/REPLACE blocks, list them in the order they appear in the file. For example if you need to make changes to both line 10 and line 50, first include the SEARCH/REPLACE block for line 10, followed by the SEARCH/REPLACE block for line 50.\n- It is critical you wait for the user's response after each tool use, in order to confirm the success of the tool use. For example, if asked to make a todo app, you would create a file, wait for the user's response it was created successfully, then create another file if needed, wait for the user's response it was created successfully, etc.`}},269:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.DbDebugContextService=void 0;const n=r(3563),s=r(290),i=r(9100),a=r(6297);let c=class{constructor(){this.storage=new s.AsyncLocalStorage,this.activeContexts=new Map}async runWithContext(e,t){const r={...e,operationId:(0,i.ulid)(),startTime:Date.now()};return this.activeContexts.set(r.operationId,r),a.debugLogger.log(`[DbDebugContext] Starting operation: ${r.operationName} (ID: ${r.operationId}, Task: ${r.taskId||"N/A"})`),this.storage.run(r,(async()=>{try{return await t()}finally{this.activeContexts.delete(r.operationId);const e=Date.now()-r.startTime;a.debugLogger.log(`[DbDebugContext] Finished operation: ${r.operationName} (ID: ${r.operationId}, Duration: ${e}ms)`)}}))}getContext(){return this.storage.getStore()}getActiveContexts(){return Array.from(this.activeContexts.values())}};t.DbDebugContextService=c,t.DbDebugContextService=c=o([(0,n.Injectable)()],c)},290:e=>{"use strict";e.exports=require("async_hooks")},305:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MAX_THINKING_TOKENS=t.DEFAULT_THINKING_TOKENS=t.DEFAULT_ANTHROPIC_MODEL_ID=t.ANTHROPIC_PROVIDER_ID=void 0,t.discoverAnthropicModels=async function(e,r){return n.default.info("[AnthropicProvider] Using hardcoded model list"),[{modelId:"claude-3-7-sonnet-20250219",providerId:t.ANTHROPIC_PROVIDER_ID,name:"Claude 3.7 Sonnet",contextWindow:2e5,maxOutputTokens:8192,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!0,supportsPromptCache:!0,supportsThinkingTokens:!0,supportsCancellation:!0,recommendedThinkingTokens:t.DEFAULT_THINKING_TOKENS,maxThinkingTokens:t.MAX_THINKING_TOKENS,inputCostPerMillionTokens:3,outputCostPerMillionTokens:15,cacheWritesPrice:3.75,cacheReadsPrice:.3,isDefaultForProvider:!0,metadata:{description:"Claude 3.7 Sonnet is an advanced large language model with improved reasoning, coding, and problem-solving capabilities."}},{modelId:"claude-3-5-sonnet-20241022",providerId:t.ANTHROPIC_PROVIDER_ID,name:"Claude 3.5 Sonnet",contextWindow:2e5,maxOutputTokens:8192,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!0,supportsPromptCache:!0,supportsThinkingTokens:!1,supportsCancellation:!0,inputCostPerMillionTokens:3,outputCostPerMillionTokens:15,cacheWritesPrice:3.75,cacheReadsPrice:.3,metadata:{description:"Claude 3.5 Sonnet offers strong performance for a wide range of tasks."}},{modelId:"claude-3-5-haiku-20241022",providerId:t.ANTHROPIC_PROVIDER_ID,name:"Claude 3.5 Haiku",contextWindow:2e5,maxOutputTokens:8192,supportsImages:!1,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!0,supportsThinkingTokens:!1,supportsCancellation:!0,inputCostPerMillionTokens:.8,outputCostPerMillionTokens:4,cacheWritesPrice:1,cacheReadsPrice:.08,metadata:{description:"Claude 3.5 Haiku is a faster, more affordable model for simpler tasks."}},{modelId:"claude-3-opus-20240229",providerId:t.ANTHROPIC_PROVIDER_ID,name:"Claude 3 Opus",contextWindow:2e5,maxOutputTokens:4096,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!0,supportsThinkingTokens:!1,supportsCancellation:!0,inputCostPerMillionTokens:15,outputCostPerMillionTokens:75,cacheWritesPrice:18.75,cacheReadsPrice:1.5,metadata:{description:"Claude 3 Opus is Anthropic's most powerful model, with state-of-the-art performance."}}]};const n=o(r(9055));t.ANTHROPIC_PROVIDER_ID="anthropic",t.DEFAULT_ANTHROPIC_MODEL_ID="claude-3-7-sonnet-20250219",t.DEFAULT_THINKING_TOKENS=1024,t.MAX_THINKING_TOKENS=1e4},308:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.FindFiles=void 0;const c=r(5534),l=r(1569),d=i(r(6928)),u=i(r(9896)),f=a(r(9055));class p extends c.Tool{static async main(e,t,r,o,n){f.default.info(`Starting find files search in workspace: ${e}`),f.default.info(`Parameters - startPath: ${t}, searchTerm: ${r}, fileExtensions: ${o}, max: ${n}`);const s=new p(e),i=await s._call({startPath:t,searchTerm:r,fileExtensions:o,max:n});return f.default.info("Find files search completed"),i}constructor(e){super(),this.name="find_files",this.description="Find all file paths in the repository that contain a given search term (case insensitive) in their names",this.schema=l.z.object({startPath:l.z.string().describe("The relative path under repo root to start search from (use '.' for entire repo)"),searchTerm:l.z.string().describe("Search term (case insensitive) or regex to match in the file names"),fileExtensions:l.z.string().optional().describe("Optional regex for file extensions to limit search to (e.g. '\\.(ts|js|java)$')"),max:l.z.number().optional().describe("Maximum number of files to return (optional, defaults to 50)")}),this.MAX_RESULTS=50,this.workspaceRootDir=e}async _call(e){try{const{startPath:t,searchTerm:r,fileExtensions:o,max:n}=e,s=d.resolve(this.workspaceRootDir,t),i=n||this.MAX_RESULTS,a=new RegExp(r,"i"),c=o?new RegExp(o):null,l=[];let p=!1;const h=e=>{if(l.length>=i)return void(p=!0);const t=u.readdirSync(e,{withFileTypes:!0});for(const r of t){if(l.length>=i){p=!0;break}const t=d.join(e,r.name);r.isDirectory()?h(t):r.isFile()&&a.test(r.name)&&(c&&!c.test(r.name)||l.push(d.relative(this.workspaceRootDir,t)))}};h(s);const m={matchingFiles:l};if(p){const e=`Stopped searching after finding ${i} files. There may be more matching files.`;f.default.info(e),m.warning=e}return f.default.info(`Found ${l.length} matching files`),JSON.stringify(m,null,2)}catch(e){throw f.default.error(`Error in find files search: ${e.message}`),new Error(`Error performing find files search: ${e.message}`)}}}t.FindFiles=p},353:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.ReportingController=void 0;const i=r(3563),a=r(7510);let c=class{constructor(e){this.reportingService=e}async getReport(e,t,r,o){return this.reportingService.generateReport(e,t,r,o)}};t.ReportingController=c,o([(0,i.Get)("report"),s(0,(0,i.Query)("from")),s(1,(0,i.Query)("to")),s(2,(0,i.Query)("period")),s(3,(0,i.Query)("workspaceName")),n("design:type",Function),n("design:paramtypes",[String,String,String,String]),n("design:returntype",Promise)],c.prototype,"getReport",null),t.ReportingController=c=o([(0,i.Controller)("reporting"),n("design:paramtypes",[a.ReportingService])],c)},361:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.ToolsModule=void 0;const n=r(3563),s=r(6158),i=r(4778),a=r(3177),c=r(5873),l=r(3880),d=r(7852),u=r(9161),f=r(6552),p=r(8624),h=r(1680),m=r(7967);let g=class{};t.ToolsModule=g,t.ToolsModule=g=o([(0,n.Module)({imports:[a.MutationsModule,c.WorkspaceModule,l.SessionModule,d.SourceArtefactModule,u.ChatCompletionModule,f.DatasetModule,p.StoredFileModule,h.DocstoreModule,m.ConfigModule],providers:[s.ToolFactoryService,i.McpToolFactoryService],exports:[s.ToolFactoryService]})],g)},376:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.DataSourceModule=void 0;const n=r(3563),s=r(2776);let i=class{};t.DataSourceModule=i,t.DataSourceModule=i=o([(0,n.Module)({providers:[{provide:s.AppDataSource,useFactory:s.getAppDataSource},{provide:"KNEX",useFactory:e=>e.knex,inject:[s.AppDataSource]}],exports:[s.AppDataSource,"KNEX"]})],i)},460:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n(class_declaration\n  name: (identifier) @name.definition.class) @definition.class\n\n(method_declaration\n  name: (identifier) @name.definition.method) @definition.method\n\n(interface_declaration\n  name: (identifier) @name.definition.interface) @definition.interface\n"},461:e=>{"use strict";e.exports=require("@nestjs/event-emitter")},499:function(e,t,r){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),n=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||o(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),n(r(7188),t),n(r(3192),t)},508:e=>{"use strict";e.exports=require("tree-sitter")},526:e=>{"use strict";e.exports=require("ignore")},538:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.HomeService=void 0;const u=r(3563),f=r(9668),p=d(r(9055)),h=r(2368),m=d(r(8938)),g=a(r(857));class y{constructor(e){const{requestContent:t,responseContent:r,startedAt:o,endedAt:n,...s}=e;this.requestData=s}toJSON(){return this.requestData}}let v=class{constructor(e,t){this.configService=e,this.userService=t,this.accessCheck={lastResultCode:null,timeOfLastCheck:null,failedToConnect:!1},this.userData=null,this.workerQueue=[],this.workerInterval=null,this.isShuttingDown=!1}onModuleInit(){this.startWorkerThread()}async onApplicationShutdown(e){p.default.info("Application shutdown initiated"+(e?` (signal: ${e})`:"")),this.isShuttingDown=!0,this.workerInterval&&clearInterval(this.workerInterval),this.workerQueue.length>0&&(p.default.info(`Processing ${this.workerQueue.length} remaining requests before shutdown`),await this.processRemainingRequests()),p.default.info("Shutdown process completed")}isValidUUID(e){return/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)}async checkAccess(){const e=this.configService.getProperty("EVE_API_KEY");if(!e)throw new Error("API Key is not configured");if(!this.isValidUUID(e))throw new Error("Invalid API Key");const t=g.hostname();try{const r=await m.default.post("https://otiiwxlfsrejhbrxdras.supabase.co/functions/v1/log-access",{hostname:t},{headers:{Authorization:`Bearer ${e}`},timeout:3e3});if(r.data&&r.data.userId&&r.data.email){const{userId:e,email:t}=r.data;this.userData={userId:e,email:t},p.default.info(`Access granted for user: ${t} (ID: ${e})`)}else p.default.warn("Log access response did not contain expected user data.");this.accessCheck={lastResultCode:r.status,timeOfLastCheck:new Date,failedToConnect:!1}}catch(e){if(m.default.isAxiosError(e)){const t=e;t.response?this.accessCheck={lastResultCode:t.response.status,timeOfLastCheck:new Date,failedToConnect:!1}:(t.request,this.accessCheck={lastResultCode:null,timeOfLastCheck:new Date,failedToConnect:!0})}else this.accessCheck={lastResultCode:null,timeOfLastCheck:new Date,failedToConnect:!0};p.default.error("Failed to check access",e)}return this.accessCheck}async isAccessOkay(){const e=new Date(Date.now()-864e5);return(!this.accessCheck.timeOfLastCheck||this.accessCheck.timeOfLastCheck<e||403===this.accessCheck.lastResultCode)&&await this.checkAccess(),200===this.accessCheck.lastResultCode||this.accessCheck.failedToConnect}async getUserData(){try{return await this.userService.getCurrentUser()}catch(e){if(e instanceof f.AuthenticationError?p.default.error(`[HomeService] Authentication error: ${e.message}`):p.default.error(`[HomeService] Error getting user data: ${e.message}`),this.userData)return this.userData;if(!this.userData)try{await this.checkAccess()}catch(e){p.default.error(`[HomeService] Error checking access: ${e.message}`)}if(!this.userData)throw e;return this.userData}}async logRequest(e){await this.isAccessOkay()&&!this.accessCheck.failedToConnect&&this.workerQueue.push(new y(e))}startWorkerThread(){this.workerInterval=setInterval((async()=>{if(this.workerQueue.length>0&&!this.isShuttingDown){const e=[...this.workerQueue];this.workerQueue=[],await this.sendRequestsToHomeServer(e)}}),1e4)}async processRemainingRequests(){if(this.workerQueue.length>0){const e=[...this.workerQueue];this.workerQueue=[],await this.sendRequestsToHomeServer(e)}}async sendRequestsToHomeServer(e){const t=this.configService.getProperty("EVE_API_KEY");if(!t)return void p.default.warn("API Key is not configured");const r=e.map((e=>m.default.post("https://otiiwxlfsrejhbrxdras.supabase.co/functions/v1/log-request",e,{headers:{Authorization:`Bearer ${t}`},timeout:5e3})));(await Promise.allSettled(r)).forEach(((e,t)=>{"rejected"===e.status&&p.default.warn(`Failed to log request at index ${t}`,e.reason)}))}};t.HomeService=v,t.HomeService=v=i([(0,u.Injectable)(),l(1,(0,u.Inject)((0,u.forwardRef)((()=>f.UserService)))),c("design:paramtypes",[h.ConfigService,f.UserService])],v)},573:e=>{"use strict";e.exports=require("rxjs")},639:e=>{"use strict";e.exports=require("@google/generative-ai")},646:e=>{"use strict";e.exports=require("@langchain/anthropic")},652:e=>{"use strict";e.exports=require("tree-sitter-c")},672:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MutationRepository=void 0;const a=r(3563),c=(r(1832),r(3903)),l=i(r(9055));let d=class{constructor(e){this.knex=e}async findAll(e,t){let r=this.knex("mutations").select("*");if(t&&(r=r.orderBy(t.field,t.order.toLowerCase())),e){const{page:t,limit:o}=e,n=(t-1)*o;r=r.offset(n).limit(o)}return r}async findById(e){return this.knex("mutations").where("id",e).first()}async findBySessionId(e,t,r){let o=this.knex("mutations").where("sessionId",e);if(r&&(o=o.orderBy(r.field,r.order.toLowerCase())),t){const{page:e,limit:r}=t,n=(e-1)*r;o=o.offset(n).limit(r)}return o}async findBySessionIds(e){return this.knex("mutations").whereIn("sessionId",e)}async findByRequestId(e){return this.knex("mutations").where("requestId",e)}async create(e){const t=(0,c.v4)(),r=(new Date).toISOString();try{return await this.knex("mutations").insert({id:t,...e,updatedAt:r}),t}catch(o){throw l.default.error("Failed to create mutation:",{error:o.message,stack:o.stack,mutation:{id:t,...e,updatedAt:r}}),o}}async update(e,t){await this.knex("mutations").where("id",e).update(t)}async delete(e){await this.knex("mutations").where("id",e).delete()}};t.MutationRepository=d,t.MutationRepository=d=o([(0,a.Injectable)(),s(0,(0,a.Inject)("KNEX")),n("design:paramtypes",[Function])],d)},715:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AppModule=void 0;const i=r(3563),a=r(2810),c=r(6928),l=r(6808),d=r(5873),u=r(3880),f=r(2177),p=r(9449),h=r(3177),m=r(3049),g=r(376),y=r(7967),v=r(1901),_=r(361),w=r(8221),k=r(7852),b=r(9161),S=r(4193),T=r(756),O=r(6552),P=r(8624),$=r(8377),I=r(1367),E=r(2776),R=s(r(9055));let C=class{constructor(e){this.appDataSource=e}async onModuleDestroy(){R.default.info("AppModule onModuleDestroy called.."),await this.appDataSource.close()}};t.AppModule=C,t.AppModule=C=o([(0,i.Module)({imports:[a.ServeStaticModule.forRoot({rootPath:(0,c.join)(__dirname,"..","..","vitify-webui","dist"),exclude:["/api*"]}),g.DataSourceModule,l.HelloWorldModule,d.WorkspaceModule,u.SessionModule,f.AgentsModule,p.LangchainModule,h.MutationsModule,m.AudioTranscriptionModule,y.ConfigModule,v.GitModule,_.ToolsModule,w.ReportingModule,k.SourceArtefactModule,b.ChatCompletionModule,S.HomeModule,T.PluginModule,O.DatasetModule,P.StoredFileModule,$.EpicsModule,I.EveAgentModule],providers:[{provide:E.AppDataSource,useFactory:E.getAppDataSource}]}),n("design:paramtypes",[E.AppDataSource])],C)},724:e=>{"use strict";e.exports=require("@langchain/core/output_parsers")},756:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.PluginModule=void 0;const n=r(3563),s=r(7307),i=r(2177),a=r(361),c=r(2424);let l=class{};t.PluginModule=l,t.PluginModule=l=o([(0,n.Module)({imports:[i.AgentsModule,a.ToolsModule,c.GraphAgentModule],providers:[s.PluginLoaderService],exports:[s.PluginLoaderService]})],l)},758:e=>{"use strict";e.exports=require("puppeteer")},779:e=>{"use strict";e.exports=require("@langchain/community/document_loaders/fs/csv")},811:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.RequestRepository=void 0;const i=r(3563);r(1832);let a=class{constructor(e){this.knex=e}async findAll(e,t){let r=this.knex("requests").select("*");if(t&&(r=r.orderBy(t.field,t.order.toLowerCase())),e){const{page:t,limit:o}=e,n=(t-1)*o;r=r.offset(n).limit(o)}return r}async findById(e){return this.knex("requests").where("requestId",e).first()}async findBySessionId(e,t,r){let o=this.knex("requests").where("sessionId",e);if(r&&(o=o.orderBy(r.field,r.order.toLowerCase())),t){const{page:e,limit:r}=t,n=(e-1)*r;o=o.offset(n).limit(r)}return o}async create(e){await this.knex("requests").insert(e)}async update(e,t){await this.knex("requests").where("requestId",e).update(t)}async delete(e){await this.knex("requests").where("requestId",e).delete()}async countBySessionId(e){const t=await this.knex("requests").where("sessionId",e).count("* as count").first();return t?.count}async updateRequest(e,t){await this.knex("requests").where("requestId",e).update(t)}async updateGitStats(e,t){await this.knex("requests").where("requestId",e).update(t)}async getSessionGitStats(e){return(await this.knex("requests").select("sessionId").sum("filesChanged as filesChanged").sum("insertions as insertions").sum("deletions as deletions").sum("testFilesChanged as testFilesChanged").sum("testInsertions as testInsertions").sum("testDeletions as testDeletions").sum("linesChanged as linesChanged").sum("testLinesChanged as testLinesChanged").whereIn("sessionId",e).groupBy("sessionId")).reduce(((e,t)=>(e[t.sessionId]={filesChanged:t.filesChanged,insertions:t.insertions,deletions:t.deletions,testFilesChanged:t.testFilesChanged,testInsertions:t.testInsertions,testDeletions:t.testDeletions,linesChanged:t.linesChanged,testLinesChanged:t.testLinesChanged},e)),{})}};t.RequestRepository=a,t.RequestRepository=a=o([(0,i.Injectable)(),s(0,(0,i.Inject)("KNEX")),n("design:paramtypes",[Function])],a)},818:e=>{"use strict";e.exports=require("dotenv")},857:e=>{"use strict";e.exports=require("os")},873:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TreeSitterService=void 0;const u=r(3563),f=d(r(508)),p=d(r(9055)),h=d(r(7660)),m=d(r(6844)),g=d(r(3433)),y=d(r(5915)),v=d(r(3297)),_=d(r(2083)),w=d(r(6540)),k=d(r(652)),b=d(r(8678)),S=d(r(9445)),T=c(r(6928)),O=r(5390);let P=n=class{constructor(){this.parsers={},p.default.info(`[${n.name}] TreeSitterService initialized`)}async onModuleInit(){await this.initializeParsers()}async initializeParsers(){try{const e=new f.default;e.setLanguage(h.default),this.parsers.js={parser:e,query:new f.default.Query(h.default,O.javascriptQuery)},this.parsers.jsx=this.parsers.js;const t=new f.default;t.setLanguage(m.default.typescript),this.parsers.ts={parser:t,query:new f.default.Query(m.default.typescript,O.typescriptQuery)};const r=new f.default;r.setLanguage(m.default.tsx),this.parsers.tsx={parser:r,query:new f.default.Query(m.default.tsx,O.typescriptQuery)};const o=new f.default;o.setLanguage(g.default),this.parsers.py={parser:o,query:new f.default.Query(g.default,O.pythonQuery)};const s=new f.default;s.setLanguage(y.default),this.parsers.java={parser:s,query:new f.default.Query(y.default,O.javaQuery)};const i=new f.default;i.setLanguage(v.default),this.parsers.rs={parser:i,query:new f.default.Query(v.default,O.rustQuery)};const a=new f.default;a.setLanguage(_.default),this.parsers.rb={parser:a,query:new f.default.Query(_.default,O.rubyQuery)};const c=new f.default;c.setLanguage(w.default),this.parsers.cpp={parser:c,query:new f.default.Query(w.default,O.cppQuery)},this.parsers.hpp=this.parsers.cpp;const l=new f.default;l.setLanguage(k.default),this.parsers.c={parser:l,query:new f.default.Query(k.default,O.cQuery)},this.parsers.h=this.parsers.c;const d=new f.default;d.setLanguage(b.default),this.parsers.cs={parser:d,query:new f.default.Query(b.default,O.csharpQuery)};const u=new f.default;u.setLanguage(S.default),this.parsers.go={parser:u,query:new f.default.Query(S.default,O.goQuery)},p.default.info(`[${n.name}] All parsers initialized successfully`)}catch(e){throw p.default.error(`[${n.name}] Error initializing parsers: ${e.message}\n${e.stack}`),e}}parseDefinitions(e,t){const r=T.extname(e).toLowerCase().slice(1),o=[];try{const e=this.parsers[r];if(!e)return p.default.warn(`[${n.name}] No parser available for extension: ${r}`),o;const{parser:s,query:i}=e,a=s.parse(t),c=i.captures(a.rootNode);c.sort(((e,t)=>e.node.startPosition.row-t.node.startPosition.row));const l=t.split("\n");let d=-1;return c.forEach((e=>{const{node:t,name:r}=e,n=t.startPosition.row,s=t.endPosition.row;r.includes("name")&&l[n]&&o.push(l[n].trim()),d=s})),o}catch(t){return p.default.error(`[${n.name}] Error parsing file ${e}: ${t.message}\n${t.stack}`),o}}isExtensionSupported(e){return e in this.parsers}};t.TreeSitterService=P,t.TreeSitterService=P=n=a([(0,u.Injectable)(),l("design:paramtypes",[])],P)},885:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.AudioTranscriptionController=void 0;const i=r(3563),a=r(9556),c=r(4562);let l=class{constructor(e){this.audioTranscriptionService=e}async transcribeAudio(e){try{return{transcription:await this.audioTranscriptionService.transcribe(e.buffer.toString("base64"))}}catch(e){throw console.error("Transcription error:",e),new Error("An error occurred during transcription")}}};t.AudioTranscriptionController=l,o([(0,i.Post)(),(0,i.UseInterceptors)((0,a.FileInterceptor)("audio")),s(0,(0,i.UploadedFile)()),n("design:type",Function),n("design:paramtypes",[Object]),n("design:returntype",Promise)],l.prototype,"transcribeAudio",null),t.AudioTranscriptionController=l=o([(0,i.Controller)("audio-transcription"),n("design:paramtypes",[c.AudioTranscriptionService])],l)},904:e=>{"use strict";e.exports=require("mime-types")},943:e=>{"use strict";e.exports=require("shell-quote")},989:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BaseToolCallingAgent=void 0;const i=r(1486),a=r(3563),c=r(1412),l=r(1e3),d=r(3239),u=r(2368),f=r(6910),p=r(538),h=r(7373),m=r(6158),g=r(8474),y=s(r(9055)),v=r(6295),_=r(2873),w=r(3470);let k=class extends v.SimpleAgentService{constructor(e,t,r,o,n,s,i){super(e,t,r,o,n,i),this.workspaceService=e,this.sessionService=t,this.homeService=r,this.summaryCompletion=o,this.toolFactory=n,this.checkpointerService=s,this.ruleService=i}getToolCallingScheme(){return new _.MultilineToolCallingScheme}async*handleAppStream(e,t,r){let o;if(this.checkpointerService&&e.sessionId)try{const t=await this.checkpointerService.loadState(e.sessionId);t&&(o=t,y.default.debug("Loaded existing conversation state for session: %s",e.sessionId))}catch(e){y.default.warn("Failed to load conversation state:",e)}const n=await this.chatModelManager.getModel(e.config,this.getModelCategory(),this.isPrivateModelsOnly()),s=this.getTools(t);o||(o=this.createInitialState());const a=c.AgentRequest.getFirstTextContent(e.content),l=u.ConfigService.getInstance().getNumericProperty(f.ConfigPropNames.AGENT_ITERATION_LIMIT,20);let d=0,p=!1;const h=this.getToolCallingScheme();let m=await this.getSpecificSystemPrompt(t)+h.getSystemPrompt(t,s);const g=await this.getAgentRules();for(g&&(m=m+"\n\nAdditional system rules:\n"+g),y.default.debug("System prompt was:\n%s",m),o.messages.push(new i.SystemMessage({content:m})),o.messages.push(new i.HumanMessage({content:a}));d<l&&!p;){d++,y.default.info(`Iteration ${d}: Asking model for response...`);const t=await n.baseChatModel.invoke(o.messages);o.messages.push(t),this.checkpointerService&&e.sessionId&&await this.checkpointerService.saveState(e.sessionId,o),yield o;const r=t.content.toString();let a;y.default.info(`Iteration ${d}: Agent response:\n${r}`);try{a=h.parseLLMResponse(r)}catch(e){o.messages.push(new i.HumanMessage({content:"Error: Your response could not be parsed as valid. Please ensure you follow the correct format."}));continue}const{response:c,tool_calls:l,next:u}=a;if("finish"!==u)if("call_tools"===u&&Array.isArray(l))for(const e of l){const{tool_name:t,args:r}=e,n=s.find((e=>e.name===t));if(n)try{const e=await n.call(r);o.messages.push(new i.HumanMessage({content:`Tool: '${t}' output:\n${e}`}))}catch(e){y.default.error(`Error executing tool '${t}':`,e),o.messages.push(new i.HumanMessage({content:`Tool: Error executing '${t}': ${e.message}`})),yield o}else o.messages.push(new i.HumanMessage({content:`Tool: Unknown tool '${t}'.`})),yield o}else"continue"!==u&&(o.messages.push(new i.HumanMessage({content:`Tool: Unrecognized 'next' value '${u}'. Please use 'call_tools', 'continue', or 'finish'.`})),yield o);else p=!0}p||(o.messages.push(new i.SystemMessage({content:`Maximum iterations (${l}) reached without completion.`})),yield o)}};t.BaseToolCallingAgent=k,t.BaseToolCallingAgent=k=o([(0,a.Injectable)(),n("design:paramtypes",[g.WorkspaceService,h.SessionService,p.HomeService,d.SummaryCompletion,m.ToolFactoryService,l.CheckpointerService,w.AgentRuleService])],k)},1e3:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.CheckpointerService=void 0;const s=r(3563),i=r(9314);let a=class{constructor(){this.checkpointer=new i.MemorySaver,this.stateMap=new Map}getCheckpointer(){return this.checkpointer}async saveState(e,t){this.stateMap.set(e,t)}async loadState(e){return this.stateMap.get(e)||null}};t.CheckpointerService=a,t.CheckpointerService=a=o([(0,s.Injectable)(),n("design:paramtypes",[])],a)},1002:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},1075:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.createBlockManager=function(e){return{safeEmitUpdate(t){const r=e.getCurrentBlockId();return r?{type:"blockUpdate",blockId:r,...t}:(s.default.error("[BlockManager] CRITICAL: Attempting to yield blockUpdate with null currentBlockId!"),null)},async*finishCurrentBlockIfNeeded(){if(e.isBlockGenerating()&&e.getCurrentBlockId()){const t=this.safeEmitUpdate({newStatus:"finished"});t&&(yield t),e.setBlockGenerating(!1),e.setCurrentBlockId(null),e.setCurrentBlockType(null),e.setCurrentTagName(null)}},async*startNewBlock(t,r,o){yield*this.finishCurrentBlockIfNeeded();const s=(0,n.ulid)();e.setCurrentBlockId(s),e.setCurrentBlockType(t),e.setCurrentTagName(r),e.setBlockGenerating(!0);const i={blockId:s,blockType:t,status:"error"===t?"error":"generating",content:o};"tool_call"!==t&&"thinking"!==t||!r||(i.tagName=r),"error"===t&&(i.errorText=o,i.content=""),yield{type:"block",block:i}},async*appendOrStartText(t,r){if(t)if(r.value+=t,e.isBlockGenerating()&&e.getCurrentBlockId()){const e=this.safeEmitUpdate({appendContent:t});e&&(yield e)}else t.trim()&&(yield*this.startNewBlock("text",null,t))},async*appendAndFinishText(t,r){if(t)if(r.value+=t,e.isBlockGenerating()&&e.getCurrentBlockId()){const r=this.safeEmitUpdate({appendContent:t,newStatus:"finished"});r&&(yield r),e.setBlockGenerating(!1),e.setCurrentBlockId(null),e.setCurrentBlockType(null),e.setCurrentTagName(null)}else if(t.trim()){yield*this.startNewBlock("text",null,t);const r=this.safeEmitUpdate({newStatus:"finished"});r&&(yield r),e.setBlockGenerating(!1),e.setCurrentBlockId(null),e.setCurrentBlockType(null),e.setCurrentTagName(null)}},async*createToolCallBlockFromContent(t,r){const o=(e=>{const t=e.match(/^\s*```(?:\w*\s*)?\n?([\s\S]*?)\n?\s*```\s*$/);return t&&void 0!==t[1]?t[1]:e})(r);yield*this.finishCurrentBlockIfNeeded(),yield*this.startNewBlock("tool_call",t,o);const n=this.safeEmitUpdate({newStatus:"finished"});n&&(yield n),s.default.info(`[BlockManager] Created tool_call block for "${t}" from extracted content`),e.setBlockGenerating(!1),e.setCurrentBlockId(null),e.setCurrentBlockType(null),e.setCurrentTagName(null)}}};const n=r(9100),s=o(r(9055))},1080:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigProperty=void 0;t.ConfigProperty=class{constructor(e,t){this.name=e,this.value=t}}},1114:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n(class_declaration\n  name: (identifier) @name.definition.class) @definition.class\n\n(method_declaration\n  name: (identifier) @name.definition.method) @definition.method\n\n(interface_declaration\n  name: (identifier) @name.definition.interface) @definition.interface\n\n(namespace_declaration\n  name: (identifier) @name.definition.namespace) @definition.namespace\n"},1115:e=>{"use strict";e.exports=require("yauzl")},1140:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GeminiModelClient=void 0;const i=r(3563),a=r(639),c=r(5562),l=s(r(9055)),d=r(9448);let u=class{constructor(e,t){this.config=e,this.client=new a.GoogleGenerativeAI(this.config.apiKey),this.options={enableVerboseLogging:!1,...t},this.stateManager=(0,d.createStateManager)(),this.patternUtils=(0,d.createPatternUtils)(),this.blockManager=(0,d.createBlockManager)(this.stateManager),this.streamProcessor=(0,d.createStreamProcessor)(this.blockManager,this.stateManager,this.patternUtils);const r=(0,c.getMaskedApiKey)(this.config.apiKey);l.default.info(`[GeminiModelClient] Initialized for model: ${this.config.modelId}`),l.default.info(`[GeminiModelClient] Using API key: ${r}`),this.options.enableVerboseLogging&&l.default.info(`[GeminiModelClient] Configuration: ${JSON.stringify({...this.options})}`),this.modelMetadata={modelId:this.config.modelId,providerId:"gemini",name:this.config.modelId,contextWindow:1e6,maxOutputTokens:8192,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!1,supportsThinkingTokens:!1}}getModelId(){return this.config.modelId}getModelMetadata(){return this.modelMetadata}setModelMetadata(e){this.modelMetadata=e,l.default.info(`[GeminiModelClient] Updated metadata for ${this.config.modelId}: MaxOutputTokens=${this.modelMetadata.maxOutputTokens}`)}async*generateResponse(e,t,r,o){if(l.default.info(`[GeminiModelClient] Generating response with system prompt length: ${e.length} characters`),l.default.info(`[GeminiModelClient] Messages count: ${t.length}`),0===t.length)throw l.default.error("[GeminiModelClient] No messages provided to generateResponse"),new Error("messages: at least one message is required");this.stateManager.reset();try{const n=t.map(c.convertEveMessageToGemini),s=n[n.length-1];l.default.info(`[GeminiModelClient] Last message role: ${s.role}`);let i="Non-string or empty content";s.parts&&s.parts.length>0&&s.parts[0].text&&(i=`${s.parts[0].text.substring(0,300)}...`),l.default.info(`[GeminiModelClient] Last message content (first 300 chars): ${i}`),o?(l.default.info(`[GeminiModelClient] Using abort signal, current state: ${o.aborted}`),o.addEventListener("abort",(()=>l.default.info("[GeminiModelClient] Abort signal triggered")))):l.default.info("[GeminiModelClient] No abort signal provided");const d=this.client.getGenerativeModel({model:this.config.modelId,systemInstruction:e,generationConfig:{temperature:0,maxOutputTokens:this.modelMetadata.maxOutputTokens||8192},safetySettings:[{category:a.HarmCategory.HARM_CATEGORY_HARASSMENT,threshold:a.HarmBlockThreshold.BLOCK_NONE},{category:a.HarmCategory.HARM_CATEGORY_HATE_SPEECH,threshold:a.HarmBlockThreshold.BLOCK_NONE},{category:a.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,threshold:a.HarmBlockThreshold.BLOCK_NONE},{category:a.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,threshold:a.HarmBlockThreshold.BLOCK_NONE}]}),u=await d.generateContentStream({contents:n,safetySettings:[{category:a.HarmCategory.HARM_CATEGORY_HARASSMENT,threshold:a.HarmBlockThreshold.BLOCK_NONE},{category:a.HarmCategory.HARM_CATEGORY_HATE_SPEECH,threshold:a.HarmBlockThreshold.BLOCK_NONE},{category:a.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,threshold:a.HarmBlockThreshold.BLOCK_NONE},{category:a.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,threshold:a.HarmBlockThreshold.BLOCK_NONE}]});yield*this.streamProcessor.processStream(u.stream,r,o);try{const e=await u.response,t=e?.usageMetadata;t?(l.default.info(`[GeminiModelClient] Usage - Prompt: ${t.promptTokenCount}, Candidates: ${t.candidatesTokenCount}, Total: ${t.totalTokenCount}`),yield{type:"usage",inputTokens:t.promptTokenCount||0,outputTokens:t.candidatesTokenCount||0}):(l.default.warn("[GeminiModelClient] Usage metadata not found in final response."),yield{type:"usage",inputTokens:0,outputTokens:0})}catch(e){l.default.error(`[GeminiModelClient] Error getting usage metadata: ${e.message}`),yield{type:"usage",inputTokens:0,outputTokens:0}}}catch(e){const t=(0,c.getMaskedApiKey)(this.config.apiKey);throw l.default.error(`[GeminiModelClient] Error in generateResponse: ${e.message}`,e.stack),l.default.error(`[GeminiModelClient] Using API key: ${t}`),e}}};t.GeminiModelClient=u,t.GeminiModelClient=u=o([(0,i.Injectable)(),n("design:paramtypes",[Object,Object])],u)},1162:(e,t)=>{"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.ModelCategory=void 0,function(e){e.CODING="CODING",e.REASONING="REASONING",e.SUMMARISATION="SUMMARISATION",e.RAG_QUERY="RAG_QUERY",e.ORCHESTRATION="ORCHESTRATION",e.ARCHITECT="ARCHITECT"}(r||(t.ModelCategory=r={}))},1208:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AnthropicAdapter=void 0;const i=r(3563),a=r(146),c=s(r(9055)),l=r(3118);let d=class{constructor(e){this.provider=e,this.id="anthropic",this.name="Anthropic",this.messageTransformer=new l.AnthropicMessageTransformer}getProvider(){return this.provider}getModelClient(e){return this.provider.getModelClient(e)}toProviderFormat(e){return this.messageTransformer.toProviderFormat(e)}fromProviderFormat(e,t=""){return this.messageTransformer.fromProviderFormat(e,t).map((e=>({...e,taskId:e.taskId||t||""})))}extractMetadata(e){return c.default.debug("[AnthropicAdapter] extractMetadata called, returning null as logic is in ModelClient."),null}supportsThinking(){return!0}supportsFormatConversion(e){return!0}};t.AnthropicAdapter=d,t.AnthropicAdapter=d=o([(0,i.Injectable)(),n("design:paramtypes",[a.AnthropicProvider])],d)},1263:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ProductAgentService=void 0;const a=r(3563),c=r(6158),l=r(3470),d=i(r(9055)),u=r(2300),f=r(5277),p=r(8921);let h=class extends f.GraphAgentService{constructor(e,t,r){super(e,t,r),this.agentCollaborator=e,this.toolFactoryService=t,this.ruleService=r}getName(){return"product-agent"}async getTools(e){return await this.toolFactoryService.createTools(["update_file","delete_file","fetch_web_page","current_timestamp","serp_api"],e)}async getSystemPrompt(e){let t=`As an AI Product Manager, your role is to define, refine, and manage product requirements through epics and stories. You excel at:\n\n1. Creating and Refining Requirements:\n   - Developing clear, comprehensive epic requirements\n   - Breaking down epics into well-defined stories\n   - Writing detailed, testable acceptance criteria\n   - Ensuring requirements are SMART (Specific, Measurable, Achievable, Relevant, Time-bound)\n\n2. Stakeholder Perspective Analysis:\n   - Product Value: Ensuring features deliver clear business value\n   - User Experience: Considering the end-user journey and usability\n   - Quality Assurance: Including testability and edge cases\n   - Operations: Considering scalability, monitoring, and maintenance\n   - Engineering: Evaluating technical feasibility and complexity\n   - Security: Identifying potential security implications\n   - Compliance: Ensuring regulatory and policy compliance\n\n3. Story Creation Best Practices:\n   - Write user-centric stories following the format:\n     "A a [user type], I want [goal] so that [benefit]"\n   - Create comprehensive acceptance criteria that:\n     * Are each formatted as "ACxx: Given a [user type], when [action], then [outcome]"\n     * Are specific and testable\n     * Cover happy path and edge cases\n     * Include performance requirements\n     * Specify error handling\n     * Define security requirements\n     * Include monitoring/observability requirements\n\n4. Requirements Quality Standards:\n   - Clarity: Unambiguous and easily understood\n   - Completeness: Covers all aspects of the feature\n   - Consistency: Aligns with existing features and patterns\n   - Testability: Can be verified through testing\n   - Feasibility: Technically achievable within constraints\n   - Traceability: Links to business goals and metrics\n\n${await p.EpicsPrompts.updateEpicInstructions(e)}\n\n${await p.EpicsPrompts.updateEpicStories(e)}\n\n${await p.EpicsPrompts.existingEpicsAndStories(e)}\n\n${e.productHints()?`Product Guidelines:\n${e.productHints()}`:""}\n\nIMPORTANT: Always write requirements from the user's perspective\nIMPORTANT: Every story must have clear, testable acceptance criteria\nIMPORTANT: Consider all stakeholder perspectives when defining requirements\nIMPORTANT: Ensure requirements are complete, clear, and unambiguous\nIMPORTANT: Include non-functional requirements (performance, security, etc.)\nIMPORTANT: Use the current_timestamp tool for timestamps\nIMPORTANT: Stories should be independent and deliverable\nIMPORTANT: DO NOT CREATE ANY STORIES UNLESS YOU ARE ASKED TO DO SO EXPLICITLY\n`;return d.default.debug(`Product Agent system prompt for workspace '${e.workspace.name}' (length: ${t.length} chars): ${t}`),t}};t.ProductAgentService=h,t.ProductAgentService=h=o([(0,a.Injectable)(),s(0,(0,a.Inject)((0,a.forwardRef)((()=>u.GraphAgentCollaborator)))),n("design:paramtypes",[u.GraphAgentCollaborator,c.ToolFactoryService,l.AgentRuleService])],h)},1280:(e,t)=>{"use strict";var r,o,n;Object.defineProperty(t,"__esModule",{value:!0}),t.ClientToServerEvents=t.NotificationEvents=t.InternalEvents=t.TASK_UPDATE_EVENT=void 0,t.TASK_UPDATE_EVENT="agent.taskUpdate",function(e){e.TOOL_EXECUTED="agent.tool.executed",e.TOOL_ERROR="agent.tool.error",e.TASK_CREATED="agent.task.created",e.TASK_UPDATED="agent.task.updated",e.BLOCK_CREATED="agent.block.created",e.BLOCK_UPDATED="agent.block.updated",e.BLOCK_USAGE_TRACKED="agent.block.usage.tracked",e.TOOL_CALL_DETECTED="agent.tool.call.detected",e.TOOL_EXECUTION_COMPLETED="agent.tool.execution.completed"}(r||(t.InternalEvents=r={})),function(e){e.TASK_STATUS_UPDATED="taskStatusUpdated",e.AGENT_ERROR="agentError",e.CONTEXT_TRUNCATED="contextTruncated",e.TASK_CREATED="taskCreated",e.BLOCK_EVENT="blockEvent"}(o||(t.NotificationEvents=o={})),function(e){e.USER_PROMPT="userPrompt",e.TOOL_APPROVAL="toolApproval",e.CREATE_TASK="createTask",e.CANCEL_TASK="cancelTask",e.CHANGE_AGENT_MODE="changeAgentMode"}(n||(t.ClientToServerEvents=n={}))},1302:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PROVIDER_CANCELLATION_STRATEGIES=void 0,t.getCancellationStrategy=i,t.setupAbortHandling=function(e,t,r){if(!r)return void n.default.info(`[CancellationUtils] No abort signal provided for ${t} stream`);const o=i(t);r.aborted&&(n.default.info(`[CancellationUtils] Abort signal already aborted for ${t} stream`),s.debugLogger.log(`Abort signal already aborted for ${t} stream`));r.addEventListener("abort",(()=>{n.default.info(`[CancellationUtils] Abort signal triggered for ${t} stream`),s.debugLogger.log(`ABORT SIGNAL TRIGGERED for ${t} stream`),o.cancelStream(e)})),n.default.info(`[CancellationUtils] Abort handling set up for ${t} stream`)},t.createAbortableStream=async function*(e,t){if(t?.aborted)throw n.default.info("[CancellationUtils] Stream aborted before processing started"),new Error("Operation aborted before stream processing started");try{for await(const r of e){if(t?.aborted)throw n.default.info("[CancellationUtils] Stream aborted during processing"),new Error("Operation aborted during stream processing");yield r}}catch(e){if(t?.aborted||e.message?.includes("abort")||e.message?.includes("cancel"))throw n.default.info(`[CancellationUtils] Stream aborted with error: ${e.message}`),new Error("Operation aborted: "+e.message);throw e}};const n=o(r(9055)),s=r(6297);function i(e){return t.PROVIDER_CANCELLATION_STRATEGIES[e]||t.PROVIDER_CANCELLATION_STRATEGIES.default}t.PROVIDER_CANCELLATION_STRATEGIES={anthropic:{supportsNativeCancellation:!0,cancelStream:e=>{e&&"function"==typeof e.cancel&&e.cancel()},shouldCheckAbortBeforeChunk:!0},google:{supportsNativeCancellation:!1,cancelStream:e=>{n.default.info("[CancellationUtils] Attempting to cancel Google stream (may not be supported)")},shouldCheckAbortBeforeChunk:!0},default:{supportsNativeCancellation:!1,cancelStream:()=>{n.default.info("[CancellationUtils] Using default cancellation strategy (no-op)")},shouldCheckAbortBeforeChunk:!0}}},1321:e=>{"use strict";e.exports=require("reflect-metadata")},1367:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.EveAgentModule=void 0;const i=r(3563),a=r(7967),c=r(9191),l=r(9668),d=r(461),u=r(4193),f=r(5873),p=r(9102),h=r(5369),m=r(6206),g=r(8620),y=r(5702),v=r(5499),_=r(5630),w=r(1208),k=r(7916),b=r(4624),S=r(233),T=r(2597),O=r(3569),P=r(1991),$=r(5884),I=r(6550),E=r(269),R=r(6963),C=r(5324),A=r(6595),M=r(9076),D=r(2776),j=r(873),x=r(7516),N=r(6349),F=r(6647),L=r(2141),U=r(4155),B=r(7403),q=r(8010),G=r(2398),H=r(8615),W=r(6170),K=r(8190),z=r(3220),X=r(6823),Y=r(5156),J=r(9235),V=r(8507),Q=r(5814),Z=r(7050),ee=r(2115),te=r(1600),re=r(5177),oe=r(9220),ne=r(4230),se=r(9841),ie=r(6292),ae=r(3911);let ce=class{constructor(e,t,r,o,n,s){this.toolProvider=e,this.treeSitterService=t,this.contextManagerService=r,this.dbDebugContextService=o,this.appDataSource=n,this.toolFactories=s}onModuleInit(){for(const e of this.toolFactories)this.toolProvider.registerToolFactory(e);this.appDataSource.setDbDebugContextService(this.dbDebugContextService)}};t.EveAgentModule=ce,t.EveAgentModule=ce=o([(0,i.Module)({imports:[d.EventEmitterModule.forRoot(),(0,i.forwardRef)((()=>u.HomeModule)),f.WorkspaceModule,a.ConfigModule],controllers:[T.EveAgentController,O.ConfigController,P.TaskHistoryController,$.BlockController],providers:[{provide:D.AppDataSource,useFactory:D.getAppDataSource},{provide:"KNEX",useFactory:e=>e.knex,inject:[D.AppDataSource]},E.DbDebugContextService,p.EveConfigService,m.ProviderRegistry,g.LlmMetadataService,c.LlmInitializerService,y.ModelRefreshService,v.ToolResultTransformerService,_.AnthropicProvider,_.GeminiProvider,w.AnthropicAdapter,k.GeminiAdapter,b.ProviderAdapterRegistry,{provide:"PROVIDER_ADAPTERS",useFactory:(e,t)=>[e,t],inject:[w.AnthropicAdapter,k.GeminiAdapter]},h.ApiHandlerFactory,S.EveAgentGateway,I.TaskService,j.TreeSitterService,x.ContextManagerService,N.ConversationHistoryService,F.TaskHistoryService,L.FileSystemService,U.ResponseFormatterService,B.FileContentOptimizerService,q.ToolExecutorService,G.ToolProvider,H.PromptBuilderService,W.RulesService,l.UserService,C.BlockService,R.AgentStateManager,R.ContextTruncationHandler,R.LlmStreamProcessorBlock,R.AgentLoopOrchestrator,A.TaskEventHandler,M.FeedbackEventHandler,K.CancellationResetService,ie.PersonaRegistry,ae.SoftwareEngineerPersona,z.ReadFileToolFactory,X.WriteToFileToolFactory,Y.ReplaceInFileToolFactory,J.ListFilesToolFactory,V.SearchFilesToolFactory,Q.ExecuteCommandToolFactory,Z.ListCodeDefinitionsToolFactory,ee.McpHubService,te.UseMcpToolToolFactory,re.AccessMcpResourceToolFactory,oe.AskFollowupQuestionToolFactory,ne.PlanModeRespondToolFactory,se.AttemptCompletionToolFactory,{provide:"TOOL_FACTORIES",useFactory:(e,t,r,o,n,s,i,a,c,l,d,u)=>[e,t,r,o,n,s,i,a,c,l,d,u],inject:[z.ReadFileToolFactory,X.WriteToFileToolFactory,Y.ReplaceInFileToolFactory,J.ListFilesToolFactory,V.SearchFilesToolFactory,Q.ExecuteCommandToolFactory,Z.ListCodeDefinitionsToolFactory,te.UseMcpToolToolFactory,re.AccessMcpResourceToolFactory,oe.AskFollowupQuestionToolFactory,ne.PlanModeRespondToolFactory,se.AttemptCompletionToolFactory]}],exports:[p.EveConfigService,m.ProviderRegistry,g.LlmMetadataService,c.LlmInitializerService,y.ModelRefreshService,v.ToolResultTransformerService,_.AnthropicProvider,_.GeminiProvider,h.ApiHandlerFactory,q.ToolExecutorService,G.ToolProvider,E.DbDebugContextService,l.UserService,N.ConversationHistoryService,b.ProviderAdapterRegistry]}),s(5,(0,i.Inject)("TOOL_FACTORIES")),n("design:paramtypes",[G.ToolProvider,j.TreeSitterService,x.ContextManagerService,E.DbDebugContextService,D.AppDataSource,Array])],ce)},1391:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n(function_signature\n  name: (identifier) @name.definition.function) @definition.function\n\n(method_signature\n  name: (property_identifier) @name.definition.method) @definition.method\n\n(abstract_method_signature\n  name: (property_identifier) @name.definition.method) @definition.method\n\n(abstract_class_declaration\n  name: (type_identifier) @name.definition.class) @definition.class\n\n(module\n  name: (identifier) @name.definition.module) @definition.module\n\n(function_declaration\n  name: (identifier) @name.definition.function) @definition.function\n\n(method_definition\n  name: (property_identifier) @name.definition.method) @definition.method\n\n(class_declaration\n  name: (type_identifier) @name.definition.class) @definition.class\n"},1412:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AgentRequest=void 0;const o=r(2003),n=r(9100);class s{constructor(e,t,r,n=new o.AgentConfig,i){this.sender=e,this.content=t,this.sessionId=r,this.config=n,this.workspaceName=i,this.sessionId=r||s.generateRandomSessionId()}static fromJSON(e){const{sender:t,content:r,sessionId:n,config:i,workspaceName:a,agent:c}=e;if(!r)throw new Error("Missing required field 'content'");const l=i?Object.assign(new o.AgentConfig,i):new o.AgentConfig,d=n||s.generateRandomSessionId();return new s(t,r,d,l,a)}static generateRandomSessionId(){return(0,n.ulid)()}static getFirstTextContent(e){if("string"==typeof e)return e;if(!Array.isArray(e))throw new Error("Invalid content type");{const t=e[0];if("text"===t.type)return t.text||""}}}t.AgentRequest=s},1463:e=>{"use strict";e.exports=require("@langchain/groq")},1486:e=>{"use strict";e.exports=require("@langchain/core/messages")},1544:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ChatModelManager=void 0;const n=r(4264),s=r(1986),i=r(4659),a=r(8312),c=r(2088),l=r(2003),d=o(r(9055)),u=r(1162),f=r(2368),p=r(2097),h=r(8910),m=r(3971),g=r(59),y=r(9352),v=r(9361);class _{constructor(){this.providers=[new s.AnthropicProvider,new n.OpenAIProvider,new i.GroqProvider,new a.OllamaProvider,new p.HyperbolicProvider,new h.MistralProvider,new m.OpenRouterProvider,new g.GlhfProvider,new y.DeepSeekProvider,new v.GoogleProvider]}static getInstance(){return _.instance||(_.instance=new _),_.instance}static async getModel(e,t=u.ModelCategory.CODING){return _.getInstance().getModel(e,t)}async getModel(e,t=u.ModelCategory.CODING,r=!1){let o=e?.model;if(!o){o=(void 0!==e?.privateModelsRequired?e.privateModelsRequired:r)?f.ConfigService.getInstance().getProperty(`PRIVATE_${t}_MODEL`):f.ConfigService.getInstance().getProperty(`DEFAULT_${t}_MODEL`)}const n=await this.getProvider(o),s=await n.getModelDescriptor(o),i=n.getBaseChatModel(o,e||new l.AgentConfig),a=n.getChatModelOptions(s,e);return new c.ChatModel(s,i,a)}async getValidModelDescriptors(){const e=this.providers.filter((e=>e.isValid())).map((async e=>{try{return await e.getModelDescriptors()}catch(t){return d.default.error(`Error fetching model descriptors from provider ${e.getName()}:`,t),[]}}));return(await Promise.all(e)).flat()}async getValidModelNames(){return(await this.getValidModelDescriptors()).map((e=>e.name))}async getValidModelFullNames(){return(await this.getValidModelDescriptors()).map((e=>e.getFullName())).sort()}async getProvider(e){if(e){const[t]=e.split("/"),r=this.providers.find((e=>e.getName()===t));if(r){if(r.isValid())return r;d.default.warn(`Provider ${t} is not valid. Searching for first valid provider.`)}d.default.warn(`Provider not found or not valid for model ${e}. Searching for first valid provider.`)}const t=this.providers.find((e=>e.isValid()));if(t)return t;throw new Error("No valid provider found. Please check your API keys.")}}t.ChatModelManager=_},1547:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n(function_definition\n  declarator: (function_declarator\n    declarator: (identifier) @name.definition.function)) @definition.function\n\n(struct_specifier\n  name: (type_identifier) @name.definition.struct) @definition.struct\n\n(enum_specifier\n  name: (type_identifier) @name.definition.enum) @definition.enum\n"},1569:e=>{"use strict";e.exports=require("zod")},1600:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.UseMcpToolToolFactory=void 0;const s=r(3563),i=r(5853),a=r(2115);let c=class{constructor(e){this.mcpHubService=e}getToolName(){return"use_mcp_tool"}create(e){return new i.UseMcpToolTool(this.mcpHubService)}};t.UseMcpToolToolFactory=c,t.UseMcpToolToolFactory=c=o([(0,s.Injectable)(),n("design:paramtypes",[a.McpHubService])],c)},1623:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.RESPONSE_ONLY_TOOLS=void 0,t.RESPONSE_ONLY_TOOLS=["plan_mode_respond","attempt_completion"]},1672:function(e,t,r){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),n=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||o(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),n(r(1926),t),n(r(1140),t),n(r(7916),t),n(r(1002),t),n(r(5789),t),n(r(5562),t)},1680:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.DocstoreModule=void 0;const n=r(3563),s=r(8144),i=r(3381),a=r(8648),c=r(376);let l=class{};t.DocstoreModule=l,t.DocstoreModule=l=o([(0,n.Module)({imports:[c.DataSourceModule],controllers:[s.StoredDocController],providers:[i.StoredDocService,a.StoredDocRepository],exports:[i.StoredDocService]})],l)},1685:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TOOL_CALL_TAGS=t.THINKING_TAGS=void 0,t.mapTagToBlockType=function(e){if(!e)return"text";const r=e.toLowerCase();if(t.THINKING_TAGS.includes(r))return"thinking";if(t.TOOL_CALL_TAGS.includes(r))return"tool_call";return"text"},t.THINKING_TAGS=["thinking","reasoning"],t.TOOL_CALL_TAGS=["read_file","write_to_file","replace_in_file","search_files","list_files","execute_command","browser_action","list_code_definition_names","use_mcp_tool","access_mcp_resource","ask_followup_question","attempt_completion","new_task","plan_mode_respond","load_mcp_documentation","fake_tool_name_for_testing"]},1747:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DatasetDocument=void 0;const o=r(9100);t.DatasetDocument=class{constructor(e,t,r,n="new",s=(0,o.ulid)(),i=new Date,a=new Date){this.id=s,this.datasetId=e,this.filename=t,this.contentHash=r,this.status=n,this.createdAt=i,this.updatedAt=a}}},1781:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.FetchWebPage=void 0;const a=r(5534),c=r(1569),l=i(r(758)),d=i(r(9055)),u=r(3563),f=r(3239);let p=class extends a.Tool{constructor(e){super(),this.summaryCompletion=e,this.name="fetch_web_page",this.description="Fetch the body text of a web page using a headless browser. This tool should only be used if the user has specifically asked for a web page by URL.",this.schema=c.z.object({url:c.z.string().describe("The URL of the web page to fetch")}),this.warningThreshold=5e4}async _call({url:e}){try{d.default.info(`Fetching web page: ${e}`);const t=await l.default.launch({headless:!0}),r=await t.newPage();await r.goto(e,{waitUntil:"networkidle0"});const o=await r.evaluate((()=>document.body.innerText));if(await t.close(),o.length>this.warningThreshold){d.default.warn(`Large text content detected (${o.length} characters) for URL: ${e}`);const t=`Please summarise the contents of the web url: ${e} so that we get all the useful information from the page`;return`Fetched and summarized text from URL: ${e}\nSummary:\n${await this.summaryCompletion.getSummary(t,o)}`}return`Fetched text from URL: ${e}\nContent:\n${o}`}catch(t){d.default.error(`Error fetching web page: ${e}`,t);return`Error fetching web page: ${e}\nError:\n${t.message||"Unknown error occurred"}`}}};t.FetchWebPage=p,t.FetchWebPage=p=o([s(0,(0,u.Inject)(f.SummaryCompletion)),n("design:paramtypes",[f.SummaryCompletion])],p)},1832:e=>{"use strict";e.exports=require("knex")},1879:e=>{"use strict";e.exports=require("xmldom")},1901:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.GitModule=void 0;const n=r(3563),s=r(7265),i=r(5190),a=r(5873);let c=class{};t.GitModule=c,t.GitModule=c=o([(0,n.Module)({imports:[a.WorkspaceModule],controllers:[s.GitController],providers:[i.GitService]})],c)},1921:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AskFollowupQuestionTool=void 0;const a=r(3563),c=i(r(9055));let l=o=class{constructor(){this.name="ask_followup_question",this.description="Ask the user a question to gather additional information needed to complete the task.",c.default.info(`[${o.name}] AskFollowupQuestionTool initialized`)}getUsageInstructions(e){return'## ask_followup_question\nDescription: Ask the user a question to gather additional information needed to complete the task. This tool should be used when you encounter ambiguities, need clarification, or require more details to proceed effectively. It allows for interactive problem-solving by enabling direct communication with the user. Use this tool judiciously to maintain a balance between gathering necessary information and avoiding excessive back-and-forth.\nParameters:\n- question: (required) The question to ask the user. This should be a clear, specific question that addresses the information you need.\n- options: (optional) An array of 2-5 options for the user to choose from. Each option should be a string describing a possible answer. You may not always need to provide options, but it may be helpful in many cases where it can save the user from having to type out a response manually. IMPORTANT: NEVER include an option to toggle to Act mode, as this would be something you need to direct the user to do manually themselves if needed.\nUsage:\n<ask_followup_question>\n<question>Your question here</question>\n<options>\nArray of options here (optional), e.g. ["Option 1", "Option 2", "Option 3"]\n</options>\n</ask_followup_question>'}validateParams(e){return"string"==typeof e.question&&""!==e.question.trim()}async execute(e){const{question:t,options:r}=e;return c.default.info(`[${o.name}] Asking followup question: ${t}`),{question:t,options:r,response:"This is a placeholder response. In a real implementation, the response would be provided by the user."}}};t.AskFollowupQuestionTool=l,t.AskFollowupQuestionTool=l=o=n([(0,a.Injectable)(),s("design:paramtypes",[])],l)},1926:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GeminiProvider=void 0;const i=r(3563),a=r(6206),c=s(r(9055)),l=r(1140),d=r(5789);let u=class{constructor(e){this.providerRegistry=e,c.default.info("[GeminiProvider] Initialized"),this.providerRegistry.registerProvider(this)}getId(){return d.GEMINI_PROVIDER_ID}getName(){return"Google Gemini"}getMetadata(){return{website:"https://ai.google.dev/",docs_link:"https://ai.google.dev/docs"}}requiresApiKey(){return!0}getDefaultBaseUrl(){return this.config?.geminiBaseUrl||void 0}getDefaultModelId(){return d.DEFAULT_GEMINI_MODEL_ID}getApiKeyName(){return"GOOGLE_API_KEY"}setConfig(e){this.config=e}getModelClient(e){const t={...e,baseUrl:this.config?.geminiBaseUrl||e.baseUrl},r=new l.GeminiModelClient(t);return this.discoverModels(e.apiKey,t.baseUrl).then((t=>{const o=t.find((t=>t.modelId===e.modelId));o?r.setModelMetadata(o):c.default.warn(`[GeminiProvider] Metadata not found for model ${e.modelId} during client creation.`)})).catch((t=>{c.default.warn(`[GeminiProvider] Failed to discover models for client ${e.modelId}: ${t.message}`)})),r}async discoverModels(e,t){return(0,d.discoverGeminiModels)(e,t)}};t.GeminiProvider=u,t.GeminiProvider=u=o([(0,i.Injectable)(),n("design:paramtypes",[a.ProviderRegistry])],u)},1943:e=>{"use strict";e.exports=require("fs/promises")},1983:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ComputerToolMac=void 0;const c=r(1569),l=r(5317),d=r(9023),u=r(3903),f=i(r(943)),p=a(r(3864)),h=i(r(9896)),m=i(r(6928)),g=r(7751),y=r(7650),v=a(r(9055)),_=(0,d.promisify)(l.exec);class w extends g.ComputerToolBase{validateParams(e){return c.z.object({action:c.z.enum(["key","type","mouse_move","left_click","left_click_drag","right_click","middle_click","double_click","screenshot","cursor_position"]),text:c.z.string().optional(),coordinate:c.z.array(c.z.number()).length(2).optional()}).parse(e)}constructor(){super(),this.screenshotDelay=2,this.scalingEnabled=!0,this.outputDir="/tmp/outputs",this.kpKeys=new Set(["arrow-down","arrow-left","arrow-right","arrow-up","brightness-down","brightness-up","delete","end","enter","esc","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","f13","f14","f15","f16","fwd-delete","home","keys-light-down","keys-light-toggle","keys-light-up","mute","num-0","num-1","num-2","num-3","num-4","num-5","num-6","num-7","num-8","num-9","num-clear","num-divide","num-enter","num-equals","num-minus","num-multiply","num-plus","page-down","page-up","play-next","play-pause","play-previous","return","space","tab","volume-down","volume-up"]),v.default.info("Initializing ComputerToolMac"),(0,p.default)("cliclick").then((function(e){v.default.info("cliclick command found")})).catch((function(){const e="cliclick is not installed. Please install it via Homebrew: brew install cliclick";throw v.default.error(e),new Error(e)})),(0,p.default)("convert").then((function(e){v.default.info("ImageMagick convert command found")})).catch((function(){const e="ImageMagick is not installed. Please install it via Homebrew: brew install imagemagick";throw v.default.error(e),new Error(e)}))}async execute(e){v.default.info(`Executing ComputerToolMac command: ${JSON.stringify(e)}`);try{const t=this.validateParams(e);v.default.info(`Parameters validated successfully: ${JSON.stringify(t)}`);const{action:r,text:o,coordinate:n}=t;let s;switch(r){case"mouse_move":case"left_click_drag":if(!n)throw new y.ToolError(`coordinate is required for ${r}`);const[e,t]=n,i=Math.round(e/this.scale),a=Math.round(t/this.scale);if(v.default.info(`Adjusted coordinates for scale factor (${this.scale}): (${i}, ${a})`),"mouse_move"===r)s=await this.executeCommands([`m:${i},${a}`]);else{const e=[`dd:${i},${a}`,`du:${i},${a}`];s=await this.executeCommands(e)}break;case"key":if(!o)throw new y.ToolError(`text is required for ${r}`);s=await this.pressKey(o);break;case"type":if(!o)throw new y.ToolError(`text is required for ${r}`);s=await this.typeText(o);break;case"left_click":case"right_click":case"middle_click":case"double_click":s=await this.clickAction(r);break;case"screenshot":return s=await this.screenshot(),[{type:"image_url",image_url:{url:`data:image/png;base64,${s.base64_image}`}}];case"cursor_position":s=await this.getCursorPosition();break;default:throw new y.ToolError(`Invalid action: ${r}`)}return s.output}catch(e){return e instanceof y.ToolError?(v.default.error("Tool error in ComputerToolMac",{error:e.message,stack:e.stack}),`Error: ${e.message}`):(v.default.error("Unexpected error in ComputerToolMac",{error:e instanceof Error?e.stack:String(e)}),`Unexpected error: ${e}`)}}async typeText(e){v.default.info(`Typing text: ${e}`);const t=["-w 200"];t.push(`t:${f.quote([e])}`),v.default.info(`Built commands for typing text: ${t.join(" ")}`);return await this.executeCommands(t)}async pressKey(e){v.default.info(`Pressing key: ${e}`);const{modifiers:t,key:r}=this.parseKeyCommand(e),o=["-w 200"];for(const e of t)v.default.info(`Key down modifier: ${e}`),o.push(`kd:${e}`);if(this.kpKeys.has(r))v.default.info(`Pressing special key with kp: ${r}`),o.push(`kp:${r}`);else{if(1!==r.length)throw new y.ToolError(`Invalid key: ${r}`);v.default.info(`Typing key with t: ${r}`),o.push(`t:${f.quote([r])}`)}for(const e of t.reverse())v.default.info(`Key up modifier: ${e}`),o.push(`ku:${e}`);v.default.info(`Built commands for key press: ${o.join(" ")}`);return await this.executeCommands(o)}async clickAction(e){const t={left_click:"c:.",right_click:"rc:.",middle_click:"mc:.",double_click:"dc:."}[e];if(!t)throw new y.ToolError(`Invalid click action: ${e}`);const r=["-w 200",t];return await this.executeCommands(r)}async getCursorPosition(){const e=await this.executeCommands(["p:."],!1),t=e.output?.trim()||"",r=t.match(/(\d+),(\d+)/);if(!r)throw new y.ToolError(`Failed to parse cursor position: ${t}`);const o=parseInt(r[1],10),n=parseInt(r[2],10);return new y.ToolResult(`X=${o},Y=${n}`,"")}async screenshot(){v.default.info("Taking screenshot"),v.default.info(`Ensuring output directory exists: ${this.outputDir}`),h.mkdirSync(this.outputDir,{recursive:!0});const e=m.join(this.outputDir,`screenshot_${(0,u.v4)().replace(/-/g,"")}.png`);v.default.info(`Screenshot will be saved to: ${e}`);const t=`screencapture -x ${e}`;v.default.info("Executing screenshot command",{cmd:t});const r=await _(t,{shell:"/bin/bash"});let o=this.width,n=this.height;if(null==o||null==n){const t=`magick identify -format "%w %h" ${e}`;v.default.info(`Executing identify command to get image dimensions: ${t}`);const r=await _(t,{shell:"/bin/bash"}),[s,i]=r.stdout.trim().split(" ");o=parseInt(s,10),n=parseInt(i,10),this.width=o,this.height=n}const s=`magick ${e} -resize ${Math.floor(o*this.scale)}x${Math.floor(n*this.scale)}! ${e}`;if(v.default.info(`Executing resize command: ${s}`),await _(s,{shell:"/bin/bash"}),h.existsSync(e)){const t=h.readFileSync(e).toString("base64");return new y.ToolResult("","",t)}throw new y.ToolError(`Failed to take screenshot: ${r.stderr}`)}async executeCommands(e,t=!0){v.default.info(`Executing commands: ${e.join(" ")}`);const r=`cliclick ${e.join(" ")}`;v.default.info(`Final cliclick command: ${r}`);try{const{stdout:e,stderr:o}=await _(r,{shell:"/bin/bash"});e&&v.default.info(`Command produced stdout output: ${e}`),o&&v.default.warn(`Command produced stderr output: ${o}`);let n=null;return t&&(v.default.info(`Waiting ${this.screenshotDelay} seconds before taking screenshot`),await new Promise((e=>setTimeout(e,1e3*this.screenshotDelay))),n=(await this.screenshot()).base64_image),v.default.info("Commands executed successfully",{hasOutput:!!e,hasScreenshot:!!n}),new y.ToolResult(e,o,n)}catch(e){throw v.default.error(`Command execution failed: ${e instanceof Error?e.stack:String(e)}`),e}}parseKeyCommand(e){const t=e.toLowerCase().split("+"),r=t.pop(),o={cmd:"cmd",command:"cmd",ctrl:"ctrl",control:"ctrl",alt:"alt",option:"alt",fn:"fn",shift:"shift"},n=t.map((e=>{const t=o[e];if(!t)throw new y.ToolError(`Invalid modifier key: ${e}`);return t}));if(this.kpKeys.has(r))return{modifiers:n,key:r};if(1===r.length&&/^[a-z0-9]$/.test(r))return{modifiers:n,key:r};throw new y.ToolError(`Invalid key: ${r}`)}}t.ComputerToolMac=w},1986:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AnthropicProvider=void 0;const n=r(646),s=r(8483),i=r(8959),a=r(2368),c=r(2088),l=o(r(8938));class d extends s.BaseProvider{getMaxTokens(e){return e.endsWith(d.SONNET_MODEL_NAME)||e.endsWith(d.OPUS_MODEL_NAME)?8192:e.endsWith(d.HAIKU_MODEL_NAME)?4096:8192}getName(){return"anthropic"}getBaseChatModel(e,t){var r=this.getMaxTokens(e),o=null,s=t.temperature;t.thinkingBudget>0&&e.endsWith(d.SONNET_MODEL_NAME)&&(r+=t.thinkingBudget,o={type:"enabled",budget_tokens:t.thinkingBudget},s=null),console.log("Max tokens input:",r);return new n.ChatAnthropic({modelName:this.shortModelName(e),temperature:s,anthropicApiKey:a.ConfigService.getInstance().getProperty("ANTHROPIC_API_KEY"),maxTokens:r,thinking:o,anthropicApiUrl:process.env.ANTHROPIC_API_URL||"https://api.anthropic.com",clientOptions:{defaultHeaders:{"anthropic-beta":"prompt-caching-2024-07-31"}}})}async getModelDescriptors(){0===d.modelCache.models.length&&await this.fetchModels();return d.modelCache.models.map((e=>{const t=d.MODEL_COSTS[e.id]||{input:0,output:0};return new i.ModelDescriptor("anthropic",e.id,t.input,0,0,t.output,e.id===d.SONNET_MODEL_NAME)}))}isValid(){return!!a.ConfigService.getInstance().getProperty("ANTHROPIC_API_KEY")}async fetchModels(){if(!this.isValid())return[];const e=Date.now();if(d.modelCache.models.length>0&&e-d.modelCache.timestamp<3e5)return d.modelCache.models;const t=a.ConfigService.getInstance().getProperty("ANTHROPIC_API_KEY");if(!t)return console.log("Anthropic API key not found"),[];try{const r=process.env.ANTHROPIC_API_URL||"https://api.anthropic.com",o=await l.default.get(`${r}/v1/models`,{headers:{"x-api-key":t,"anthropic-version":"2023-06-01"}});if(200===o.status){const t=o.data.data||[];return d.modelCache={models:t,timestamp:e},t}return console.log(`Failed to fetch Anthropic models. Status code: ${o.status}`),[]}catch(e){return console.error(`Error fetching Anthropic models: ${e}`),[]}}getChatModelOptions(e,t){const r=this.getExtraHeaders(e.name,t),o=this.getExtraSystemMessageKwargs(e.name,t);return new c.ChatModelOptions(r,o)}getExtraHeaders(e,t){return this.isPromptCachingEnabled(t)?{"anthropic-beta":"prompt-caching-2024-07-31"}:null}getExtraSystemMessageKwargs(e,t){return this.isPromptCachingEnabled(t)?{cache_control:{type:"ephemeral"}}:null}}t.AnthropicProvider=d,d.SONNET_MODEL_NAME="claude-3-7-sonnet-20250219",d.OPUS_MODEL_NAME="claude-3-opus-20240229",d.HAIKU_MODEL_NAME="claude-3-haiku-20240307",d.modelCache={models:[],timestamp:0},d.MODEL_COSTS={"claude-3-7-sonnet-20250219":{input:225e-8,output:1125e-8},"claude-3-5-sonnet-20241022":{input:225e-8,output:1125e-8},"claude-3-opus-20240229":{input:1125e-8,output:5625e-8},"claude-3-haiku-20240307":{input:1.875e-7,output:9.375e-7}}},1991:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TaskHistoryController=void 0;const a=r(3563),c=r(6647),l=r(9668),d=i(r(9055));let u=class{constructor(e,t){this.taskHistoryService=e,this.userService=t}async getTaskSummaries(e,t){try{const e=await this.userService.getCurrentUser();d.default.debug(`Received request for task summaries from user ${e.userId} with limit ${t||"default"}`);return await this.taskHistoryService.getTaskSummaries(e.userId,t)}catch(e){if(e instanceof l.AuthenticationError)throw d.default.error(`[TaskHistoryController] Authentication error: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw d.default.error(`Error in getTaskSummaries endpoint: ${e.message}`,e.stack),e}}async getTaskEvents(e,t){try{const e=await this.userService.getCurrentUser();d.default.debug(`Received request for events of task ${t} from user ${e.userId}`);return await this.taskHistoryService.getTaskEvents(t,e.userId)}catch(e){if(e instanceof l.AuthenticationError)throw d.default.error(`[TaskHistoryController] Authentication error: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw d.default.error(`Error in getTaskEvents endpoint: ${e.message}`,e.stack),e}}};t.TaskHistoryController=u,o([(0,a.Get)("/summaries"),s(0,(0,a.Request)()),s(1,(0,a.Query)("limit")),n("design:type",Function),n("design:paramtypes",[Object,Number]),n("design:returntype",Promise)],u.prototype,"getTaskSummaries",null),o([(0,a.Get)("/:taskId/events"),s(0,(0,a.Request)()),s(1,(0,a.Param)("taskId")),n("design:type",Function),n("design:paramtypes",[Object,String]),n("design:returntype",Promise)],u.prototype,"getTaskEvents",null),t.TaskHistoryController=u=o([(0,a.Controller)("/eve-agent/task-history"),n("design:paramtypes",[c.TaskHistoryService,l.UserService])],u)},2003:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AgentConfig=void 0;t.AgentConfig=class{constructor(e,t=0,r,o=!0,n,s=0){this.model=e,this.temperature=t,this.recursionLimit=r,this.cachePrompt=o,this.privateModelsRequired=n,this.thinkingBudget=s}}},2083:e=>{"use strict";e.exports=require("tree-sitter-ruby")},2088:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ChatModel=t.ChatModelOptions=void 0;class r{constructor(e=null,t=null,r=!0){this.extraHeaders=e,this.extraSystemMessageKwargs=t,this.systemPromptSupported=r}}t.ChatModelOptions=r;t.ChatModel=class{constructor(e,t,o=new r){this.modelDescriptor=e,this.baseChatModel=t,this.options=o}calculateCost(e,t,r,o){const n=this.modelDescriptor;return e*n.costPerInputToken+t*n.costPerCacheWriteToken+r*n.costPerCacheReadToken+o*n.costPerOutputToken}}},2097:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.HyperbolicProvider=void 0;const o=r(6228),n=r(8483),s=r(8959),i=r(2368);class a extends n.BaseProvider{getName(){return a.PROVIDER_NAME}getBaseChatModel(e,t){return new o.ChatOpenAI({modelName:this.shortModelName(e),temperature:t.temperature,openAIApiKey:i.ConfigService.getInstance().getProperty("HYPERBOLIC_API_KEY"),configuration:{baseURL:"https://api.hyperbolic.ai/v1"}})}async getModelDescriptors(){return a.LIST_OF_MODELS.map((e=>new s.ModelDescriptor(a.PROVIDER_NAME,e,0,0,0,0)))}isValid(){return!!i.ConfigService.getInstance().getProperty("HYPERBOLIC_API_KEY")}}t.HyperbolicProvider=a,a.QWEN_2_5_CODER_32B_INSTRUCT="Qwen/Qwen2.5-Coder-32B-Instruct",a.QWEN_2_5_72B_INSTRUCT="Qwen/Qwen2.5-72B-Instruct",a.DEEPSEEK_V2_5="deepseek-ai/DeepSeek-V2.5",a.META_LLAMA_3_1_405B_INSTRUCT="meta-llama/Meta-Llama-3.1-405B-Instruct",a.META_LLAMA_3_1_8B_INSTRUCT="meta-llama/Meta-Llama-3.1-8B-Instruct",a.PROVIDER_NAME="hyperbolic",a.LIST_OF_MODELS=[a.QWEN_2_5_CODER_32B_INSTRUCT,a.QWEN_2_5_72B_INSTRUCT,a.DEEPSEEK_V2_5,a.META_LLAMA_3_1_405B_INSTRUCT,a.META_LLAMA_3_1_8B_INSTRUCT]},2115:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.McpHubService=void 0;const a=r(3563),c=r(9102),l=i(r(9055));let d=o=class{constructor(e){this.configService=e,this.connections=new Map,l.default.info(`[${o.name}] McpHubService initialized`)}async callTool(e,t,r){return l.default.info(`[${o.name}] Calling tool ${t} on server ${e}`),{result:`Mock result from tool ${t} on server ${e}`,args:r}}async readResource(e,t){return l.default.info(`[${o.name}] Reading resource ${t} from server ${e}`),{content:`Mock content from resource ${t} on server ${e}`}}async listTools(e){return l.default.info(`[${o.name}] Listing tools on server ${e}`),[{name:"mock_tool_1",description:"A mock tool"},{name:"mock_tool_2",description:"Another mock tool"}]}async listResources(e){return l.default.info(`[${o.name}] Listing resources on server ${e}`),[{uri:"mock://resource/1",description:"A mock resource"},{uri:"mock://resource/2",description:"Another mock resource"}]}};t.McpHubService=d,t.McpHubService=d=o=n([(0,a.Injectable)(),s("design:paramtypes",[c.EveConfigService])],d)},2123:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createStreamProcessor=t.createPatternUtils=t.createStateManager=t.createBlockManager=void 0;const o=r(9560);Object.defineProperty(t,"createBlockManager",{enumerable:!0,get:function(){return o.createBlockManager}});const n=r(6308);Object.defineProperty(t,"createStateManager",{enumerable:!0,get:function(){return n.createStateManager}});const s=r(7001);Object.defineProperty(t,"createPatternUtils",{enumerable:!0,get:function(){return s.createPatternUtils}});const i=r(7890);Object.defineProperty(t,"createStreamProcessor",{enumerable:!0,get:function(){return i.createStreamProcessor}})},2141:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.FileSystemService=void 0;const u=r(3563),f=c(r(9896)),p=c(r(1943)),h=r(8474),m=d(r(9055)),g=c(r(6928)),y=d(r(526)),v=r(2678);let _=n=class{constructor(e){this.workspaceService=e,m.default.info(`[${n.name}] FileSystemService initialized`),this.ignoreCache=new v.LRUCache({max:50,ttl:3e5})}parseIgnoreFiles(e,t){const r=(0,y.default)();r.add([".git",".eve",...t]);return[".gitignore",".eveignore",".clineignore"].forEach((t=>{const o=g.join(e,t);try{if(f.existsSync(o)){const e=f.readFileSync(o,"utf-8");r.add(e),m.default.debug(`[${n.name}] Loaded ignore patterns from: ${o}`)}}catch(e){m.default.warn(`[${n.name}] Error reading ignore file ${o}: ${e.message}`)}})),r}async traverseWorkspaceBFS(e,t,r){const o=[];let s=!1;const i=[e],a=new Set;for(;i.length>0&&o.length<r;){const c=i.shift();if(a.has(c))continue;let l;a.add(c);try{l=await p.readdir(c,{withFileTypes:!0}),l.sort(((e,t)=>e.name.localeCompare(t.name)))}catch(e){m.default.warn(`[${n.name}] Error reading directory ${c}: ${e.message}`);continue}for(const d of l){const l=g.join(c,d.name),u=g.relative(e,l),f=u.split(g.sep)[0];if(new Set(["node_modules","dist","build","target","out","bin","vendor",".git",".eve",".next",".nuxt",".output","coverage",".nyc_output",".cache",".parcel-cache",".yarn",".pnpm-store","__pycache__","env","venv","tmp","temp","deps","pkg","Pods"]).has(f))m.default.debug(`[${n.name}] Skipping default ignored path: ${u}`);else if(t.ignores(u))m.default.debug(`[${n.name}] Skipping ignored path via ignore file: ${u}`);else{if(m.default.debug(`[${n.name}] Processing path: ${u}, isDir: ${d.isDirectory()}`),o.length>=r){s=!0;break}d.isDirectory()?(o.push(u+"/"),a.has(l)||i.push(l)):d.isFile()&&o.push(u)}}if(s)break}return o.length===r&&i.length>0&&(s=!0),[o,s]}async getWorkspaceFileList(e,t=1e3){m.default.debug(`[${n.name}] Getting workspace file list for: ${e} with limit: ${t}`);try{const r=["node_modules/","__pycache__/","env/","venv/","target/","build/","dist/","out/","bin/","bundle/","vendor/","tmp/","temp/","deps/","pkg/","Pods/",".next/",".nuxt/",".output/","coverage/",".nyc_output/",".cache/",".parcel-cache/",".yarn/",".pnpm-store/"],o=this.parseIgnoreFiles(e,r),[s,i]=await this.traverseWorkspaceBFS(e,o,t);return i&&m.default.warn(`[${n.name}] File list for ${e} truncated at limit: ${t}`),m.default.debug(`[${n.name}] Found ${s.length} items for ${e}. Truncated: ${i}`),[s,i]}catch(t){return m.default.error(`[${n.name}] Error getting workspace file list for ${e}: ${t.message}\n${t.stack}`),[[],!1]}}async fileExists(e){try{return(await p.stat(e)).isFile()}catch(t){return"ENOENT"===t.code||m.default.error(`[${n.name}] Error checking file existence for ${e}: ${t.message}`),!1}}async getIgnoredFilesCached(e){const t=this.ignoreCache.get(e);if(t)return t;const r=this.parseIgnoreFiles(e,[]);let o=[];try{const t=await p.readdir(e,{withFileTypes:!0});for(const r of t){const t=g.join(e,r.name);o.push(t),r.isDirectory()&&o.push(t+"/")}}catch(t){return m.default.error(`[${n.name}] Error reading directory for ignore check: ${e}: ${t.message}`),new Set}const s=new Set;for(const t of o){const o=g.relative(e,t);r.ignores(o)&&s.add(t)}return this.ignoreCache.set(e,s),s}};t.FileSystemService=_,t.FileSystemService=_=n=a([(0,u.Injectable)(),l("design:paramtypes",[h.WorkspaceService])],_)},2177:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.AgentsModule=void 0;const n=r(3563),s=r(3520),i=r(9449),a=r(5017),c=r(3887),l=r(5610),d=r(6695),u=r(2424),f=r(361),p=r(7307),h=r(3690),m=r(8471),g=r(3470),y=r(5025),v=r(7223),_=r(1263),w=r(5591),k=r(6651),b=r(5873),S=r(3880),T=r(4193),O=r(9161),P=r(376),$=r(7967),I={provide:"AGENT_SERVICES",useFactory:async(e,t,r,o,n,s,i,a,c)=>{const l=new Map;l.set("se-agent",e),l.set("ops-agent",t),l.set("review-agent",r),l.set("computer-use-agent",o),l.set("private-coder-agent",n),l.set("architect-agent",s),l.set("product-agent",i),l.set("mcp-agent",a);return(await c.loadPlugins()).forEach((e=>{e&&e.getName&&l.set(e.getName(),e)})),l},inject:[a.SEAgentService,c.OpsAgentService,l.ReviewAgentService,d.ComputerUseAgentService,m.PrivateCoderAgentService,v.ArchitectAgentService,_.ProductAgentService,w.MCPAgentService,p.PluginLoaderService]};let E=class{};t.AgentsModule=E,t.AgentsModule=E=o([(0,n.Module)({imports:[u.GraphAgentModule,f.ToolsModule,h.SimpleAgentModule,b.WorkspaceModule,S.SessionModule,T.HomeModule,O.ChatCompletionModule,i.LangchainModule,P.DataSourceModule,$.ConfigModule],controllers:[s.AgentController,k.MCPController],providers:[a.SEAgentService,c.OpsAgentService,l.ReviewAgentService,d.ComputerUseAgentService,m.PrivateCoderAgentService,v.ArchitectAgentService,_.ProductAgentService,w.MCPAgentService,p.PluginLoaderService,g.AgentRuleService,y.AgentRuleRepository,I],exports:[I,g.AgentRuleService]})],E)},2196:e=>{"use strict";e.exports=require("@langchain/mistralai")},2251:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DatasetController=void 0;const i=r(3563),a=r(9556),c=r(6982),l=r(8077),d=r(6696);let u=class{constructor(e,t){this.datasetService=e,this.datasetRetrievalService=t}async getAllDatasets(){return this.datasetService.getAllDatasets()}async getDataset(e){return this.datasetService.getDatasetById(e)}async createDataset(e){if(!e.name.match(/^[a-zA-Z0-9]{3,30}$/))throw new Error("Dataset name must be 3-30 alphanumeric characters with no spaces");return this.datasetService.createDataset(e.name,e.baseDir)}async updateDataset(e,t){await this.datasetService.updateDataset(e,t)}async deleteDataset(e){await this.datasetService.deleteDataset(e)}async getDocuments(e){return this.datasetService.getDocuments(e)}async getDocument(e){return this.datasetService.getDocumentById(e)}async createDocument(e,t){const r=(0,c.createHash)("md5").update(t.buffer).digest("hex");return this.datasetService.createDocument(e,t.originalname,r,t.buffer)}async updateDocumentStatus(e,t){await this.datasetService.updateDocumentStatus(e,t.status)}async deleteDocument(e){await this.datasetService.deleteDocument(e)}async queryDataset(e,t,r){const o=await this.datasetService.getDatasetById(e);return this.datasetRetrievalService.searchDataset(o.name,t,r?parseInt(r,10):void 0)}};t.DatasetController=u,o([(0,i.Get)(),n("design:type",Function),n("design:paramtypes",[]),n("design:returntype",Promise)],u.prototype,"getAllDatasets",null),o([(0,i.Get)(":id"),s(0,(0,i.Param)("id")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],u.prototype,"getDataset",null),o([(0,i.Post)(),s(0,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[Object]),n("design:returntype",Promise)],u.prototype,"createDataset",null),o([(0,i.Put)(":id"),s(0,(0,i.Param)("id")),s(1,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[String,Object]),n("design:returntype",Promise)],u.prototype,"updateDataset",null),o([(0,i.Delete)(":id"),s(0,(0,i.Param)("id")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],u.prototype,"deleteDataset",null),o([(0,i.Get)(":datasetId/documents"),s(0,(0,i.Param)("datasetId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],u.prototype,"getDocuments",null),o([(0,i.Get)(":datasetId/documents/:id"),s(0,(0,i.Param)("id")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],u.prototype,"getDocument",null),o([(0,i.Post)(":datasetId/documents"),(0,i.UseInterceptors)((0,a.FileInterceptor)("file")),s(0,(0,i.Param)("datasetId")),s(1,(0,i.UploadedFile)()),n("design:type",Function),n("design:paramtypes",[String,Object]),n("design:returntype",Promise)],u.prototype,"createDocument",null),o([(0,i.Put)(":datasetId/documents/:id/status"),s(0,(0,i.Param)("id")),s(1,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[String,Object]),n("design:returntype",Promise)],u.prototype,"updateDocumentStatus",null),o([(0,i.Delete)(":datasetId/documents/:id"),s(0,(0,i.Param)("id")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],u.prototype,"deleteDocument",null),o([(0,i.Get)(":id/query"),s(0,(0,i.Param)("id")),s(1,(0,i.Query)("q")),s(2,(0,i.Query)("numResults")),n("design:type",Function),n("design:paramtypes",[String,String,String]),n("design:returntype",Promise)],u.prototype,"queryDataset",null),t.DatasetController=u=o([(0,i.Controller)("datasets"),n("design:paramtypes",[l.DatasetService,d.DatasetRetrievalService])],u)},2267:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PlanModeRespondTool=void 0;const a=r(3563),c=i(r(9055));let l=o=class{constructor(){this.name="plan_mode_respond",this.description="Respond to the user's inquiry in an effort to plan a solution to the user's task.",c.default.info(`[${o.name}] PlanModeRespondTool initialized`)}getUsageInstructions(e){return'## plan_mode_respond\nDescription: Respond to the user\'s inquiry in an effort to plan a solution to the user\'s task. This tool should be used when you need to provide a response to a question or statement from the user about how you plan to accomplish the task. This tool is only available in PLAN MODE. The environment_details will specify the current mode, if it is not PLAN MODE then you should not use this tool. Depending on the user\'s message, you may ask questions to get clarification about the user\'s request, architect a solution to the task, and to brainstorm ideas with the user. For example, if the user\'s task is to create a website, you may start by asking some clarifying questions, then present a detailed plan for how you will accomplish the task given the context, and perhaps engage in a back and forth to finalize the details before the user switches you to ACT MODE to implement the solution.\nParameters:\n- response: (required) The response to provide to the user. Do not try to use tools in this parameter, this is simply a chat response. (You MUST use the response parameter, do not simply place the response text directly within <plan_mode_respond> tags.)\n- options: (optional) An array of 2-5 options for the user to choose from. Each option should be a string describing a possible choice or path forward in the planning process. This can help guide the discussion and make it easier for the user to provide input on key decisions. You may not always need to provide options, but it may be helpful in many cases where it can save the user from having to type out a response manually. Do NOT present an option to toggle to Act mode, as this will be something you need to direct the user to do manually themselves.\nUsage:\n<plan_mode_respond>\n<response>Your response here</response>\n<options>\nArray of options here (optional), e.g. ["Option 1", "Option 2", "Option 3"]\n</options>\n</plan_mode_respond>'}validateParams(e){return"string"==typeof e.response&&""!==e.response.trim()}async execute(e){const{response:t,options:r}=e;return c.default.info(`[${o.name}] Responding in plan mode: ${t.substring(0,50)}...`),{response:t,options:r,success:!0}}};t.PlanModeRespondTool=l,t.PlanModeRespondTool=l=o=n([(0,a.Injectable)(),s("design:paramtypes",[])],l)},2300:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GraphAgentCollaborator=void 0;const i=r(3563),a=r(7373),c=r(1e3),l=r(1412),d=r(1544),u=r(1486),f=s(r(9055)),p=r(6254),h=r(9100),m=r(9234),g=r(8474),y=r(6910),v=r(2368),_=r(538),w=r(3239),k=r(4911);let b=class{constructor(e,t,r,o,n){this.workspaceService=e,this.sessionService=t,this.checkpointerService=r,this.homeService=o,this.summaryCompletion=n,this.chatModelManager=d.ChatModelManager.getInstance()}async processRequest(e,t){f.default.info("Processing request: %s",JSON.stringify(t));const r=this.processRequestStream(e,t);let o=null;for await(const e of r)o=e,f.default.info("Yielded item: %s",JSON.stringify(e));if(!o)throw new Error("No items were yielded from the generator");const n=await this.sessionService.getRequest(o?.requestId);if(!n)throw new Error("Failed to retrieve persisted request");return f.default.info("Returning request: %s",JSON.stringify(n)),n}async*processRequestStream(e,t){const r=(0,h.ulid)();if(!await this.homeService.isAccessOkay()){const e={label:"Error",content:"Access is not valid. Please check your Eve API key and try again."},o=await this.sessionService.addItem({itemId:this.generateItemId(),sessionId:t.sessionId||this.generateSessionId(),label:e.label,content:e.content,createdAt:new Date,requestId:r});return void(yield o)}const o=new Date;t.sessionId||(t.sessionId=this.generateSessionId());const n=await this.chatModelManager.getModel(t.config,e.getModelCategory(),e.isPrivateModelsOnly());let s;t.workspaceName?s=await this.workspaceService.lockByName(t.workspaceName):(s=await this.workspaceService.lockSessionWorkspace(t.sessionId),t.workspaceName=s.name);const i=s.name,a=new m.RequestContext(s,r,t.sessionId);await e.verifyRequest(t,a);let c=!1,d=0,g=0,_=0,w=0,b="";try{const s=l.AgentRequest.getFirstTextContent(t.content),i=await this.sessionService.ensureSession(t.workspaceName,t.sessionId,s,e.getName());await this.sessionService.updateSessionStatus(i.sessionId,"active"),f.default.info("%s received request: %s - %s",e.getName(),r,JSON.stringify(t)),f.default.info("Using model: %s",n.modelDescriptor.getFullName());const h=await e.getTools(a),m=n.baseChatModel.bindTools(h);let k=await e.getSystemPrompt(a);const T=await e.getAgentRules();T&&(k=k+"\n\nAdditional system rules:\n"+T),f.default.info("System prompt length: %s",k.length);const O=v.ConfigService.getNumericProperty(y.ConfigPropNames.AGENT_SYSTEM_PROMPT)||1e5;if(k.length>O)throw f.default.error("System prompt is longer than the maximum allowed length of %s characters - check the system prompt for %s",O,e.getName()),f.default.error("System prompt: %s",k),f.default.error("Consider adding a .eveignore file or updating your .gitignore file to ignore some of the files in the workspace"),new Error(`System prompt is longer than the maximum allowed length of ${O} characters - check logs for more details - you can increase the limit by setting ${y.ConfigPropNames.AGENT_SYSTEM_PROMPT} on the home page`);var S=k;n.options.extraSystemMessageKwargs&&(S=[{type:"text",text:S,...n.options.extraSystemMessageKwargs}],f.default.debug("Using extra system message kwargs",n.options.extraSystemMessageKwargs));const P=this.checkpointerService.getCheckpointer(),$=e.createGraph(m,h,P);await this.sessionService.addItem({itemId:this.generateItemId(),sessionId:t.sessionId,label:"Human",content:s,createdAt:new Date,requestId:r}),await this.sessionService.addRequest({requestId:r,sessionId:t.sessionId,workspaceName:t.workspaceName,requestContent:s,startedAt:o});const I=t.config.recursionLimit||v.ConfigService.getNumericProperty(y.ConfigPropNames.AGENT_RECURSION_LIMIT)||50,E=n.options.extraHeaders?{configurable:{thread_id:t.sessionId},recursionLimit:I,headers:n.options.extraHeaders}:{configurable:{thread_id:t.sessionId},recursionLimit:I};f.default.debug("Call options: %s",JSON.stringify(E));const R=await P.get(E),C=p.MessageUtils.buildHumanMessage(t.content);let A=e.createInitialState();R?A.messages=[C]:n.options.extraSystemMessageKwargs?(f.default.debug("Using extra system message kwargs",n.options.extraSystemMessageKwargs),A.messages=[new u.SystemMessage({content:S,additional_kwargs:n.options.extraSystemMessageKwargs}),C]):n.options.systemPromptSupported?A.messages=[new u.SystemMessage({content:S}),C]:A.messages=[new u.HumanMessage({content:S}),C];const M=await $.stream(A,E);for await(const e of M){f.default.debug("Output Event was: %s",JSON.stringify(e));const o=p.MessageUtils.processOutputEvent(e);f.default.debug("Processed message: %s",o);const s=o.usageMetadata,i=n.calculateCost(s?.inputTokens||0,s?.cacheWriteTokens||0,s?.cacheReadTokens||0,s?.outputTokens||0),a={itemId:this.generateItemId(),sessionId:t.sessionId,label:o.label,content:o.content,createdAt:new Date,inputTokens:o.usageMetadata?.inputTokens,cacheWriteTokens:s?.cacheWriteTokens,cacheReadTokens:s?.cacheReadTokens,outputTokens:s?.outputTokens,totalTokens:s?.totalTokens,cost:i,requestId:r},l=await this.sessionService.addItem(a);d+=s?.inputTokens||0,g+=s?.cacheWriteTokens||0,_+=s?.cacheReadTokens||0,w+=s?.outputTokens||0,b=o.content;const u=await this.sessionService.getSession(t.sessionId);if(c=u&&"aborted"===u.status,c){const e={label:"Error",content:"Session was aborted by the user."},r=await this.sessionService.addItem({itemId:this.generateItemId(),sessionId:t.sessionId,label:e.label,content:e.content,createdAt:new Date});yield r;break}yield l}}catch(e){f.default.error("--------------------------------------------------"),f.default.error("Error processing request in GraphAgentCollaborator:"),f.default.error("Request ID: %s",r),f.default.error("Session ID: %s",t.sessionId),f.default.error("Workspace: %s",t.workspaceName);try{f.default.error("Agent Request Content: %s",JSON.stringify(t.content,null,2))}catch(e){f.default.error("Could not stringify agentRequest.content:",e)}f.default.error("Error Message: %s",e.message),f.default.error("Error Stack:",e.stack||"No stack trace available"),f.default.error("--------------------------------------------------");const o={label:"Error",content:`An error occurred while processing request ${r}: ${e.message}. Please check the server logs for more details.`};if(t.sessionId)try{const e=await this.sessionService.addItem({itemId:this.generateItemId(),sessionId:t.sessionId,label:o.label,content:o.content,createdAt:new Date,requestId:r});yield e}catch(e){f.default.error("Failed to add error item to session %s:",t.sessionId,e)}else f.default.error("Cannot add error item to session because sessionId is missing.")}finally{try{if(!c&&s.isGitRepo){const e=new k.GitCommit(s.repoBaseDir,r,this.sessionService);if(await e.hasUncommittedUpdates()){const t=await e.getUncommittedChanges(),r="Give me a good commit message for the following diff contents - just return the message without quotes",o=await this.summaryCompletion.getSummary(r,t);f.default.info("Detected uncommitted git updates - committing changes with message: "+o),await e._call(o)}}await this.sessionService.updateSessionStatus(t.sessionId,"inactive");const e=n.calculateCost(d,g,_,w),i=new Date,a=i.getTime()-o.getTime(),l=d+g+_+w,u=await this.sessionService.updateRequest(r,{responseContent:b,endedAt:i,tookMillis:a,inputTokens:d,cacheWriteTokens:g,cacheReadTokens:_,outputTokens:w,totalTokens:l,cost:e});await this.homeService.logRequest(u),f.default.info("Agent processing completed in %s seconds - Input tokens: %s, Cache Write tokens: %s, Cache Read tokens: %s, Output tokens: %s, Total tokens: %s, Total cost: £%s",a/1e3,d,g,_,w,l,e.toFixed(6))}finally{i&&await this.workspaceService.unlockByName(i)}}}generateSessionId(){return(0,h.ulid)()}generateItemId(){return(0,h.ulid)()}};t.GraphAgentCollaborator=b,t.GraphAgentCollaborator=b=o([(0,i.Injectable)(),n("design:paramtypes",[g.WorkspaceService,a.SessionService,c.CheckpointerService,_.HomeService,w.SummaryCompletion])],b)},2303:(e,t)=>{"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.Mutation=t.MutationType=void 0,function(e){e.CREATE="create",e.UPDATE="update",e.DELETE="delete"}(r||(t.MutationType=r={}));t.Mutation=class{constructor(e,t,r,o,n,s,i,a,c){this.id=e,this.type=t,this.filePath=r,this.description=o,this.fileContentsBefore=n,this.fileContentsAfter=s,this.updatedAt=i,this.sessionId=a,this.requestId=c}}},2325:e=>{"use strict";e.exports=require("jsdom")},2368:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigService=void 0;const a=r(3563),c=r(5699),l=i(r(9055)),d=r(3713),u=r(6910);let f=o=class{constructor(e){this.configPropertyRepository=e,this.configCache=new Map,this.possibleValuesCache=new Map,o.instance=this,this.cachedDescriptors=d.ConfigDescriptors.getDefaultDescriptors()}static getInstance(){if(!o.instance)throw new Error("ConfigService has not been initialized");return o.instance}static getProperty(e,t){return o.getInstance().getProperty(e,t)}static getNumericProperty(e,t){return o.getInstance().getNumericProperty(e,t)}static getBooleanProperty(e,t){return o.getInstance().getBooleanProperty(e,t)}async onModuleInit(){try{await this.loadConfigToCache()}catch(e){l.default.error(`[${o.name}] Failed to load config properties to cache`,e)}}async loadConfigToCache(){try{const e=await this.configPropertyRepository.getAllProperties();this.configCache.clear();for(const t of e)this.configCache.set(t.name,t.value);l.default.info(`[${o.name}] Config properties loaded to cache successfully`)}catch(e){throw l.default.error(`[${o.name}] Error loading config properties to cache`,e),e}}async getConfig(){const e=new Map,t=[],r=d.ConfigDescriptors.getDefaultDescriptors();for(const t of r.sections)for(const r of t.properties){const t=this.getProperty(r.name);if(null!==t&&e.set(r.name,r.sensitive?this.maskValue(t):t),"function"==typeof r.possibleValues){const e=this.possibleValuesCache.get(r.possibleValues);if(e)r.possibleValues=e;else{const e=await r.possibleValues();this.possibleValuesCache.set(r.possibleValues,e),r.possibleValues=e}}}return null===this.getProperty(u.ConfigPropNames.EVE_API_KEY)&&t.push("You need to set the Eve API Key which you can get from incept5.github.io/eve-web-admin"),null===this.getProperty(u.ConfigPropNames.ANTHROPIC_API_KEY)&&t.push("You need to set the Anthropic API Key which you can get from console.anthropic.com"),{version:"2.0.0",mode:process.env.MODE||"normal",descriptors:r,currentValues:Object.fromEntries(e),requiredActions:t.length>0?t:void 0}}getProperty(e,t){const r=process.env[e];if(void 0!==r)return r;const n=this.configCache.get(e);if(void 0!==n)return n;const s=this.findDescriptor(e);return s?s?.defaultValue?s.defaultValue.toString():t||null:(l.default.warn(`[${o.name}] Unknown property: ${e}`),null)}getNumericProperty(e,t){const r=this.getProperty(e);return null!==r?parseFloat(r):t||null}getBooleanProperty(e,t){const r=this.getProperty(e);return null!==r?"true"===r.toLowerCase():t||null}findDescriptor(e){for(const t of this.cachedDescriptors.sections){const r=t.properties.find((t=>t.name===e));if(r)return r}}async setProperty(e,t){try{t?(await this.configPropertyRepository.setProperty(e,t),this.configCache.set(e,t)):await this.unsetProperty(e)}catch(t){throw l.default.error(`[${o.name}] Error setting property ${e}`,t),t}}async unsetProperty(e){try{await this.configPropertyRepository.deleteProperty(e),this.configCache.delete(e)}catch(t){throw l.default.error(`[${o.name}] Error unsetting property ${e}`,t),t}}async getAllProperties(){return Array.from(this.configCache.entries()).map((([e,t])=>({name:e,value:t})))}maskValue(e){if(!e)return"not set";if(e.length<20)return"*".repeat(e.length);const t=e.length-8-4;return e.slice(0,8)+"*".repeat(t)+e.slice(-4)}};t.ConfigService=f,t.ConfigService=f=o=n([(0,a.Injectable)(),s("design:paramtypes",[c.ConfigPropertyRepository])],f)},2397:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceController=void 0;const i=r(3563),a=r(8474);let c=class{constructor(e){this.workspaceService=e}async unlock(e){return this.workspaceService.unlockByName(e)}async findAll(e){const t="true"===e;return this.workspaceService.findAll(t)}async findOne(e){return this.workspaceService.findOne(e)}async create(e){return this.workspaceService.createWorkspace(e)}async update(e,t){return this.workspaceService.updateWorkspace(e,t)}async remove(e){return this.workspaceService.removeWorkspace(e)}};t.WorkspaceController=c,o([(0,i.Post)(":name/unlock"),s(0,(0,i.Param)("name")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"unlock",null),o([(0,i.Get)(),s(0,(0,i.Query)("isTemp")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"findAll",null),o([(0,i.Get)(":name"),s(0,(0,i.Param)("name")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"findOne",null),o([(0,i.Post)(),s(0,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[Object]),n("design:returntype",Promise)],c.prototype,"create",null),o([(0,i.Patch)(":name"),s(0,(0,i.Param)("name")),s(1,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[String,Object]),n("design:returntype",Promise)],c.prototype,"update",null),o([(0,i.Delete)(":name"),s(0,(0,i.Param)("name")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"remove",null),t.WorkspaceController=c=o([(0,i.Controller)("workspace"),n("design:paramtypes",[a.WorkspaceService])],c)},2398:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ToolProvider=void 0;const a=r(3563),c=i(r(9055));let l=o=class{constructor(){this.toolFactories=new Map,c.default.info(`[${o.name}] ToolProvider initialized`)}registerToolFactory(e){const t=e.getToolName();c.default.info(`[${o.name}] Registering tool factory for: ${t}`),this.toolFactories.set(t,e)}getTools(e,t){return c.default.debug(`[${o.name}] Creating tools...`),e.filter((e=>this.toolFactories.has(e))).map((e=>this.toolFactories.get(e).create(t)))}getAllToolFactories(){return Array.from(this.toolFactories.values())}getToolFactory(e){return this.toolFactories.get(e)}};t.ToolProvider=l,t.ToolProvider=l=o=n([(0,a.Injectable)(),s("design:paramtypes",[])],l)},2410:e=>{"use strict";e.exports=require("glob")},2424:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.GraphAgentModule=void 0;const n=r(3563),s=r(2300),i=r(5873),a=r(3880),c=r(9449),l=r(3177),d=r(4193),u=r(9161);let f=class{};t.GraphAgentModule=f,t.GraphAgentModule=f=o([(0,n.Module)({imports:[i.WorkspaceModule,a.SessionModule,c.LangchainModule,l.MutationsModule,d.HomeModule,u.ChatCompletionModule],providers:[s.GraphAgentCollaborator],exports:[s.GraphAgentCollaborator]})],f)},2434:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GitUtils=void 0;const c=i(r(9896)),l=i(r(6928)),d=a(r(9055));class u{static ensureGitignoreExists(e){const t=l.join(e,".gitignore");return!c.existsSync(t)&&(d.default.info("No .gitignore file found, creating one with default patterns"),c.writeFileSync(t,this.DEFAULT_GITIGNORE),!0)}}t.GitUtils=u,u.DEFAULT_GITIGNORE="# Dependencies\nnode_modules/\n.pnpm-store/\nvenv/\npackage-lock.json\nyarn.lock\n\n# Build outputs\ndist/\nbuild/\ntarget/\n*.class\n*.jar\n*.war\n\n# IDEs and editors\n.idea/\n.vscode/\n*.swp\n*.swo\n.project\n.classpath\n.settings/\n\n# Logs and databases\n*.log\nlogs/\n*.sqlite\n*.db\n\n# Environment variables\n.env\n.env.*\n!.env.example\n\n# Testing\ncoverage/\n.nyc_output/\n\n# Temporary files\ntmp/\ntemp/\n.DS_Store\nThumbs.db\n\n# Compiled output\n*.pyc\n__pycache__/\n*.o\n*.so\n\n# Package files\n*.tgz\n*.zip\n*.tar.gz\n\n# Secrets\n*.pem\n*.key\n*.cert\n*.p12\n\n# Project specific\n.turbo/\n.cache/\n"},2597:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.EveAgentController=void 0;const a=r(3563),c=i(r(9055)),l=r(5369),d=r(6550),u=r(9668);let f=class{constructor(e,t,r){this.apiHandlerFactory=e,this.taskService=t,this.userService=r}async getStatus(){try{return await this.userService.getCurrentUser(),{status:"ok",version:"0.1.0"}}catch(e){if(e instanceof u.AuthenticationError)throw c.default.error(`[EveAgentController] Authentication error in getStatus: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw c.default.error(`[EveAgentController] Error in getStatus: ${e.message}`,e.stack),e}}async createTask(e){try{await this.userService.getCurrentUser();return{success:!0,taskId:await this.taskService.createTask(e)}}catch(e){if(e instanceof u.AuthenticationError)throw c.default.error(`[EveAgentController] Authentication error in createTask: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw c.default.error(`[EveAgentController] Error in createTask: ${e.message}`,e.stack),e}}async getTask(e){try{await this.userService.getCurrentUser();return{success:!0,task:await this.taskService.getTask(e)}}catch(e){if(e instanceof u.AuthenticationError)throw c.default.error(`[EveAgentController] Authentication error in getTask: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw c.default.error(`[EveAgentController] Error in getTask: ${e.message}`,e.stack),e}}async getTaskSteps(e){try{await this.userService.getCurrentUser();return{success:!0,steps:await this.taskService.getTaskSteps(e)}}catch(e){if(e instanceof u.AuthenticationError)throw c.default.error(`[EveAgentController] Authentication error in getTaskSteps: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw c.default.error(`[EveAgentController] Error in getTaskSteps: ${e.message}`,e.stack),e}}async getUserTasks(e,t="10",r="0"){try{const o=await this.userService.getCurrentUser();e!==o.userId&&(c.default.warn(`[EveAgentController] UserId mismatch in getUserTasks: requested ${e}, authenticated as ${o.userId}`),e=o.userId);return{success:!0,tasks:await this.taskService.getUserTasks(e,parseInt(t),parseInt(r))}}catch(e){if(e instanceof u.AuthenticationError)throw c.default.error(`[EveAgentController] Authentication error in getUserTasks: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw c.default.error(`[EveAgentController] Error in getUserTasks: ${e.message}`,e.stack),e}}};t.EveAgentController=f,o([(0,a.Get)("status"),n("design:type",Function),n("design:paramtypes",[]),n("design:returntype",Promise)],f.prototype,"getStatus",null),o([(0,a.Post)("tasks"),s(0,(0,a.Body)()),n("design:type",Function),n("design:paramtypes",[Object]),n("design:returntype",Promise)],f.prototype,"createTask",null),o([(0,a.Get)("tasks/:taskId"),s(0,(0,a.Param)("taskId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],f.prototype,"getTask",null),o([(0,a.Get)("tasks/:taskId/steps"),s(0,(0,a.Param)("taskId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],f.prototype,"getTaskSteps",null),o([(0,a.Get)("users/:userId/tasks"),s(0,(0,a.Param)("userId")),s(1,(0,a.Query)("limit")),s(2,(0,a.Query)("offset")),n("design:type",Function),n("design:paramtypes",[String,Object,Object]),n("design:returntype",Promise)],f.prototype,"getUserTasks",null),t.EveAgentController=f=o([(0,a.Controller)("eve-agent"),n("design:paramtypes",[l.ApiHandlerFactory,d.TaskService,u.UserService])],f)},2626:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ReadDependencySourceFile=void 0;const o=r(5534),n=r(1569);class s extends o.Tool{constructor(e){super(),this.name="read_dependency_source_file",this.description='Read the content of a specific source file from a dependency, using the package manager scheme (e.g. "maven"), locator (e.g. "com.example:example:1.0.0"), and file path.\n  Currently only maven is supported so the scheme is always "maven" and the locator is always a Maven GAV tuple (group:artifact:version).\n  If no repository URLs are provided then the default Maven central repository will be used.\n  The file path should be relative to the root of the source directory, e.g., "com/foo/Bar.java".\n  If the file is not found, it will check for alternative extensions (e.g., .kt for Kotlin).\n  ',this.schema=n.z.object({input:n.z.string().describe("A JSON string containing packageManagerScheme, locator, filePath, and optional repositoryUrls")}),this.sourceArtefactService=e}async _call(e){const{packageManagerScheme:t,locator:r,filePath:o,repositoryUrls:n}=JSON.parse(e.input);if(!t||!r||!o)return"Error: Missing required parameters. Please provide packageManagerScheme, locator, and filePath.";try{return await this.sourceArtefactService.readArtefactSourceFile(t,r,o,n)}catch(e){return`Error: Unable to read dependency source file. ${e instanceof Error?e.message:"Unknown error occurred"}`}}}t.ReadDependencySourceFile=s},2678:e=>{"use strict";e.exports=require("lru-cache")},2775:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getToolUseGuidelines=function(e){return"TOOL USE\n\nYou have access to a set of tools that are executed upon the user's approval. You can use one tool per message, and will receive the result of that tool use in the user's response. You use tools step-by-step to accomplish a given task, with each tool use informed by the result of the previous tool use.\n\n# Tool Use Formatting\n\nTool use is formatted using XML-style tags. The tool name is enclosed in opening and closing tags, and each parameter is similarly enclosed within its own set of tags. Here's the structure:\n\n<tool_name>\n<parameter1_name>value1</parameter1_name>\n<parameter2_name>value2</parameter2_name>\n...\n</tool_name>\n\nFor example:\n\n<read_file>\n<path>src/main.js</path>\n</read_file>\n\nIMPORTANT: NEVER try to wrap the tool call in an xml code block with backticks!\n\nAlways adhere to this format for the tool use to ensure proper parsing and execution.\n\n# Tool Use Guidelines\n\n1. In <thinking> tags, assess what information you already have and what information you need to proceed with the task.\n2. Choose the most appropriate tool based on the task and the tool descriptions provided. Assess if you need additional information to proceed, and which of the available tools would be most effective for gathering this information. For example using the list_files tool is more effective than running a command like `ls` in the terminal. It's critical that you think about each available tool and use the one that best fits the current step in the task.\n3. If multiple actions are needed, use one tool at a time per message to accomplish the task iteratively, with each tool use being informed by the result of the previous tool use. Do not assume the outcome of any tool use. Each step must be informed by the previous step's result.\n4. Formulate your tool use using the XML format specified for each tool.\n5. After each tool use, the user will respond with the result of that tool use. This result will provide you with the necessary information to continue your task or make further decisions. This response may include:\n  - Information about whether the tool succeeded or failed, along with any reasons for failure.\n  - Linter errors that may have arisen due to the changes you made, which you'll need to address.\n  - New terminal output in reaction to the changes, which you may need to consider or act upon.\n  - Any other relevant feedback or information related to the tool use.\n6. ALWAYS wait for user confirmation after each tool use before proceeding. Never assume the success of a tool use without explicit confirmation of the result from the user.\n\nIt is crucial to proceed step-by-step, waiting for the user's message after each tool use before moving forward with the task. This approach allows you to:\n1. Confirm the success of each step before proceeding.\n2. Address any issues or errors that arise immediately.\n3. Adapt your approach based on new information or unexpected results.\n4. Ensure that each action builds correctly on the previous ones.\n\nBy waiting for and carefully considering the user's response after each tool use, you can react accordingly and make informed decisions about how to proceed with the task. This iterative process helps ensure the overall success and accuracy of your work."}},2776:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getAppDataSource=t.AppDataSource=void 0;const c=a(r(9055)),l=r(6297),d=a(r(1832)),u=i(r(9187)),f=r(8627),p=r(3903);class h{constructor(e){this.dbChoice=e,this.dbDebugContextService=null}setDbDebugContextService(e){this.dbDebugContextService=e,c.default.info("DbDebugContextService set in AppDataSource")}async initKnexOnly(){const e=this.dbChoice?(0,u.default)(this.dbChoice):(0,u.getDefaultKnexConfig)();c.default.info("Initializing knex with config:",{client:e.client,connection:"string"==typeof e.connection?e.connection:{...e.connection,password:"***"},pool:e.pool,dbChoice:this.dbChoice}),this.knex=(0,d.default)(e),this.setupQueryDebugListeners(),await this.verifyDbConnection(this.knex)}async verifyDbConnection(e){try{c.default.info("Verifying database connection...");const t=e.client.pool;if(t&&"object"==typeof t){const e={min:t.min,max:t.max};"function"==typeof t.numUsed&&(e.numUsed=t.numUsed()),"function"==typeof t.numFree&&(e.numFree=t.numFree()),"function"==typeof t.pendingCreates&&(e.pendingCreates=t.pendingCreates()),"function"==typeof t.pendingAcquires&&(e.pendingAcquires=t.pendingAcquires()),c.default.info("Connection pool status:",e)}await e.raw("SELECT 1"),c.default.info("Database connection successful")}catch(e){throw c.default.error("Database connection failed",{error:e.message,stack:e.stack,code:e.code,errno:e.errno}),e}}async initialize(){await this.initKnexOnly(),this.migrationManager=new f.KnexMigrationManager(this.knex),await this.runMigrations()}async runMigrations(){try{const e=await this.migrationManager.runMigrations();c.default.info(`Ran ${e.length} migrations`)}catch(e){throw c.default.error("Error running database migrations",e),e}}async close(){c.default.info("Closing data source..."),this.knex&&await this.knex.destroy(),c.default.info("Data source closed")}buildPaginationQuery(e,t){const r=(t.page-1)*t.limit;return`${e} LIMIT ${t.limit} OFFSET ${r}`}buildSortQuery(e,t){return`${e} ORDER BY ${t.field} ${t.order}`}setupQueryDebugListeners(){if(!this.knex)return void c.default.warn("Cannot set up query debug listeners: knex instance not initialized");"true"===process.env.EVE_SQL_QUERY_LOGGING?(c.default.info("SQL query logging is enabled"),this.knex.on("query",(e=>{e.queryId=(0,p.v4)(),e.startTime=Date.now();const t=this.dbDebugContextService?.getContext();t&&(t.queryId=e.queryId),l.debugLogger.log(`[Knex Query Start] ID: ${e.queryId}`,{sql:e.sql,bindings:e.bindings,operationId:t?.operationId,operationName:t?.operationName,taskId:t?.taskId})})),this.knex.on("query-response",((e,t)=>{const r=t.startTime?Date.now()-t.startTime:-1,o=this.dbDebugContextService?.getContext();l.debugLogger.log(`[Knex Query Success] ID: ${t.queryId} (Duration: ${r}ms)`,{operationId:o?.operationId,operationName:o?.operationName,taskId:o?.taskId})})),this.knex.on("query-error",((e,t)=>{const r=t.startTime?Date.now()-t.startTime:-1,o=this.dbDebugContextService?.getContext(),n=e.message.includes("SQLITE_BUSY")||e.message.includes("database is locked");if(c.default.error(`[Knex Query Error] ID: ${t.queryId} (Duration: ${r}ms)${n?" - DATABASE LOCKED!":""}`,{error:e.message,code:e.code,errno:e.errno,sql:t.sql,bindings:t.bindings,operationId:o?.operationId,operationName:o?.operationName,taskId:o?.taskId}),n&&this.dbDebugContextService){const e=this.dbDebugContextService.getActiveContexts();c.default.error("[Knex Query Error] DATABASE LOCKED! Active DB contexts potentially holding lock:",e.map((e=>({opId:e.operationId,name:e.operationName,taskId:e.taskId,ageMs:Date.now()-e.startTime,currentQueryId:e.queryId}))))}})),c.default.info("Knex query debug listeners set up successfully")):c.default.info("SQL query logging is disabled. Set EVE_SQL_QUERY_LOGGING=true to enable.")}}t.AppDataSource=h;let m=null;t.getAppDataSource=async()=>(null===m?(c.default.info("Creating new AppDataSource instance..."),m=new h,await m.initialize()):c.default.info("Returning existing AppDataSource instance..."),m)},2810:e=>{"use strict";e.exports=require("@nestjs/serve-static")},2873:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MultilineToolCallingScheme=void 0;const o=r(6511);class n extends o.ToolCallingScheme{getSystemPrompt(e,t){return`\n\nYou are an AI being used as part of an agent to help implement the user's request.\nYou are one part of a multi-step process and you are operating in a loop.\nEach response should be targeted to provide some feedback to the user about what is happening now, but mostly it needs to instruct the agent on what to do next.\n\nThe general format for your responses is:\n\n<free text describing what our plan is>\n\n<<<<< NEXT_ACTION next_action >>>>> (where next_action is one of: call_tools, continue, finish)\n\nWhen you need to use a tool, use the following format embedded in your response:\n\n<<<<< NEXT_ACTION next_action >>>>>\n\n<<<<< TOOL CALL tool_name\n<<<<< arg_name_1\n(argument value 1)\n<<<<< arg_name_2\n(argument value 2)\n...\n>>>>> TOOL CALL END\n\n- **next_action** can be one of: \`call_tools\`, \`continue\`, or \`finish\`.\n  - Use \`call_tools\` if you expect the agent to execute the tools you've specified.\n  - Use \`continue\` if you want to proceed without tool execution and control will return to you.\n  - Use \`finish\` when you have completed all tasks or if you need more information from the user and you want to return control to them.\n- Start the next action line with \`<<<<< NEXT_ACTION next_action >>>>>\`.\n- If you are calling tools, include the tool calls as specified.\n- IMPORTANT: Just do one step at a time, ask for a tool call and wait for the response before asking for another tool call (or continuing/finishing).\n\nAvailable Tools:\n\n${this.getToolInstructions(t)}\n\nRemember:\n\n- **Use the exact argument names as specified for each tool.**\n- **Do not include any JSON or markdown formatting in your response.**\n- **Provide code snippets or text exactly as needed, without worrying about escaping.**\n- **Only use tools when necessary.**\n\n---\n\nExamples:\n\n1a. **Using \`update_file\` to update an existing file and specifying \`call_tools\`:**\n\nI need to update the file to replace certain code.\n\n<<<<< NEXT_ACTION call_tools >>>>>\n\n<<<<< TOOL CALL update_file\n<<<<< filePath\n/src/utils/math.js\n<<<<< search\nfunction add(a, b) {\n  return a + b;\n}\n<<<<< replace\nfunction add(a, b) {\n  return a - b;\n}\n>>>>> TOOL CALL END\n\n1b. **Using \`update_file\` to create a new file and specifying \`call_tools\`:**\n\nOr another example when we are creating a new file:\n\n<<<<< NEXT_ACTION call_tools >>>>>\n\n<<<<< TOOL CALL update_file\n<<<<< filePath\n/src/utils/math.js\n<<<<< search\n<<<<< replace\nfunction add(a, b) {\n  return a - b;\n}\n>>>>> TOOL CALL END\n\n2. **Continuing without tool execution (\`continue\`):**\n\nI will now proceed to document the changes made.\n\n<<<<< NEXT_ACTION continue >>>>>\n\n3. **Finishing the task (\`finish\`):**\n\nAll tasks are completed. Here's a summary of the changes made.\n\n<<<<< NEXT_ACTION finish >>>>>\n\n---\n\nNow, please proceed to assist the user with their request.\n`}parseLLMResponse(e){const t=this.extractNextAction(e),r=this.extractToolCalls(e);return{response:e.replace(/<<<<< NEXT_ACTION.*?>>>>>>/gs,"").replace(/<<<<< TOOL CALL.*?>>>>> TOOL CALL END/gs,"").trim(),tool_calls:r,next:t}}getToolInstructions(e){return e.map((e=>`Tool Name: ${e.name}\nDescription: ${e.description}\nUsage:\n<<<<< TOOL CALL ${e.name}\n${this.getToolArgumentsUsage(e)}\n>>>>> TOOL CALL END`)).join("\n\n")}getToolArgumentsUsage(e){const t=e.schema;if(!t||!t._def||"function"!=typeof t._def.shape)return"(No parameters required)";try{const e=t._def.shape();return e&&"object"==typeof e?Object.keys(e).map((e=>`<<<<< ${e}\n(value for ${e})`)).join("\n"):"(No parameters required)"}catch(e){return"(Error reading tool parameters)"}}extractNextAction(e){const t=e.match(/<<<<< NEXT_ACTION (\w+) >>>>>/);if(t){const e=t[1];if(["call_tools","continue","finish"].includes(e))return e}return"continue"}extractToolCalls(e){const t=[],r=/<<<<< TOOL CALL (\w+)[\s\S]*?>>>>> TOOL CALL END/g;let o;for(;null!==(o=r.exec(e));){const e=o[1],r=o[0],n=this.extractArgs(r);t.push({tool_name:e,args:n})}return t}extractArgs(e){const t={},r=/<<<<< (\w+)\n([\s\S]*?)(?=(<<<<< \w+|>>>>> TOOL CALL END))/g;let o;for(;null!==(o=r.exec(e));){const e=o[1],r=o[2].trim();t[e]=r}return t}}t.MultilineToolCallingScheme=n},2900:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SerpApi=void 0;const a=r(5534),c=r(1569),l=i(r(9055)),d=r(3563),u=r(2368),f=r(6910),p=r(5306);let h=class extends a.Tool{constructor(e){super(),this.configService=e,this.name="serp_api",this.description="Search the web using SerpAPI and return the top search results. This takes a search term and returns the top results.",this.schema=c.z.object({searchTerm:c.z.string().describe("The search term to look for"),numResults:c.z.number().optional().describe("Number of results to return (default: 10)"),start:c.z.number().optional().describe("Starting position for pagination (0-based, optional)")}),this.apiKey=this.configService.getProperty(f.ConfigPropNames.SERP_API_KEY,""),this.apiKey||l.default.warn("SerpAPI key not found in config. The SerpAPI tool will not work without an API key.")}async _call({searchTerm:e,numResults:t=10,start:r=0}){if(!this.apiKey)return"Error: SerpAPI key not configured. Please set the SERP_API_KEY in system configuration.";try{l.default.info(`Searching with SerpAPI: "${e}", numResults: ${t}, start: ${r}`);const o={api_key:this.apiKey,q:e,engine:"google",google_domain:"google.com",hl:"en",num:t,start:r},n=await new Promise(((e,t)=>{(0,p.getJson)(o,(r=>{"Error"===r.search_metadata?.status?t(new Error(r.search_metadata.id||"Unknown error")):e(r)}))}));if(!n||!n.organic_results||0===n.organic_results.length)return`No results found for search: "${e}"`;const s=n.organic_results;let i=`Search results for: "${e}" (${n.search_information?.total_results||"unknown"} total results)\n`;if(i+=`Page: ${Math.floor(r/t)+1} (showing results ${r+1}-${r+s.length})\n\n`,s.forEach(((e,t)=>{i+=`${r+t+1}. ${e.title||"No title"}\n`,i+=`   URL: ${e.link||"No link"}\n`,e.snippet&&(i+=`   Snippet: ${e.snippet}\n`),e.date&&(i+=`   Date: ${e.date}\n`),i+="\n"})),n.pagination&&n.pagination.next){i+=`\nTo see more results, use start=${r+t} with the same search term.\n`}return i}catch(t){l.default.error(`Error searching with SerpAPI: ${e}`,t);return`Error searching with SerpAPI: ${t instanceof Error?t.message:"Unknown error occurred"}`}}};t.SerpApi=h,t.SerpApi=h=o([s(0,(0,d.Inject)(u.ConfigService)),n("design:paramtypes",[u.ConfigService])],h)},2923:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CurrentTimestamp=void 0;const o=r(7773);class n extends o.Tool{constructor(){super(...arguments),this.name="current_timestamp",this.description="Returns the current timestamp in epoch milliseconds and ISO format"}async _call(){const e=new Date,t=e.getTime(),r=e.toISOString();return JSON.stringify({epochMillis:t,isoFormat:r})}}t.CurrentTimestamp=n},3049:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.AudioTranscriptionModule=void 0;const n=r(3563),s=r(885),i=r(4562);let a=class{};t.AudioTranscriptionModule=a,t.AudioTranscriptionModule=a=o([(0,n.Module)({controllers:[s.AudioTranscriptionController],providers:[i.AudioTranscriptionService,s.AudioTranscriptionController]})],a)},3060:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AttemptCompletionTool=void 0;const a=r(3563),c=i(r(9055));let l=o=class{constructor(){this.name="attempt_completion",this.description="After each tool use, the user will respond with the result of that tool use, i.e. if it succeeded or failed, along with any reasons for failure. Once you've received the results of tool uses and can confirm that the task is complete, use this tool to present the result of your work to the user.",c.default.info(`[${o.name}] AttemptCompletionTool initialized`)}getUsageInstructions(e){return"## attempt_completion\nDescription: After each tool use, the user will respond with the result of that tool use, i.e. if it succeeded or failed, along with any reasons for failure. Once you've received the results of tool uses and can confirm that the task is complete, use this tool to present the result of your work to the user. Optionally you may provide a CLI command to showcase the result of your work. The user may respond with feedback if they are not satisfied with the result, which you can use to make improvements and try again.\nIMPORTANT NOTE: This tool CANNOT be used until you've confirmed from the user that any previous tool uses were successful. Failure to do so will result in code corruption and system failure. Before using this tool, you must ask yourself in <thinking></thinking> tags if you've confirmed from the user that any previous tool uses were successful. If not, then DO NOT use this tool.\nParameters:\n- result: (required) The result of the task. Formulate this result in a way that is final and does not require further input from the user. Don't end your result with questions or offers for further assistance.\n- command: (optional) A CLI command to execute to show a live demo of the result to the user. For example, use `open index.html` to display a created html website, or `open localhost:3000` to display a locally running development server. But DO NOT use commands like `echo` or `cat` that merely print text. This command should be valid for the current operating system. Ensure the command is properly formatted and does not contain any harmful instructions.\nUsage:\n<attempt_completion>\n<result>\nYour final result description here\n</result>\n<command>Command to demonstrate result (optional)</command>\n</attempt_completion>"}validateParams(e){return"string"==typeof e.result&&""!==e.result.trim()}async execute(e){const{result:t,command:r}=e;return c.default.info(`[${o.name}] Attempting completion: ${t.substring(0,50)}...`),{result:t,command:r,success:!0}}};t.AttemptCompletionTool=l,t.AttemptCompletionTool=l=o=n([(0,a.Injectable)(),s("design:paramtypes",[])],l)},3118:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AnthropicMessageTransformer=void 0;const n=o(r(9055)),s=r(6297);t.AnthropicMessageTransformer=class{toProviderFormat(e,t=!1){n.default.info(`[AnthropicMessageTransformer] Converting ${e.length} messages to provider format. Thinking enabled: ${t}`);return e.map(((e,r)=>{if("anthropic"===e.providerId&&e.providerMetadata)return n.default.info(`[AnthropicMessageTransformer] Using provider metadata for message ${r}`),e.providerMetadata;n.default.info(`[AnthropicMessageTransformer] Processing message ${r}, role: ${e.role}`);const o="assistant"===e.role?"assistant":"user";n.default.info(`[AnthropicMessageTransformer] Using role: ${o}`);const i=[];for(const r of e.segments)if("text"===r.type)i.push({type:"text",text:r.content});else if("thinking"===r.type)if(t){const t={type:"thinking",thinking:r.content};"string"==typeof r.metadata?.signature&&r.metadata.signature.length>0?t.signature=r.metadata.signature:(n.default.warn(`[AnthropicMessageTransformer] Missing or invalid signature for thinking segment in message ${e.id}. Omitting signature field.`),s.debugLogger.dumpObject("[AnthropicMessageTransformer] Segment with missing signature:",r)),i.push(t)}else n.default.info(`[AnthropicMessageTransformer] Converting past thinking segment to text for message ${e.id} as thinking is disabled for this request.`),i.push({type:"text",text:`<thinking>${r.content}</thinking>`});else if("other"===r.type&&"tool_use"===r.metadata?.providerSpecificType){const e=JSON.parse(r.content);i.push({type:"tool_use",id:e.id||"tool-"+Date.now(),name:e.name,input:e.input})}else"other"===r.type&&"image"===r.metadata?.providerSpecificType?i.push({type:"image",source:{type:"url",url:r.metadata.url,media_type:r.metadata.mediaType||"image/jpeg"}}):(n.default.warn(`[AnthropicMessageTransformer] Unsupported segment type: ${r.type}. Converting to text.`),i.push({type:"text",text:r.content}));return{role:o,content:i}}))}fromProviderFormat(e,t){return e.map((e=>{const o="assistant"===e.role?"assistant":"user",s=[];if(Array.isArray(e.content))for(const t of e.content)"text"===t.type?s.push({type:"text",content:t.text}):"thinking"===t.type?s.push({type:"thinking",content:t.thinking||"",metadata:{signature:t.signature}}):"image"===t.type&&t.source&&t.source.url?s.push({type:"other",content:`[Image: ${t.source.url}]`,metadata:{providerSpecificType:"image",url:t.source.url,mediaType:t.source.media_type||"image/jpeg"}}):(n.default.warn(`[AnthropicMessageTransformer] Unsupported content type from provider: ${t.type}. Converting to text.`),s.push({type:"text",content:JSON.stringify(t)}));else"string"==typeof e.content?s.push({type:"text",content:e.content}):(n.default.warn("[AnthropicMessageTransformer] Unknown content format from provider. Converting to string."),s.push({type:"text",content:JSON.stringify(e.content)}));return{id:r(9100).ulid(),taskId:t,role:o,segments:s,providerId:"anthropic",providerMetadata:{format:"structured"},createdAt:new Date}}))}}},3131:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ExecuteCommandTool=void 0;const a=r(3563),c=r(5317),l=i(r(9055)),d=r(9581);let u=o=class{constructor(e){this.name="execute_command",this.description="Request to execute a CLI command on the system.",this.workingDir=e}validateParams(e){return"string"==typeof e.command&&""!==e.command.trim()&&"boolean"==typeof e.requires_approval}getUsageInstructions(e){return`## execute_command\nDescription: Request to execute a CLI command on the system. Use this when you need to perform system operations or run specific commands to accomplish any step in the user's task. You must tailor your command to the user's system and provide a clear explanation of what the command does. For command chaining, use the appropriate chaining syntax for the user's shell. Prefer to execute complex CLI commands over creating executable scripts, as they are more flexible and easier to run. Commands will be executed in the current working directory: ${e.workingDir}\nParameters:\n- command: (required) The CLI command to execute. This should be valid for the current operating system. Ensure the command is properly formatted and does not contain any harmful instructions.\n- requires_approval: (required) A boolean indicating whether this command requires explicit user approval before execution in case the user has auto-approve mode enabled. Set to 'true' for potentially impactful operations like installing/uninstalling packages, deleting/overwriting files, system configuration changes, network operations, or any commands that could have unintended side effects. Set to 'false' for safe operations like reading files/directories, running development servers, building projects, and other non-destructive operations.\nUsage:\n<execute_command>\n<command>Your command here</command>\n<requires_approval>true or false</requires_approval>\n</execute_command>`}async execute(e){const{command:t,requires_approval:r}=e;l.default.info(`[${o.name}] Executing command in ${this.workingDir}: ${t}`);const n=this.workingDir;return new Promise(((e,r)=>{try{const s=(0,c.spawn)(t,{shell:!0,cwd:n,stdio:["ignore","pipe","pipe"]});let i="",a="";s.stdout.on("data",(e=>{i+=e.toString()})),s.stderr.on("data",(e=>{a+=e.toString()})),s.on("close",(r=>{const n=(i+a).trim();l.default.info(`[${o.name}] Command "${t}" executed with exit code: ${r}`),e({output:n,exitCode:null===r?-1:r})})),s.on("error",(e=>{const n=`Error executing command "${t}": ${e.message}`;l.default.error(`[${o.name}] ${n}\n${e.stack}`);const s=e instanceof Error&&"code"in e&&"string"==typeof e.code?e.code:"COMMAND_EXECUTION_ERROR";r(new d.FileSystemError(n,s))}))}catch(e){const n=`Error spawning command "${t}": ${e.message}`;l.default.error(`[${o.name}] ${n}\n${e.stack}`);const s=e instanceof Error&&"code"in e&&"string"==typeof e.code?e.code:"COMMAND_SPAWN_ERROR";r(new d.FileSystemError(n,s))}}))}};t.ExecuteCommandTool=u,t.ExecuteCommandTool=u=o=n([(0,a.Injectable)(),s("design:paramtypes",[String])],u)},3153:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.SourceArtefactService=void 0;const s=r(3563),i=r(5908),a=r(8547),c=r(4358);let l=class{constructor(e,t){this.sourceArtefactRepository=e,this.schemePackageManager=t}async importSourceArtefact(e,t,r){if(await this.findBySchemeAndLocator(e,t))throw new s.BadRequestException(`Source artefact with scheme '${e}' and locator '${t}' already exists.`);try{const o=await this.schemePackageManager.downloadAndStoreSources(e,t,r);return this.sourceArtefactRepository.create(o)}catch(r){const o=r instanceof Error?r.message:"Unknown error occurred";return this.sourceArtefactRepository.create(new a.SourceArtefact({scheme:e,locator:t,valid:!1,error:o,repo:"",cacheSrcBaseDir:""}))}}async findById(e){return this.sourceArtefactRepository.findById(e)}async delete(e){const t=await this.sourceArtefactRepository.findById(e);return t&&await this.schemePackageManager.deleteSourceCache(t.cacheSrcBaseDir),this.sourceArtefactRepository.delete(e)}async findBySchemeAndLocator(e,t){return this.sourceArtefactRepository.findBySchemeAndLocator(e,t)}async query(e,t,r=1,o=10,n="locator",s="ASC"){return this.sourceArtefactRepository.query(e,t,r,o,n,s)}async readArtefactSourceTree(e,t,r){const o=await this.ensureSourceArtefact(e,t,r);return this.schemePackageManager.getScheme(e).readArtefactSourceTree(o)}async readArtefactSourceFile(e,t,r,o){const n=await this.ensureSourceArtefact(e,t,o);return this.schemePackageManager.getScheme(e).readArtefactSourceFile(n,r)}async ensureSourceArtefact(e,t,r){let o=await this.findBySchemeAndLocator(e,t);const n=this.schemePackageManager.getScheme(e);return o&&!await n.needsImport(o)||(o=await this.importSourceArtefact(e,t,r)),o}};t.SourceArtefactService=l,t.SourceArtefactService=l=o([(0,s.Injectable)(),n("design:paramtypes",[i.SourceArtefactRepository,c.SchemePackageManager])],l)},3177:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.MutationsModule=void 0;const n=r(3563),s=r(376),i=r(9989),a=r(7602),c=r(672);let l=class{};t.MutationsModule=l,t.MutationsModule=l=o([(0,n.Module)({imports:[s.DataSourceModule],controllers:[i.MutationsController],providers:[a.MutationsService,c.MutationRepository],exports:[a.MutationsService]})],l)},3192:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.containsBase64Image=function(e){if("object"!=typeof e)return!1;if("image_url"===e?.type&&e?.image_url?.url){const t=e.image_url.url;return t.startsWith("data:image")&&t.includes("base64")}if(e?.data&&"string"==typeof e.data)return e.data.length>1e3&&/^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$/.test(e.data);return!1},t.processImageContent=function e(t){if(!t)return t;if("string"==typeof t&&(t.startsWith("{")||t.startsWith("[")))try{const r=JSON.parse(t),o=e(r);return JSON.stringify(o)}catch(e){return t}if(Array.isArray(t))return t.map((t=>e(t)));if("object"==typeof t&&null!==t){if("image_url"===t.type&&t.image_url?.url){const e=t.image_url.url;if(e.startsWith("data:image")&&e.includes("base64")){const t=e.match(/data:image\/([a-zA-Z0-9]+);base64,/),r=t?t[1]:"unknown",o=e.indexOf("base64,")+7,s=e.length-o;return n.default.info(`[ImageHandler] Replacing base64 image data (${r}, ${s} bytes) with reference`),{type:"image_url",image_url:{url:`[BASE64_IMAGE_DATA_${r.toUpperCase()}_${s}_BYTES]`}}}}if(t.data&&"string"==typeof t.data&&t.data.length>1e3&&/^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$/.test(t.data)){const e=t.data.length;return n.default.info(`[ImageHandler] Replacing base64 data (${e} bytes) with reference`),{...t,data:`[BASE64_DATA_${e}_BYTES]`}}const r={};for(const[o,n]of Object.entries(t))r[o]=e(n);return r}return t};const n=o(r(9055))},3220:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.ReadFileToolFactory=void 0;const s=r(3563),i=r(4833);let a=class{constructor(){}getToolName(){return"read_file"}create(e){return new i.ReadFileTool(e.workingDir)}};t.ReadFileToolFactory=a,t.ReadFileToolFactory=a=o([(0,s.Injectable)(),n("design:paramtypes",[])],a)},3229:function(e,t,r){"use strict";e=r.nmd(e);var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.convertDocxToHtml=async function(e,t={}){await b(e,t);return document.documentElement.outerHTML},t.convertDocxToHtmlDom=b,t.extractRawText=async function(e){w.default.debug("Extracting raw text from DOCX buffer");try{w.default.debug("Starting mammoth raw text extraction");const t=await d.extractRawText({buffer:e});return t.messages&&t.messages.length>0&&w.default.warn("Extraction warnings:",t.messages),t.value}catch(e){throw new Error(`Failed to extract raw text from DOCX: ${e.message}`)}},t.extractDocxXmlFromBytes=async function(e){return w.default.debug("Extracting XML from DOCX buffer"),new Promise(((t,r)=>{try{w.default.debug("Opening DOCX buffer for XML extraction"),g.fromBuffer(e,{lazyEntries:!0},((e,o)=>{if(w.default.debug("DOCX buffer opened"),e)return void r(new Error(`Failed to open DOCX buffer: ${e.message}`));let n="";o.on("entry",(e=>{w.default.debug("Found entry: %s",e.fileName),"word/document.xml"===e.fileName?o.openReadStream(e,((e,o)=>{if(e)return void r(new Error(`Failed to read document.xml: ${e.message}`));const s=[];o.on("data",(e=>s.push(e))),o.on("end",(async()=>{n=Buffer.concat(s).toString("utf8");try{const e=new p.Parser,r=await e.parseStringPromise(n),o=new p.Builder({renderOpts:{pretty:!0}}).buildObject(r);t(o)}catch(e){r(new Error(`Failed to parse XML: ${e.message}`))}}))})):(w.default.debug("Skipping entry: %s",e.fileName),o.readEntry())})),o.on("end",(()=>{w.default.debug("DOCX buffer ended"),n||r(new Error("Invalid .docx file: document.xml not found"))})),w.default.debug("Reading DOCX buffer entry"),o.readEntry()}))}catch(e){r(new Error(`Error processing DOCX buffer: ${e.message}`))}}))},t.extractDocxXml=S,t.editDocxFile=async function(e,t,r,o,n){if(w.default.info("Editing DOCX file: %s",e),w.default.info("Output path: %s",o),!t)throw new Error("Search text cannot be empty");const s=n||await c.promises.mkdtemp(f.join(u.tmpdir(),"docx-edit-"));try{const n=e=>new Promise(((t,r)=>{g.open(e,{lazyEntries:!0},((e,o)=>{e?r(e):t(o)}))})),i=await n(e),a=[];let l="";await new Promise(((e,t)=>{i.on("entry",(e=>{const r=f.join(s,e.fileName);c.mkdirSync(f.dirname(r),{recursive:!0}),i.openReadStream(e,((o,n)=>{if(o)t(o);else{if("word/document.xml"===e.fileName){const e=[];n.on("data",(t=>e.push(t))),n.on("end",(()=>{l=Buffer.concat(e).toString("utf8"),c.writeFileSync(r,l)}))}else{const e=c.createWriteStream(r);n.pipe(e)}a.push(new Promise((e=>{n.on("end",e)})))}})),i.readEntry()})),i.on("end",(()=>e())),i.on("error",t),i.readEntry()})),await Promise.all(a);const d=l.indexOf(t);if(-1===d)throw new Error("Search text not found in document");const u=l.slice(0,d)+r+l.slice(d+t.length);await c.promises.writeFile(f.join(s,"word/document.xml"),u);const p=new y.ZipFile,h=async(e,t="")=>{const r=await c.promises.readdir(e,{withFileTypes:!0});for(const o of r){const r=f.join(e,o.name),n=f.join(t,o.name);o.isDirectory()?await h(r,n):p.addFile(r,n)}};await h(s);const m=c.createWriteStream(o);p.outputStream.pipe(m),await new Promise(((e,t)=>{m.on("close",e),m.on("error",t),p.end()}))}finally{n||await c.promises.rm(s,{recursive:!0,force:!0})}},t.extractSectionsFromDocxBuffer=I,t.extractDocxXmlPartsFromBytes=E,t.extractSectionsFromXmlContent=R,t.extractSections=C;const c=i(r(9896)),l=r(2325),d=i(r(7393)),u=i(r(857)),f=i(r(6928)),p=i(r(6566)),h=r(1879),m=i(r(9863)),g=i(r(1115)),y=i(r(7020)),v=i(r(6610)),_=v.default||v,w=a(r(9055)),k=1;async function b(e,t={}){w.default.debug("Converting DOCX to HTML with options: %j",t);try{w.default.debug("Starting mammoth conversion");const r=await d.convertToHtml({buffer:e});r.messages&&r.messages.length>0&&w.default.warn("Conversion warnings:",r.messages);let o=r.value;t.wrapperElement&&(w.default.debug("Adding wrapper element: %s",t.wrapperElement),o=`<html><head></head><body>${o}</body></html>`);let n=new l.JSDOM(o).window.document;if(t.removeImages){const e=n.getElementsByTagName("img");for(;e.length>0;)e[0].parentNode?.removeChild(e[0])}return n}catch(e){throw new Error(`Failed to convert DOCX to HTML: ${e.message}`)}}async function S(e){return w.default.info("Extracting XML from DOCX file: %s",e),new Promise(((t,r)=>{try{w.default.info("Opening DOCX file for XML extraction"),g.open(e,{lazyEntries:!0},((e,o)=>{if(e)return void r(new Error(`Failed to open DOCX file: ${e.message}`));let n="";o.on("entry",(e=>{"word/document.xml"===e.fileName?o.openReadStream(e,((e,o)=>{if(e)return void r(new Error(`Failed to read document.xml: ${e.message}`));const s=[];o.on("data",(e=>s.push(e))),o.on("end",(async()=>{n=Buffer.concat(s).toString("utf8");try{const e=new p.Parser,r=await e.parseStringPromise(n),o=new p.Builder({renderOpts:{pretty:!0}}).buildObject(r);t(o)}catch(e){r(new Error(`Failed to parse XML: ${e.message}`))}}))})):o.readEntry()})),o.on("end",(()=>{n||r(new Error("Invalid .docx file: document.xml not found"))})),o.readEntry()}))}catch(e){r(new Error(`Error processing DOCX file: ${e.message}`))}}))}function T(e){if(w.default.debug("Getting XPath for node: %s",e.nodeName),e.nodeType!==k)return w.default.debug("Node is not an element node, returning empty path"),"";let t="",r=e;const o=e.ownerDocument.documentElement,n={};for(let e=0;e<o.attributes.length;e++){const t=o.attributes[e];if(t.name.startsWith("xmlns:")){const e=t.name.split(":")[1];n[e]=t.value}else"xmlns"===t.name&&(n.default=t.value)}function s(e){if(!e)return null;for(const t in n)if(n[t]===e)return t;return null}for(;r&&r.nodeType===k&&"document"!==r.localName;){let e=1,o=r.previousSibling;for(;o;)o.nodeType===k&&o.localName===r.localName&&o.namespaceURI===r.namespaceURI&&e++,o=o.previousSibling;const n=s(r.namespaceURI);w.default.info("Node details - localName: %s, namespaceURI: %s, resolved prefix: %s",r.localName,r.namespaceURI,n);t=`/${n?`${n}:${r.localName}`:r.localName}[${e}]`+t,r=r.parentNode}if(r&&r.nodeType===k&&"document"===r.localName){const e=s(r.namespaceURI);t=`/${e?`${e}:${r.localName}`:r.localName}${t}`}return w.default.info("Completed XPath calculation for node: %s, path: %s",e.nodeName,t),t}function O(e,t){let r=t;for(;r;){if(r===e)return!0;r=r.parentNode}return!1}function P(e,t){w.default.debug("Finding label for input node: %s",e.nodeName);let r=e.parentNode;for(;r&&"w:body"!==r.nodeName;){if("w:tr"===r.nodeName){const o=Array.from(r.childNodes).filter((e=>"w:tc"===e.nodeName));w.default.debug("Found %d cells in table row",o.length);for(let n=0;n<o.length;n++){if(O(o[n],e)){w.default.debug("Input node found in cell %d, checking previous cells for label",n);for(let e=n-1;e>=0;e--){const r=t(".//w:t",o[e]).map((e=>e.textContent?.trim())).filter((e=>e)).join(" ");if(r)return w.default.debug("Found label text in same row: %s",r),r}let e=r;for(;e.previousSibling;){const r=e.previousSibling;if("w:tr"===r.nodeName){const e=Array.from(r.childNodes).filter((e=>"w:tc"===e.nodeName));for(const r of e){if(t('.//w:shd[@w:fill="E5E5E5"]',r)[0]){const e=t(".//w:t",r).map((e=>e.textContent?.trim())).filter((e=>e)).join(" ");if(e)return w.default.debug("Found label text in previous row: %s",e),e}}}e=r}}}}r=r.parentNode}return w.default.info("No label found for input node"),null}function $(e,t,r,o){function n(e){const r=t.find((t=>t.xpath===e.xpath));if(r)return r.label!==e.label&&w.default.warn("Found duplicate XPath with different labels. XPath: %s, Existing label: %s, New label: %s",e.xpath,r.label,e.label),void w.default.info("Skipping duplicate input with XPath: %s",e.xpath);t.push(e)}w.default.debug("Processing inputs in section: %s",e.nodeName);const s=r(".//w:sdt",e);w.default.debug("Found %d content controls (sdt nodes)",s.length),s.forEach((e=>{const t=r("./w:sdtPr",e)[0];if(t){let o="text",s="";w.default.debug("Determining input type for sdt node: %s",e.nodeName),w.default.debug("SDT Properties node structure: %j",t.toString());if(r(".//w14:checkbox",t)[0])w.default.debug("Found checkbox node - setting input type to checkbox"),o="checkbox";else{const e=r("./w:richText",t)[0],n=r("./w:text",t)[0];w.default.info("Checking for textarea: richTextNode=%s, textNode=%s",!!e,!!n&&!!r("./w:multiLine",n)[0]),e||n&&r("./w:multiLine",n)[0]?(w.default.debug("Found rich text or multiline text node - setting input type to textarea"),o="textarea"):w.default.debug("No special nodes found - defaulting to text input type")}const i=r("./w:sdtContent",e)[0];if(i){r(".//w:t",i).forEach((e=>{s+=e.textContent||""}))}const a=T(e),c=r("./w:id",t)[0],l=c?c.getAttribute("w:val"):null,d=P(e,r);w.default.info("Processing input node - Type: %s, XPath: %s, ID: %s, Label: %s",o,a,l,d),w.default.info("Original value from XML node: %s",s),n({xpath:a,type:o,id:l,label:d,originalValue:s||null})}}));const i=r(".//w:tc",e);w.default.info("Found %d table cells to process",i.length),i.forEach((e=>{if(r('.//w:tcBorders/w:bottom[@w:val="single"]',e)[0]){const t=r(".//w:t",e).map((e=>e.textContent||"")).join("").trim();if(!o||!t||" "===t){const o=e.parentNode;if(o&&"w:tr"===o.nodeName){const s=Array.from(o.childNodes).filter((e=>"w:tc"===e.nodeName)),i=s.findIndex((t=>t===e));if(i>0){const o=s[i-1],a=r(".//w:t",o).map((e=>e.textContent?.trim())).filter((e=>e)).join(" ");if(a){w.default.info("Found label text from left cell: %s",a);const r=e;w.default.info("Using the cell node itself as the target node");n({xpath:T(r),type:"text",id:null,label:a,originalValue:t||null})}else w.default.info("Left cell exists but has no text, skipping input")}else w.default.info("No cell to the left, skipping input")}else w.default.info("Could not find parent row for cell, skipping input")}}}));const a=r(".//w:t",e);w.default.info("Found %d text nodes to process",a.length),a.forEach((e=>{const t=e.textContent||"",s=t.replace(/[\s\u00A0]/g,"");if(!o||""===s){let o=!0,s=e.parentNode;for(;s;){if("w:tc"===s.nodeName){if(r('.//w:tcBorders/w:bottom[@w:val="single"]',s)[0])break;o=!1;break}s=s.parentNode}if(o){let o=null,s="r",i=e.parentNode;for(;i&&"w:r"!==i.nodeName;)i=i.parentNode;if(i)o=i,w.default.info("Found parent w:r node");else{let t=e.parentNode;for(;t&&"w:p"!==t.nodeName;)t=t.parentNode;t&&(o=t,s="p",w.default.info("No w:r node found, falling back to w:p node"))}if(o){const e=T(o),i=P(o,r);w.default.info("Processing text node - Node type: w:%s, XPath: %s, Label: %s",s,e,i),w.default.info("Original value from XML node: %s",t),n({xpath:e,type:"text",id:null,label:i,originalValue:t||null})}else w.default.warn("No suitable node (w:t or w:r) found for text node. Skipping this text node.")}else w.default.info("Skipping text node in table cell without bottom border")}}))}async function I(e,t=!0){w.default.info("Extracting sections from DOCX buffer");const{documentXml:r,stylesXml:o}=await E(e);return R(r,o,t)}async function E(e){if(w.default.info("Extracting XML parts from DOCX buffer"),!e||0===e.length)throw new Error("Invalid buffer: Buffer is empty");try{if(!_(e))throw new Error("Invalid buffer: Not a valid ZIP archive")}catch(e){throw w.default.error("Error validating ZIP buffer:",e),new Error("Failed to validate DOCX buffer: "+e.message)}return new Promise(((t,r)=>{try{w.default.info("Opening DOCX buffer for XML extraction");let o=setTimeout((()=>{r(new Error("Operation timed out while opening DOCX buffer"))}),5e3);g.fromBuffer(e,{lazyEntries:!0},((e,n)=>{if(clearTimeout(o),e||!n)return void r(new Error(`Failed to open DOCX buffer: ${e?.message}`));w.default.info("DOCX buffer opened successfully");let s=null,i=null;const a=new Set(["word/document.xml","word/styles.xml"]);n.on("entry",(e=>{w.default.info("Found entry: %s",e.fileName),a.has(e.fileName)?n.openReadStream(e,((o,c)=>{if(o||!c)return void r(new Error(`Failed to read ${e.fileName}: ${o?.message}`));const l=[];c.on("data",(e=>l.push(e))),c.on("end",(()=>{const r=Buffer.concat(l).toString("utf8");"word/document.xml"===e.fileName?s=r:"word/styles.xml"===e.fileName&&(i=r),a.delete(e.fileName),0===a.size?(n.close(),t({documentXml:s,stylesXml:i})):n.readEntry()})),c.on("error",(t=>{r(new Error(`Error reading ${e.fileName}: ${t.message}`))}))})):n.readEntry()})),n.on("end",(()=>{w.default.info("Finished reading DOCX entries"),a.size>0&&r(new Error("Invalid .docx file: Missing "+(a.has("word/document.xml")?"document.xml":"styles.xml")))})),n.on("error",(e=>{r(new Error(`Error processing DOCX buffer: ${e.message}`))})),w.default.info("Reading first entry in DOCX buffer"),n.readEntry()}))}catch(e){r(new Error(`Error processing DOCX buffer: ${e.message}`))}}))}async function R(e,t,r=!0){w.default.info("Parsing XML document: start of document: \n%s",e.slice(0,2e3));const o=(new h.DOMParser).parseFromString(e,"application/xml");if(!o||!o.documentElement)throw new Error("Failed to parse XML document");const n=o.documentElement,s={};for(let e=0;e<n.attributes.length;e++){const t=n.attributes[e];if(t.name.startsWith("xmlns:")){s[t.name.split(":")[1]]=t.value}else"xmlns"===t.name&&(s.default=t.value)}s.w||(s.w="http://schemas.openxmlformats.org/wordprocessingml/2006/main");const i=m.useNamespaces(s),a=[];w.default.info("Selecting document body node with namespaces: %j",s);const c=i("//w:body",o);if(!c||0===c.length)throw w.default.error("Could not find document body node. Available nodes: %s",Array.from(o.documentElement.childNodes).filter((e=>1===e.nodeType)).map((e=>e.nodeName)).join(", ")),new Error("Could not find document body node");const l=c[0];if(!l)throw new Error("Document body node is null");const u=Array.from(l.childNodes||[]);w.default.info("Found %d child nodes in document body",u.length);for(let e=0;e<u.length;e++){const o=u[e];if(1===o.nodeType)try{w.default.info("Processing section node: %s",o.nodeName);const e=T(o),s=(new h.XMLSerializer).serializeToString(o),c=[];$(o,c,i,r);const l=Array.from(n.attributes),u=`<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n  <w:document ${l.filter((e=>e.name.startsWith("xmlns:")||"xmlns"===e.name)).map((e=>`${e.name}="${e.value}"`)).join(" ")}>\n    <w:body>\n      ${s}\n    </w:body>\n  </w:document>`;w.default.info("Converting section to HTML: %s",e);const f=new y.ZipFile;w.default.info("Adding content types to zip");const p='<?xml version="1.0" encoding="UTF-8"?>\n<Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">\n  <Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml"/>\n  <Default Extension="xml" ContentType="application/xml"/>\n  <Override PartName="/word/document.xml" ContentType="application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml"/>\n  <Override PartName="/word/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml"/>\n</Types>';f.addBuffer(Buffer.from(p),"[Content_Types].xml"),w.default.info("Adding relationships to zip");const m='<?xml version="1.0" encoding="UTF-8"?>\n<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">\n  <Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="word/document.xml"/>\n</Relationships>';f.addBuffer(Buffer.from(m),"_rels/.rels"),w.default.info("Adding document.xml to zip"),f.addBuffer(Buffer.from(u),"word/document.xml"),w.default.info("Adding styles.xml to zip"),f.addBuffer(Buffer.from(t),"word/styles.xml"),w.default.info("Adding document.xml.rels to zip");const g='<?xml version="1.0" encoding="UTF-8"?>\n<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">\n  <Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/>\n</Relationships>';f.addBuffer(Buffer.from(g),"word/_rels/document.xml.rels"),w.default.info("Finalizing zip");const v=await new Promise(((e,t)=>{const r=[];f.outputStream.on("data",(e=>r.push(e))),f.outputStream.on("end",(()=>e(Buffer.concat(r)))),f.outputStream.on("error",t),f.end()}));w.default.info("Converting section to HTML");const _=await d.convertToHtml({buffer:v});w.default.info("Mammoth result: %s",_);const k={xpath:e,convertedHtml:_.value,potentialInputs:c};w.default.info("Unescaped RAW XML for the section: %s",s),w.default.info("Resulting section: %s",JSON.stringify(k,null,2)),a.push(k)}catch(t){w.default.error(t),w.default.error("Failed to convert XML to HTML for section with index %s: %s",e,t.message)}}return{sections:a}}async function C(e,t=!1){w.default.info("Extracting sections from DOCX file: %s",e);return I(c.readFileSync(e),t)}if(r.c[r.s]===e){const e=process.argv.slice(2);e.length<1&&(console.error("Usage: node docxExtractor.js <path-to-docx-file> [sections|xml]"),process.exit(1));const t=e[0],r=e[1]||"sections";let o=!0;switch(e.length>1&&"false"===e[1]&&(o=!1),r){case"sections":C(t,o).then((e=>{console.log(JSON.stringify(e,null,2))})).catch((e=>{console.error("Failed to extract DOCX sections:",e),process.exit(1)}));break;case"xml":S(t).then((e=>{console.log(e)})).catch((e=>{console.error("Failed to extract DOCX XML:",e),process.exit(1)}));break;default:console.error('Invalid command. Use "sections" or "xml"'),process.exit(1)}}},3239:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SummaryCompletion=void 0;const i=r(3563),a=r(1162),c=r(1544),l=r(1486),d=r(724),u=s(r(9055)),f=r(2003);let p=class{constructor(){this.chatModelManager=c.ChatModelManager.getInstance()}async getSummary(e,t,r=a.ModelCategory.SUMMARISATION,o=!1,n){if(!t)throw new Error("Input content is empty - some models require input content to produce a summary");const s=n?new f.AgentConfig(n):new f.AgentConfig,i=await this.chatModelManager.getModel(s,r,o),c=[new l.SystemMessage(e),new l.HumanMessage(t)],p=new d.StringOutputParser,h=Date.now(),m=await i.baseChatModel.invoke(c),g=await p.invoke(m),y=Date.now()-h;return u.default.info("Summary produced by %s in %sms: %s",i.modelDescriptor.getFullName(),y,g),g}async getSummaryJson(e,t,r=a.ModelCategory.SUMMARISATION,o=!1,n){u.default.debug(`Getting summary JSON for prompt: ${e}`);const s=function(e){const t=e.indexOf("{"),r=e.indexOf("[");let o,n,s;if(-1!==t&&(-1===r||t<r))o=t,n="{",s="}";else{if(-1===r)return null;o=r,n="[",s="]"}let i=o+1,a=1;for(;i<e.length&&a>0;){const t=e[i];t===n?a++:t===s&&a--,i++}return 0===a?e.substring(o,i):null}((await this.getSummary(e,t,r,o,n)).trim());if(!s)throw new Error("No valid JSON object or array found in response");try{return JSON.parse(s),s}catch(e){throw new Error(`Failed to parse JSON from extracted content: ${e.message}`)}}};t.SummaryCompletion=p,t.SummaryCompletion=p=o([(0,i.Injectable)(),n("design:paramtypes",[])],p)},3297:e=>{"use strict";e.exports=require("tree-sitter-rust")},3381:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.StoredDocService=void 0;const d=r(3563),u=r(3543),f=r(8648),p=a(r(1943)),h=a(r(857)),m=a(r(6928)),g=r(3903),y=l(r(9055));let v=class{constructor(e){this.storedDocRepository=e}async storeDoc(e,t,r,o){const n=new u.StoredDoc(e,t,r,o);return await this.storedDocRepository.save(n),y.default.info(`Stored new document with ID: ${n.id}, sessionId: ${r||"none"}, workspaceName: ${o||"none"}`),n}async getDoc(e){const t=await this.storedDocRepository.findById(e);return t?y.default.info(`Retrieved document with ID: ${e}`):y.default.info(`Document not found with ID: ${e}`),t}async getDocMetadata(e){return this.storedDocRepository.findByIdWithoutContents(e)}async getDocsBySession(e){const t=await this.storedDocRepository.findBySessionId(e);return y.default.info(`Retrieved ${t.length} documents for session: ${e}`),t}async getDocsByWorkspace(e){const t=await this.storedDocRepository.findByWorkspaceName(e);return y.default.info(`Retrieved ${t.length} documents for workspace: ${e}`),t}async withFile(e,t){const r=await this.getDoc(e);if(!r)throw new Error(`Document not found with id: ${e}`);const o=await p.mkdtemp(m.join(h.tmpdir(),"hldk-")),n=m.join(o,`${(0,g.v4)()}`);y.default.info(`Created temporary file for document ${e}: ${n}`);try{await p.writeFile(n,r.contents);return await t(n)}finally{try{await p.unlink(n),await p.rmdir(o)}catch(e){y.default.error("Error cleaning up temporary file:",e)}}}};t.StoredDocService=v,t.StoredDocService=v=i([(0,d.Injectable)(),c("design:paramtypes",[f.StoredDocRepository])],v)},3409:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ReplaceInFileTool=void 0;const u=r(3563),f=c(r(1943)),p=c(r(6928)),h=d(r(9055)),m=r(9581);let g=n=class{constructor(e){this.name="replace_in_file",this.description="Request to replace sections of content in an existing file using SEARCH/REPLACE blocks.",this.workingDir=e}getFailureHandlingSuggestion(e){return e>=3?`The 'replace_in_file' tool has failed ${e} times consecutively. Consider using the 'write_to_file' tool with the complete intended file content instead. Keep in mind that using write_to_file means you'll be re-writing the entire contents of the file, so ensure you include ALL parts of the file in your write_to_file operation, not just the sections you want to change.`:null}getUsageInstructions(e){return`## replace_in_file\nDescription: Request to replace sections of content in an existing file using SEARCH/REPLACE blocks that define exact changes to specific parts of the file. This tool should be used when you need to make targeted changes to specific parts of a file.\nParameters:\n- path: (required) The path of the file to modify (relative to the current working directory ${e.workingDir})\n- diff: (required) One or more SEARCH/REPLACE blocks following this exact format:\n  \`\`\`\n  <<<<<<< SEARCH\n  [exact content to find]\n  =======\n  [new content to replace with]\n  >>>>>>> REPLACE\n  \`\`\`\n  Critical rules:\n  1. SEARCH content must match the associated file section to find EXACTLY:\n     * Match character-for-character including whitespace, indentation, line endings\n     * Include all comments, docstrings, etc.\n  2. SEARCH/REPLACE blocks will ONLY replace the first match occurrence.\n     * Including multiple unique SEARCH/REPLACE blocks if you need to make multiple changes.\n     * Include *just* enough lines in each SEARCH section to uniquely match each set of lines that need to change.\n     * When using multiple SEARCH/REPLACE blocks, list them in the order they appear in the file.\n  3. Keep SEARCH/REPLACE blocks concise:\n     * Break large SEARCH/REPLACE blocks into a series of smaller blocks that each change a small portion of the file.\n     * Include just the changing lines, and a few surrounding lines if needed for uniqueness.\n     * Do not include long runs of unchanging lines in SEARCH/REPLACE blocks.\n     * Each line must be complete. Never truncate lines mid-way through as this can cause matching failures.\n  4. Special operations:\n     * To move code: Use two SEARCH/REPLACE blocks (one to delete from original + one to insert at new location)\n     * To delete code: Use empty REPLACE section\nUsage:\n<replace_in_file>\n<path>File path here</path>\n<diff>\nSearch and replace blocks here\n</diff>\n</replace_in_file>`}validateParams(e){return"string"==typeof e.path&&""!==e.path.trim()&&"string"==typeof e.diff&&""!==e.diff.trim()}async execute(e){const{path:t,diff:r}=e;h.default.info(`[${n.name}] Replacing content in file: ${t} relative to ${this.workingDir}`);const o=p.resolve(this.workingDir,t);if(!o.startsWith(this.workingDir)){const e=`Path traversal attempt detected: ${t} resolves outside of workspace ${this.workingDir}`;throw h.default.error(`[${n.name}] ${e}`),new m.FileSystemError(e,"PATH_TRAVERSAL_ERROR")}try{let e;try{e=await f.stat(o)}catch(e){if("ENOENT"===e.code){const e=`File not found: ${t}`;throw h.default.error(`[${n.name}] ${e}`),new m.FileNotFoundError(e,t)}throw e}if(!e.isFile()){const e=`Path is not a file: ${t}`;throw h.default.error(`[${n.name}] ${e}`),new m.FileNotFoundError(e,t)}const s=await f.readFile(o,"utf8"),i=this.applyDiff(s,r);return await f.writeFile(o,i,"utf8"),h.default.info(`[${n.name}] File ${t} modified successfully`),`File ${t} modified successfully`}catch(e){if(e instanceof m.FileNotFoundError||e instanceof m.FileSystemError)throw e;const r=`Error replacing content in file ${t}: ${e.message}`;throw h.default.error(`[${n.name}] ${r}\n${e.stack}`),new m.FileSystemError(r,e.code||"FS_REPLACE_ERROR")}}applyDiff(e,t){const r=this.parseDiff(t);let o=e;for(const e of r){const{search:t,replace:r}=e,s=o.indexOf(t);if(-1===s){const e=t.split("\n"),r=e[0],o=e[e.length-1],s=`Search block not found in the current file content. Block starts with: "${r.substring(0,50)}${r.length>50?"...":""}" and ends with: "${o.substring(0,50)}${o.length>50?"...":""}". Ensure the SEARCH block exactly matches the file content, including whitespace and line endings.`;throw h.default.error(`[${n.name}] ${s}`),new m.FileSystemError(s,"DIFF_APPLY_ERROR_NOT_FOUND")}o=o.substring(0,s)+r+o.substring(s+t.length)}return o}parseDiff(e){const t=[],r=/<<<<<<< SEARCH\n([\s\S]*?)\n=======\n([\s\S]*?)\n>>>>>>> REPLACE/g;let o,s=0;for(;null!==(o=r.exec(e));){if(o.index>s&&""!==e.substring(s,o.index).trim()){const t=`Invalid diff format: Unexpected content found between REPLACE and SEARCH blocks near "${e.substring(s,o.index).trim().substring(0,30)}..."`;throw h.default.error(`[${n.name}] ${t}`),new m.FileSystemError(t,"DIFF_PARSE_ERROR_EXTRA_TEXT")}const i=o[1],a=o[2];t.push({search:i,replace:a}),s=r.lastIndex}if(s<e.length&&""!==e.substring(s).trim()){const t=`Invalid diff format: Unexpected content found after the last REPLACE block near "${e.substring(s).trim().substring(0,30)}..."`;throw h.default.error(`[${n.name}] ${t}`),new m.FileSystemError(t,"DIFF_PARSE_ERROR_TRAILING_TEXT")}if(0===t.length){const e="Invalid or empty diff format. Expected one or more <<<<<<< SEARCH\\n...\\n=======\\n...\\n>>>>>>> REPLACE blocks.";throw h.default.error(`[${n.name}] ${e}`),new m.FileSystemError(e,"DIFF_PARSE_ERROR_NO_BLOCKS")}return t}};t.ReplaceInFileTool=g,t.ReplaceInFileTool=g=n=a([(0,u.Injectable)(),l("design:paramtypes",[String])],g)},3433:e=>{"use strict";e.exports=require("tree-sitter-python")},3470:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.AgentRuleService=void 0;const s=r(3563),i=r(5025),a=r(5862);let c=class{constructor(e){this.ruleRepository=e}async getRulesByAgentName(e){const t=await this.ruleRepository.findByAgentName(e);return t||new a.AgentRule(e,"",new Date,new Date)}async upsertRule(e,t){const r=new a.AgentRule(e,t,new Date,new Date);await this.ruleRepository.upsert(r)}};t.AgentRuleService=c,t.AgentRuleService=c=o([(0,s.Injectable)(),n("design:paramtypes",[i.AgentRuleRepository])],c)},3520:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AgentController=void 0;const a=r(3563),c=r(1412),l=r(3470),d=i(r(9055));let u=class{constructor(e,t){this.agentServices=e,this.agentRuleService=t}getAgentService(e){const t=this.agentServices.get(e);if(!t)throw new Error(`Unknown agent: ${e}`);return t}async processRequestWithStream(e,t,r){try{const o=c.AgentRequest.fromJSON(t);r.setHeader("Content-Type","text/event-stream"),r.setHeader("Cache-Control","no-cache"),r.setHeader("Connection","keep-alive"),r.setHeader("Location",`/sessions/${o.sessionId}/stream`);for await(const t of this.getAgentService(e).processRequestStream(o))r.write(`data: ${JSON.stringify(t)}\n\n`);r.end()}catch(e){d.default.error(`Error processing request: ${e.message}`,e.stack),r.setHeader("Content-Type","application/json"),r.status(a.HttpStatus.BAD_REQUEST).json({statusCode:a.HttpStatus.BAD_REQUEST,message:"Error processing request",error:e.message,stack:void 0})}}async processRequestNoStream(e,t,r){try{const o=c.AgentRequest.fromJSON(t),n=await this.getAgentService(e).processRequest(o);d.default.info("Returning result: %s",JSON.stringify(n)),r.setHeader("Content-Type","application/json"),r.json(n)}catch(e){d.default.error(`Error processing request: ${e.message}`,e.stack),r.status(a.HttpStatus.BAD_REQUEST).json({statusCode:a.HttpStatus.BAD_REQUEST,message:"Error processing request",error:e.message,stack:void 0})}}async processRequestAndGetContent(e,t,r){try{const o=c.AgentRequest.fromJSON(t);let n=(await this.getAgentService(e).processRequest(o)).responseContent.trim();d.default.info("Raw result: %s",n);const s=r.req.headers.accept;if(s&&s.includes("application/json"))try{const e=n.match(/\{[\s\S]*\}/);if(e){const t=JSON.parse(e[0]);return n=t,d.default.info("Extracted JSON content: %s",JSON.stringify(t)),r.setHeader("Content-Type","application/json"),void r.json(t)}}catch(e){d.default.warn("Failed to extract JSON from response content: %s",e.message)}r.setHeader("Content-Type","text/plain"),r.send(n)}catch(e){d.default.error(`Error processing request: ${e.message}`,e.stack),r.status(a.HttpStatus.BAD_REQUEST).json({statusCode:a.HttpStatus.BAD_REQUEST,message:"Error processing request",error:e.message,stack:void 0})}}async getRules(e){return this.agentRuleService.getRulesByAgentName(e)}async updateRules(e,t){return await this.agentRuleService.upsertRule(e,t.content),{success:!0}}};t.AgentController=u,o([(0,a.Post)(":name/stream"),(0,a.HttpCode)(a.HttpStatus.OK),s(0,(0,a.Param)("name")),s(1,(0,a.Body)()),s(2,(0,a.Res)()),n("design:type",Function),n("design:paramtypes",[String,String,Object]),n("design:returntype",Promise)],u.prototype,"processRequestWithStream",null),o([(0,a.Post)(":name"),(0,a.HttpCode)(a.HttpStatus.OK),s(0,(0,a.Param)("name")),s(1,(0,a.Body)()),s(2,(0,a.Res)()),n("design:type",Function),n("design:paramtypes",[String,String,Object]),n("design:returntype",Promise)],u.prototype,"processRequestNoStream",null),o([(0,a.Post)(":name/responseContent"),(0,a.HttpCode)(a.HttpStatus.OK),s(0,(0,a.Param)("name")),s(1,(0,a.Body)()),s(2,(0,a.Res)()),n("design:type",Function),n("design:paramtypes",[String,String,Object]),n("design:returntype",Promise)],u.prototype,"processRequestAndGetContent",null),o([(0,a.Get)(":name/rules"),s(0,(0,a.Param)("name")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],u.prototype,"getRules",null),o([(0,a.Put)(":name/rules"),s(0,(0,a.Param)("name")),s(1,(0,a.Body)()),n("design:type",Function),n("design:paramtypes",[String,Object]),n("design:returntype",Promise)],u.prototype,"updateRules",null),t.AgentController=u=o([(0,a.Controller)("agents"),s(0,(0,a.Inject)("AGENT_SERVICES")),n("design:paramtypes",[Map,l.AgentRuleService])],u)},3543:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.StoredDoc=void 0;const o=r(9100);t.StoredDoc=class{constructor(e,t,r,n,s=(0,o.ulid)(),i=new Date){if(this.id=s,this.contents=e,this.sessionId=r,this.workspaceName=n,this.createdAt=i,t)this.mimeType=t;else try{JSON.parse(e),this.mimeType="application/json"}catch{e.trim().startsWith("<")&&e.trim().endsWith(">")?this.mimeType="text/html":this.mimeType="text/plain"}}}},3548:e=>{"use strict";e.exports=require("@langchain/ollama")},3563:e=>{"use strict";e.exports=require("@nestjs/common")},3569:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigController=void 0;const a=r(3563),c=r(9102),l=r(8620),d=r(9668),u=i(r(9055));let f=class{constructor(e,t,r){this.eveConfigService=e,this.llmMetadataService=t,this.userService=r,this.serviceName="ConfigController"}async getAllProviders(){try{const e=await this.eveConfigService.getAllProviders();return u.default.info(`[${this.serviceName}] Successfully retrieved ${e.length} providers`),e}catch(e){throw u.default.error(`[${this.serviceName}] Failed to get providers: ${e.message}`,e.stack),new Error(`Failed to retrieve providers: ${e.message}`)}}async getModelsForProvider(e){try{const t=await this.eveConfigService.getModelsForProvider(e);return u.default.info(`[${this.serviceName}] Successfully retrieved ${t.length} models for provider ${e}`),t}catch(t){throw u.default.error(`[${this.serviceName}] Failed to get models for provider ${e}: ${t.message}`,t.stack),new Error(`Failed to retrieve models for provider ${e}: ${t.message}`)}}async getAllModes(){try{const e=await this.eveConfigService.getAllModes();return u.default.info(`[${this.serviceName}] Successfully retrieved ${e.length} agent modes`),e}catch(e){throw u.default.error(`[${this.serviceName}] Failed to get modes: ${e.message}`,e.stack),new Error(`Failed to retrieve agent modes: ${e.message}`)}}async getUserConfiguration(e){try{const e=await this.userService.getCurrentUser(),t=await this.eveConfigService.getUserConfiguration(e.userId);return u.default.info(`[${this.serviceName}] Successfully retrieved configuration for user ${e.userId}`),t}catch(e){if(e instanceof d.AuthenticationError)throw u.default.error(`[${this.serviceName}] Authentication error: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw u.default.error(`[${this.serviceName}] Failed to get user configuration: ${e.message}`,e.stack),new Error(`Failed to retrieve user configuration: ${e.message}`)}}async setActiveProviderForMode(e,t,r){try{const e=await this.userService.getCurrentUser();return await this.eveConfigService.setActiveProviderForMode(e.userId,t,r.activeProviderId),u.default.info(`[${this.serviceName}] Successfully set active provider ${r.activeProviderId} for mode ${t} and user ${e.userId}`),await this.eveConfigService.getUserConfiguration(e.userId)}catch(e){if(e instanceof d.AuthenticationError)throw u.default.error(`[${this.serviceName}] Authentication error: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw u.default.error(`[${this.serviceName}] Failed to set active provider for mode ${t}: ${e.message}`,e.stack),new Error(`Failed to set active provider for mode ${t}: ${e.message}`)}}async updateUserModeConfiguration(e,t,r,o){try{const e=await this.userService.getCurrentUser();if(await this.eveConfigService.updateUserModeConfiguration(e.userId,t,r,o),u.default.info(`[${this.serviceName}] Successfully updated configuration for user ${e.userId}, mode ${t}, and provider ${r}`),o.apiKey)try{await this.shareApiKeyAcrossModes(e.userId,r,o.apiKey,o.baseUrl),u.default.info(`[${this.serviceName}] Shared API key for provider ${r} across all modes`)}catch(e){u.default.error(`[${this.serviceName}] Error sharing API key: ${e.message}`,e.stack)}return await this.eveConfigService.getUserConfiguration(e.userId)}catch(e){if(e instanceof d.AuthenticationError)throw u.default.error(`[${this.serviceName}] Authentication error: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw u.default.error(`[${this.serviceName}] Failed to update user configuration for mode ${t} and provider ${r}: ${e.message}`,e.stack),new Error(`Failed to update configuration for mode ${t} and provider ${r}: ${e.message}`)}}async refreshModelsForProvider(e,t,r){try{const e=await this.userService.getCurrentUser();u.default.info(`[${this.serviceName}] Refreshing models for provider ${t}`);let o=r.apiKey;if(!o){u.default.info(`[${this.serviceName}] No API key provided in request, checking user configuration`);const r=await this.eveConfigService.findApiKeyForProvider(e.userId,t);r&&r.apiKey&&(o=r.apiKey,u.default.info(`[${this.serviceName}] Using API key from user configuration`))}await this.llmMetadataService.refreshModelsForProvider(t,o,r.baseUrl),u.default.info(`[${this.serviceName}] Successfully refreshed models for provider ${t}`);const n=await this.eveConfigService.getModelsForProvider(t);return u.default.info(`[${this.serviceName}] Returning ${n.length} models for provider ${t}`),n}catch(e){if(e instanceof d.AuthenticationError)throw u.default.error(`[${this.serviceName}] Authentication error: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw u.default.error(`[${this.serviceName}] Failed to refresh models for provider ${t}: ${e.message}`,e.stack),new Error(`Failed to refresh models for provider ${t}: ${e.message}`)}}async shareApiKeyAcrossModes(e,t,r,o){try{u.default.info(`[${this.serviceName}] Sharing API key for provider ${t} across all modes for user ${e}`);const n=await this.eveConfigService.getAllModes(),s=await this.eveConfigService.getUserConfiguration(e);for(const i of n){const n=s[i.modeId],a=n?.providerSettings[t];a?.isApiKeySet?u.default.info(`[${this.serviceName}] Skipped updating API key for user ${e}, mode ${i.modeId}, provider ${t} (already set)`):(await this.eveConfigService.updateUserModeConfiguration(e,i.modeId,t,{apiKey:r,baseUrl:o}),u.default.info(`[${this.serviceName}] Set API key for user ${e}, mode ${i.modeId}, provider ${t}`))}u.default.info(`[${this.serviceName}] Successfully shared API key for provider ${t} across modes that didn't have one set`)}catch(e){throw u.default.error(`[${this.serviceName}] Error sharing API key: ${e.message}`,e.stack),e}}};t.ConfigController=f,o([(0,a.Get)("providers"),n("design:type",Function),n("design:paramtypes",[]),n("design:returntype",Promise)],f.prototype,"getAllProviders",null),o([(0,a.Get)("providers/:providerId/models"),s(0,(0,a.Param)("providerId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],f.prototype,"getModelsForProvider",null),o([(0,a.Get)("modes"),n("design:type",Function),n("design:paramtypes",[]),n("design:returntype",Promise)],f.prototype,"getAllModes",null),o([(0,a.Get)("user"),s(0,(0,a.Req)()),n("design:type",Function),n("design:paramtypes",[Object]),n("design:returntype",Promise)],f.prototype,"getUserConfiguration",null),o([(0,a.Put)("user/modes/:modeId"),s(0,(0,a.Req)()),s(1,(0,a.Param)("modeId")),s(2,(0,a.Body)()),n("design:type",Function),n("design:paramtypes",[Object,String,Object]),n("design:returntype",Promise)],f.prototype,"setActiveProviderForMode",null),o([(0,a.Put)("user/modes/:modeId/providers/:providerId"),s(0,(0,a.Req)()),s(1,(0,a.Param)("modeId")),s(2,(0,a.Param)("providerId")),s(3,(0,a.Body)()),n("design:type",Function),n("design:paramtypes",[Object,String,String,Object]),n("design:returntype",Promise)],f.prototype,"updateUserModeConfiguration",null),o([(0,a.Post)("providers/:providerId/refresh-models"),s(0,(0,a.Req)()),s(1,(0,a.Param)("providerId")),s(2,(0,a.Body)()),n("design:type",Function),n("design:paramtypes",[Object,String,Object]),n("design:returntype",Promise)],f.prototype,"refreshModelsForProvider",null),t.ConfigController=f=o([(0,a.Controller)("eve/config"),n("design:paramtypes",[c.EveConfigService,l.LlmMetadataService,d.UserService])],f)},3690:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.SimpleAgentModule=void 0;const n=r(3563),s=r(5873),i=r(3880),a=r(4193),c=r(9161);let l=class{};t.SimpleAgentModule=l,t.SimpleAgentModule=l=o([(0,n.Module)({imports:[s.WorkspaceModule,i.SessionModule,a.HomeModule,c.ChatCompletionModule],exports:[]})],l)},3713:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigDescriptors=t.ConfigSection=t.ConfigPropertyDescriptor=void 0;const o=r(6910),n=r(1544),s=r(1986),i=r(4264),a=r(59),c=r(4659);class l{constructor(e,t,r,o,n,s,i){this.label=e,this.name=t,this.type=r,this.description=o,this.sensitive=n,this.defaultValue=s,this.possibleValues=i}}t.ConfigPropertyDescriptor=l;class d{constructor(e,t){this.title=e,this.properties=t}}t.ConfigSection=d;class u{constructor(e){this.sections=e}static getDefaultDescriptors(){const e=async()=>n.ChatModelManager.getInstance().getValidModelFullNames();return new u([new d("API Keys",[new l("Eve API Key",o.ConfigPropNames.EVE_API_KEY,"string","Eve API Key",!0),new l("Google API Key",o.ConfigPropNames.GOOGLE_API_KEY,"string","Google API Key for Gemini models",!0),new l("Anthropic API Key",o.ConfigPropNames.ANTHROPIC_API_KEY,"string","Anthropic API Key",!0),new l("OpenAI API Key",o.ConfigPropNames.OPENAI_API_KEY,"string","OpenAI API Key",!0),new l("Groq API Key",o.ConfigPropNames.GROQ_API_KEY,"string","Groq API Key",!0),new l("Hyperbolic API Key",o.ConfigPropNames.HYPERBOLIC_API_KEY,"string","Hyperbolic API Key",!0),new l("Mistral API Key",o.ConfigPropNames.MISTRAL_API_KEY,"string","Mistral API Key",!0),new l("OpenRouter API Key",o.ConfigPropNames.OPENROUTER_API_KEY,"string","OpenRouter API Key",!0),new l("GLHF Chat API Key",o.ConfigPropNames.GLHF_API_KEY,"string","GLHF Chat API Key",!0),new l("DeepSeek API Key",o.ConfigPropNames.DEEPSEEK_API_KEY,"string","DeepSeek API Key",!0),new l("SerpAPI Key",o.ConfigPropNames.SERP_API_KEY,"string","SerpAPI Key for web search functionality",!0)]),new d("Default Models",[new l("Coding Model",o.ConfigPropNames.DEFAULT_CODING_MODEL,"enum","Coding Model",!1,"anthropic/"+s.AnthropicProvider.SONNET_MODEL_NAME,e),new l("Reasoning Model",o.ConfigPropNames.DEFAULT_REASONING_MODEL,"enum","Reasoning Model",!1,"openai/"+i.OpenAIProvider.GPT_4O_MODEL_NAME,e),new l("Summarisation Model",o.ConfigPropNames.DEFAULT_SUMMARISATION_MODEL,"enum","Summarisation Model",!1,c.GroqProvider.LLAMA_31_8BB_INSTANT,e),new l("RAG Query Model",o.ConfigPropNames.DEFAULT_RAG_QUERY_MODEL,"enum","RAG Query Model",!1,"openai/"+i.OpenAIProvider.GPT_4O_MODEL_NAME,e),new l("Orchestration Model",o.ConfigPropNames.DEFAULT_ORCHESTRATION_MODEL,"enum","Orchestration Model",!1,"openai/"+i.OpenAIProvider.GPT_4O_MODEL_NAME,e),new l("Architect Model",o.ConfigPropNames.DEFAULT_ARCHITECT_MODEL,"enum","Architect Model",!1,"anthropic/"+s.AnthropicProvider.SONNET_MODEL_NAME,e)]),new d("Private Models",[new l("Coding Model",o.ConfigPropNames.PRIVATE_CODING_MODEL,"enum","Private Coding Model",!1,a.GlhfProvider.META_LLAMA_3_3_70B_INSTRUCT,e),new l("Reasoning Model",o.ConfigPropNames.PRIVATE_REASONING_MODEL,"enum","Private Reasoning Model",!1,a.GlhfProvider.META_LLAMA_3_3_70B_INSTRUCT,e),new l("Summarisation Model",o.ConfigPropNames.PRIVATE_SUMMARISATION_MODEL,"enum","Private Summarisation Model",!1,c.GroqProvider.LLAMA_31_8BB_INSTANT,e),new l("RAG Query Model",o.ConfigPropNames.PRIVATE_RAG_QUERY_MODEL,"enum","Private RAG Query Model",!1,a.GlhfProvider.META_LLAMA_3_3_70B_INSTRUCT,e),new l("Orchestration Model",o.ConfigPropNames.PRIVATE_ORCHESTRATION_MODEL,"enum","Private Orchestration Model",!1,a.GlhfProvider.META_LLAMA_3_3_70B_INSTRUCT,e),new l("Architect Model",o.ConfigPropNames.PRIVATE_ARCHITECT_MODEL,"enum","Private Architect Model",!1,a.GlhfProvider.META_LLAMA_3_3_70B_INSTRUCT,e)]),new d("Ollama",[new l("Ollama Base URL",o.ConfigPropNames.OLLAMA_BASE_URL,"string","Ollama Base URL - default: http://localhost:11434",!1)]),new d("MCP Servers",[new l("MCP Servers Enabled",o.ConfigPropNames.MCP_SERVERS_ENABLED,"boolean","Enable or disable MCP servers",!1,!0),new l("MCP Servers Directory",o.ConfigPropNames.MCP_SERVERS_DIRECTORY,"string","Directory containing MCP servers",!1,"~/.eve/mcp-servers")]),new d("Misc",[new l("Agent Recursion Limit",o.ConfigPropNames.AGENT_RECURSION_LIMIT,"number","How many times a graph based agent can call itself recursively before halting",!1,50),new l("Agent Iteration Limit",o.ConfigPropNames.AGENT_ITERATION_LIMIT,"number","How many times a simple agent can iterate before halting",!1,50),new l("Agent System Prompt",o.ConfigPropNames.AGENT_SYSTEM_PROMPT,"number","Maximum length of the system prompt for agents",!1,1e5),new l("Dashboard £ per LOC",o.ConfigPropNames.VALUE_PER_LINE,"number","Approximate value created per line of code generated in £",!1,2.4)])])}}t.ConfigDescriptors=u},3716:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GitInit=void 0;const c=r(5534),l=r(1569),d=a(r(9055)),u=i(r(6928)),f=i(r(9896)),p=a(r(3807));class h extends c.Tool{constructor(e){super(),this.name="git_init",this.description="Initialize a git repository in the specified directory if it's not already a git repository",this.schema=l.z.object({folder:l.z.string().describe("The folder relative to the workspace root to initialize as a git repository")}),this.workspaceRootDir=e,this.maxOutputChars=parseInt(process.env.MAX_TOOL_OUTPUT_CHARS||"2000",10)}clipOutput(e){return e.length>this.maxOutputChars?`Large output detected so clipped to last ${this.maxOutputChars} chars...\n${e.slice(-this.maxOutputChars)}`:e}async _call({folder:e}){try{d.default.info(`Initializing git repository in ${e} under workspace ${this.workspaceRootDir}`);const t=u.join(this.workspaceRootDir,e);if(!f.existsSync(t))return`Error: The directory ${t} does not exist.`;const r=u.join(t,".git");if(f.existsSync(r))return`The directory ${t} is already a git repository.`;const o=(0,p.default)(t);return await o.init(),`Successfully initialized git repository in ${t}`}catch(e){d.default.warn(`Error initializing git repository: ${e.message}`,e);return`Error initializing git repository:\nError:\n${this.clipOutput(e.message)}`}}}t.GitInit=h},3765:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CommandLine=void 0;const n=r(5534),s=r(1569),i=r(5317),a=r(9023),c=o(r(9055)),l=o(r(6928)),d=r(1162),u=(0,a.promisify)(i.exec);class f extends n.Tool{constructor(e,t){super(),this.name="command_line",this.description="Execute a command line instruction in the workspace directory or a subdirectory",this.schema=s.z.object({command:s.z.string().describe("The command to execute"),subDir:s.z.string().optional().describe("Optional subdirectory relative to the workspace root to execute the command in")}),this.privateRequired=!1,this.summaryPrompt="\n  You are a helpful assistant that summarises text. Your job is present the minumum useful information in the shortest way possible.\n  Summarise the following text pulling out just the interesting things. For example:\n  \n  a) If it looks like test output:\n     - If all tests passed, just say that and mention how many tests passed if possible.\n     - IF THERE ARE ANY FAILURES THEN YOU MUST ALL INFORMATION ABOUT ALL OF THE ERRORS INCLUDING ALL OF THE STACK TRACES OR ERROR INFORMATION AND INCLUDE ALL FILES/LINE NUMBERS ETC.\n     - ALSO INCLUDE ALL THE DEBUG/CONSOLE OUTPUT THAT IS RELATED TO THE TESTS THAT FAILED. IT IS BETTER TO INCLUDE TOO MUCH INFORMATION THAN TOO LITTLE.\n\n  b) If it's something else, then just pull out the most important information.",this.workspaceRootDir=e,this.maxOutputChars=parseInt(process.env.MAX_TOOL_OUTPUT_CHARS||"20000"),this.summaryCompletion=t}setPrivateRequired(e){this.privateRequired=e}async summariseOutput(e,t){const r="Stdout:\n"+e+"\nStderr:\n"+t;if(r.length>this.maxOutputChars){if(this.summaryCompletion){c.default.debug(`Summarising large command output - ${r.length} chars - content:\n ${r}`);const e=await this.summaryCompletion.getSummary(this.summaryPrompt,r,d.ModelCategory.SUMMARISATION,this.privateRequired);return c.default.info(`Summarised large command output - reduced ${r.length} chars to ${e.length}`),e}{const o=this.clipString(e),n=this.clipString(t);return`Summarised large command output - reduced ${r.length} chars to ${o.length+n.length}:\n${o}\n${n}`}}return r}clipString(e){return e.length>this.maxOutputChars?e.slice(-this.maxOutputChars):e}async _call({command:e,subDir:t}){try{const r=t&&"."!==t?l.default.join(this.workspaceRootDir,t):this.workspaceRootDir;c.default.info(`Executing command: ${e} in directory: ${r}`);const{stdout:o,stderr:n}=await u(e,{cwd:r});return`Successfully executed command:\n${e}\nWorking Directory: ${r}\nOutput was:\n${await this.summariseOutput(o,n)}`}catch(t){c.default.warn(`Error executing command: ${e}`,t),c.default.warn(`Error stdout: ${t.stdout}`),c.default.warn(`Error stderr: ${t.stderr}`);const r=t.stdout||"",o=t.stderr||"";return`Error encountered when executing command:\n${e}\nOutput was:\n${await this.summariseOutput(r,o)}\nError was:\n${this.clipString(t.message)}`}}}t.CommandLine=f},3807:e=>{"use strict";e.exports=require("simple-git")},3864:e=>{"use strict";e.exports=require("command-exists")},3877:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getBasePrompt=function(){return"You are Eve, a highly skilled software engineer with extensive knowledge \nin many programming languages, frameworks, design patterns, and best practices.\n\nAs a software engineer, you excel at:\n- Analyzing and understanding complex codebases\n- Designing elegant and maintainable software architectures \n- Implementing efficient and robust solutions\n- Debugging and troubleshooting technical issues\n- Following best practices and coding standards\n- Considering performance, security, and scalability in your solutions\n\nYou provide technical, concise responses focused on delivering high-quality code and \npractical solutions. You prioritize clarity, maintainability, and following established \nconventions in the codebase you're working with."}},3880:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.SessionModule=void 0;const n=r(3563),s=r(376),i=r(5480),a=r(4143),c=r(7373),l=r(3936),d=r(9095),u=r(811),f=r(3177);let p=class{};t.SessionModule=p,t.SessionModule=p=o([(0,n.Module)({imports:[s.DataSourceModule,f.MutationsModule],controllers:[i.SessionController,a.RequestController],providers:[c.SessionService,l.SessionRepository,d.ItemRepository,u.RequestRepository],exports:[c.SessionService]})],p)},3887:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.OpsAgentService=void 0;const d=r(3563),u=a(r(9896)),f=r(3470),p=a(r(6928)),h=r(5277),m=r(6158),g=r(2300);let y=class extends h.GraphAgentService{constructor(e,t,r){super(e,t,r),this.agentCollaborator=e,this.toolFactoryService=t,this.ruleService=r}getName(){return"ops-agent"}async getTools(e){return await this.toolFactoryService.createTools(["read_file","update_file","delete_file","command_line","add_workspace","fetch_web_page","git_init","serp_api"],e)}async getSystemPrompt(e){let t="";const r=p.join(e.workspace.repoBaseDir,"ops-hints.md");u.existsSync(r)&&(t=u.readFileSync(r,"utf-8"));const o=process.platform,n="win32"===o?"Windows":"darwin"===o?"macOS":"Linux";return`\n    You are a helpful DevOps agent specializing in system operations, automation, and infrastructure management. Your task is to assist with various DevOps-related tasks and solve problems using the tools provided.\n\n    WORKSPACE INFORMATION:\n    Current working directory: ${e.workspace.repoBaseDir}\n    Current operating system: ${n}\n\n    AVAILABLE TOOLS AND THEIR USAGE:\n\n    1. File Operations:\n       - read_file: Read the contents of any file in the workspace\n       - update_file: Modify file contents (requires filePath, search text, and replacement text)\n       - delete_file: Remove a file (use with caution, confirm before deleting important files)\n\n    2. System Operations:\n       - command_line: Execute shell commands\n         * Can specify a subdirectory to run commands in\n         * Use for package management, build tools, and system commands\n         * ALWAYS include automatic confirmation flags to prevent hanging:\n           - Use --yes or -y for apt, apt-get\n           - Use -y for yum\n           - Use --no-input for pip\n           - Use -f or --force for npm/pnpm\n           - Use --defaults for yeoman\n           - Use --non-interactive for composer\n           - Use --assume-yes for other tools\n           - Add appropriate silent/quiet flags when available\n         * DO NOT use for process termination or destructive operations\n       \n    3. Git and Repository Management:\n       - git_init: Initialize a new Git repository\n       - Always use 'git add -A' for staging changes\n\n    5. Additional Tools:\n       - add_workspace: Add a new workspace (specify target project's base directory)\n       - fetch_web_page: Fetch web page content (only when explicitly requested)\n\n    OPERATIONAL GUIDELINES:\n\n    1. Safety and Security:\n       - Never perform destructive operations that cannot be undone\n       - Do not terminate processes unless explicitly instructed\n       - Stop and report if multiple solution attempts fail\n       - Never access or modify files outside the workspace directory\n\n    2. Workspace Management:\n       - You can create directories and files within the workspace\n       - You can read and modify any files under the repo root\n       - Never traverse up beyond the workspace root directory\n\n    3. Best Practices:\n       - Always verify file existence before operations\n       - Use appropriate error handling\n       - Document significant changes\n       - Ask for clarification when instructions are unclear or risky\n\n    4. New Project Creation:\n       - When asked to create a new project with specific technologies:\n         * First, search for suitable template projects:\n           - Use fetch_web_page with GitHub search URL in format:\n             https://github.com/search?q=tech1%20tech2%20app%20starter&type=repositories\n             (replacing tech1, tech2, etc. with the requested technologies)\n           - Analyze results and identify best candidates based on:\n             * Star count (higher is better)\n             * Last update date (2020 or newer preferred)\n             * Match to requested tech stack\n           - Present top candidates to user and ask if they want to use one as template\n           - If user selects a template, use add_workspace tool with the chosen repo URL\n         \n         * If no good templates found or user prefers fresh setup:\n           - Offer to bootstrap project using official tooling\n           - Create appropriate subdirectory in workspace\n           - Use command_line tool with proper package manager/CLI tools\n           - Use sensible defaults where possible\n           - Ask user for input only when necessary for key decisions\n           - After setup complete:\n             * Add a README.md file to the new project directory with instructions for the user\n             * Use the add_workspace tool with full path to the new project directory\n             * Read and relay setup/startup instructions\n             * Suggest next steps for development\n\n       - When asked to create a new project without specific tech stack:\n         * Use the add_workspace tool with gitRepoUrl: https://github.com/HigherLevelDev/fullstack-starter\n         * Create the new workspace as a subfolder of the current workspace unless an absolute path is specified\n         * Follow any specific requirements provided by the user\n         * After creating the workspace:\n           - Read and relay the README.md file contents to provide setup/startup instructions\n           - Suggest using the architect-agent or se-agent to implement requested features in the new workspace\n           - Provide clear next steps for the user to get started with their project\n\n    Additional Workspace-Specific Hints:\n    ${e.repositoryHints()?`${e.repositoryHints()}`:""}\n\n    IMPORTANT REMINDERS:\n    1. After creating a new project, add a README.md and call the add_workspace tool with the full path to add and let the user know it should appear in the list of workspaces\n    2. Always use 'git add -A' rather than adding individual files\n    3. Confirm destructive operations with the user before proceeding\n    4. Stay within the workspace boundaries\n    5. Use tools according to their documented purposes and limitations\n    6. ALWAYS include automatic confirmation flags (--yes, -y, --force, etc.) when running interactive commands\n    7. Add appropriate silent/quiet flags to prevent unnecessary output when available`}};t.OpsAgentService=y,t.OpsAgentService=y=i([(0,d.Injectable)(),l(0,(0,d.Inject)((0,d.forwardRef)((()=>g.GraphAgentCollaborator)))),c("design:paramtypes",[g.GraphAgentCollaborator,m.ToolFactoryService,f.AgentRuleService])],y)},3903:e=>{"use strict";e.exports=require("uuid")},3911:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.SoftwareEngineerPersona=void 0;const n=r(3563),s=r(3877),i=r(2775),a=r(5299),c=r(260),l=r(7016);let d=class{getId(){return"software-engineer"}getName(){return"Software Engineer"}async getSystemPrompt(e){return`${(0,s.getBasePrompt)()}\n\n====\n\n${(0,i.getToolUseGuidelines)(e)}\n\n====\n\n${(0,a.getPlanVsActPrompt)(e)}\n\n====\n\n${(0,c.getRulesPrompt)(e)}\n\n====\n\n${(0,l.getObjectivePrompt)(e)}`}getToolNames(){return["read_file","write_to_file","replace_in_file","list_files","search_files","execute_command","list_code_definition_names","use_mcp_tool","access_mcp_resource","ask_followup_question","plan_mode_respond","attempt_completion"]}requiresFileList(){return!0}};t.SoftwareEngineerPersona=d,t.SoftwareEngineerPersona=d=o([(0,n.Injectable)()],d)},3923:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UpdateFile=void 0;const c=r(5534),l=r(1569),d=i(r(9896)),u=i(r(6928)),f=a(r(9055)),p=r(2303);class h extends c.Tool{constructor(e,t,r,o){super(),this.name="update_file",this.description="Update the content of a file in the workspace by providing the path of the file to update, the text block to search for in the file content, and the text block to replace the search block with. All 3 arguments are required: filePath, search (use a blank/empty string when creating new files), and replace.",this.schema=l.z.object({filePath:l.z.string().describe("The relative path of the file to update"),search:l.z.string().describe("The unique text block to search for in the file content. For new files, use a blank/empty string. For existing files, make sure to include a big enough search block to ensure you're only updating the intended text."),replace:l.z.string().describe("The text block to replace the search block with - DO NOT FORGET TO INCLUDE THIS!!!")}),this.workspaceRootDir=e,this.mutationsService=t,this.sessionId=r,this.requestId=o}async _call(e){return this.updateFile(e.filePath,e.search,e.replace)}ensureDirectoryExists(e){try{return d.existsSync(e)||(f.default.info(`Creating directory: ${e}`),d.mkdirSync(e,{recursive:!0})),!0}catch(t){return f.default.error(`Failed to create directory ${e}:`,t),!1}}async updateFile(e,t,r){f.default.info("UpdateFile.updateFile called with: %s\n>>>>> SEARCH\n%s\n-------\n%s<<<<< REPLACE\n",e,t,r);const o=u.join(this.workspaceRootDir,e);try{let n,s,i=!1;if(d.existsSync(o)||t&&""!==t)if(n=d.readFileSync(o,"utf-8"),""!==n.trim()||t&&""!==t.trim()){const i=n.includes("\r\n")?"\r\n":"\n",a=t.replace(/\r\n|\n/g,i),c=r.replace(/\r\n|\n/g,i);if(n.split(a).length-1>1)return f.default.warn("Multiple exact matches found for search block: --\x3e%s<-- and file content was:\n--\x3e%s<--",t,n),`ERROR: the search block was found multiple times in the file. Please expand the search block to make it unique and construct the corresponding replace block and try again.\nFile path was: ${e}\nSearch block was:\n${t}\n`;let l=n.indexOf(a),u=a.length,p=a;if(-1===l){f.default.info("Exact match not found, attempting indentation-agnostic search.");const r=a.split(i).map((e=>e.trim())).filter((e=>e.length>0)).map((e=>e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"))).join("\\s*"),o=new RegExp(r.replace(/\s+/g,"\\s+"),"g"),d=n.match(o);if(d&&d.length>1)return f.default.warn("Multiple indentation-agnostic matches found for search block"),f.default.warn("Search block was:\n%s",t),f.default.warn("Full file content was:\n%s",n),`ERROR: the search block was found multiple times in the file. \nPlease expand the search block to make it unique and construct the corresponding replace block and try again.\nFile path was: ${e}\nSearch block was:\n${t}\n`;o.lastIndex=0;const h=o.exec(n);if(!h)return f.default.warn("UpdateFile.updateFile failed to find the search block in the file content."),f.default.warn("Search block was:\n%s",t),f.default.warn("Full file content was:\n%s",n),`ERROR: failed to find search block in file content.\nPlease try again with a different search block.\nFile path was: ${e}\nSearch block was:\n${t}\n`;l=h.index,u=h[0].length,p=h[0];const m=p.split(i),g=m[0].match(/^\s*/)[0],y=m.filter((e=>e.trim().length>0)).map((e=>e.match(/^\s*/)[0].length-g.length)),v=c.split(i),_=v.map(((e,t)=>{if(!e.trim())return"";const r=y[Math.min(t,y.length-1)]||0;return g+" ".repeat(Math.max(0,r))+e.trim()})).join(i);s=n.slice(0,l)+_+n.slice(l+u)}else s=n.slice(0,l)+c+n.slice(l+u);f.default.info(`Updating file: ${e}`),f.default.debug("Updated file - Content after:\n%s",s),d.writeFileSync(o,s,"utf-8")}else{const e=r.replace(/\r\n/g,"\n");d.writeFileSync(o,e,"utf-8"),s=e}else{const e=u.dirname(o);if(!this.ensureDirectoryExists(e))return`ERROR: Failed to create directory: ${e}`;const t=r.replace(/\r\n/g,"\n");d.writeFileSync(o,t,"utf-8"),n="",s=t,i=!0}const a=i?`Successfully created new file: ${e}`:`Successfully updated file: ${e}`;try{await this.mutationsService.createMutation({type:i?p.MutationType.CREATE:p.MutationType.UPDATE,filePath:e,description:a,fileContentsBefore:n,fileContentsAfter:s,updatedAt:new Date,sessionId:this.sessionId,requestId:this.requestId})}catch(t){throw f.default.error("UpdateFile.updateFile encountered an error while recording the mutation:",{error:t.message,stack:t.stack,context:{filePath:e,isNewFile:i,sessionId:this.sessionId,requestId:this.requestId}}),new Error(`Failed to record file mutation: ${t.message}`)}return f.default.info("UpdateFile.updateFile completed successfully"),`Successfully updated file: ${e} with search block:\n${t}\n`}catch(e){return f.default.error("UpdateFile.updateFile encountered an error:",e),`Error: ${e.message}`}}}t.UpdateFile=h},3936:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.SessionRepository=void 0;const i=r(3563);r(1832);let a=class{constructor(e){this.knex=e}async findAll(e,t,r){let o=this.knex("sessions").select("*"),n=this.knex("sessions").count("* as count");r&&(o=o.where(r),n=n.where(r)),t&&(o=o.orderBy(t.field,t.order.toLowerCase()));const s=await n.first(),i=s?.count;if(e){const{page:t,limit:r}=e,n=(t-1)*r;o=o.offset(n).limit(r)}return{sessions:await o,total:i}}async findById(e){return this.knex("sessions").where("sessionId",e).first()}async create(e){await this.knex("sessions").insert(e)}async update(e,t){await this.knex("sessions").where("sessionId",e).update(t)}async delete(e){await this.knex("sessions").where("sessionId",e).delete()}async count(e){const t=this.knex("sessions").count("* as count");e&&t.where(e);const r=await t.first();return r?.count}async createItem(e){await this.knex("item").insert(e)}async findItemsBySessionId(e){return this.knex("item").where("sessionId",e).orderBy("createdAt","asc")}async updateItem(e,t){await this.knex("item").where("itemId",e).update(t)}};t.SessionRepository=a,t.SessionRepository=a=o([(0,i.Injectable)(),s(0,(0,i.Inject)("KNEX")),n("design:paramtypes",[Function])],a)},3971:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.OpenRouterProvider=void 0;const n=r(6228),s=r(8483),i=r(8959),a=r(2368),c=o(r(8938));class l extends s.BaseProvider{constructor(){super()}getName(){return"openrouter"}getBaseChatModel(e,t){const r=process.env.OPENROUTER_BASE_URL||"https://openrouter.ai";let o=8e3;if(l.modelCache.models.length>0){const t=l.modelCache.models.find((t=>t.id===this.shortModelName(e)));t?.per_request_limits?.prompt_tokens&&(o=t.per_request_limits.prompt_tokens)}return new n.ChatOpenAI({modelName:this.shortModelName(e),temperature:t.temperature,maxTokens:o,openAIApiKey:a.ConfigService.getInstance().getProperty("OPENROUTER_API_KEY")},{basePath:`${r}/api/v1`,baseOptions:{headers:{"X-Title":"Eve"}}})}async getModelDescriptors(){return 0===l.modelCache.models.length&&await this.fetchModels(),l.modelCache.models.map((e=>{const t=parseFloat(e.pricing.prompt)||0,r=parseFloat(e.pricing.completion)||0;return new i.ModelDescriptor("openrouter",e.id,t,0,0,r)}))}isValid(){return!!a.ConfigService.getInstance().getProperty("OPENROUTER_API_KEY")}async fetchModels(){if(!this.isValid())return[];const e=Date.now();if(l.modelCache.models.length>0&&e-l.modelCache.timestamp<3e5)return l.modelCache.models;const t=a.ConfigService.getInstance().getProperty("OPENROUTER_API_KEY"),r=process.env.OPENROUTER_BASE_URL||"https://openrouter.ai";if(!t)return console.log("OpenRouter API key not found"),[];try{const o=await c.default.get(`${r}/api/v1/models`,{headers:{Authorization:`Bearer ${t}`,"X-Title":"Eve"}});if(200===o.status){const t=o.data.data||[];return l.modelCache={models:t,timestamp:e},t}return console.log(`Failed to fetch OpenRouter models. Status code: ${o.status}`),[]}catch(e){return console.error(`Error fetching OpenRouter models: ${e}`),[]}}}t.OpenRouterProvider=l,l.modelCache={models:[],timestamp:0}},4143:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.RequestController=void 0;const i=r(3563),a=r(7373);let c=class{constructor(e){this.sessionService=e}async getRequest(e){return this.sessionService.getRequest(e)}};t.RequestController=c,o([(0,i.Get)(":requestId"),s(0,(0,i.Param)("requestId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"getRequest",null),t.RequestController=c=o([(0,i.Controller)("requests"),n("design:paramtypes",[a.SessionService])],c)},4155:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.ResponseFormatterService=void 0;const c=r(3563),l=a(r(6928));let d=class{duplicateFileReadNotice(){return"[[NOTE] This file read has been removed to save space in the context window. Refer to the latest file read for the most up to date version of this file.]"}contextTruncationNotice(){return"[NOTE] Some previous conversation history with the user has been removed to maintain optimal context window length. The initial user task and the most recent exchanges have been retained for continuity, while intermediate conversation history has been removed. Please keep this in mind as you continue assisting the user."}toolDenied(){return"The user denied this operation."}toolError(e){return`The tool execution failed with the following error:\n<error>\n${e}\n</error>`}formatFilesList(e,t,r,o){const n=t.map((t=>{const r=l.relative(e,t).replace(/\\/g,"/");return t.endsWith("/")||t.endsWith("\\")?r+"/":r})).sort(((e,t)=>{const r=e.split("/"),o=t.split("/");for(let e=0;e<Math.min(r.length,o.length);e++)if(r[e]!==o[e])return e+1===r.length&&e+1<o.length?-1:e+1===o.length&&e+1<r.length?1:r[e].localeCompare(o[e],void 0,{numeric:!0,sensitivity:"base"});return r.length-o.length})),s=o?n.map((t=>{const r=l.resolve(e,t);return o.has(r)?`🔒 ${t}`:t})):n;return r?`${s.join("\n")}\n\n(File list truncated. Use list_files on specific subdirectories if you need to explore further.)`:0===s.length||1===s.length&&""===s[0]?"No files found.":s.join("\n")}};t.ResponseFormatterService=d,t.ResponseFormatterService=d=i([(0,c.Injectable)()],d)},4193:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.HomeModule=void 0;const n=r(3563),s=r(538),i=r(7967),a=r(1367);let c=class{};t.HomeModule=c,t.HomeModule=c=o([(0,n.Module)({imports:[i.ConfigModule,(0,n.forwardRef)((()=>a.EveAgentModule))],providers:[s.HomeService],exports:[s.HomeService]})],c)},4219:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n(function_definition\n  declarator: (function_declarator\n    declarator: (identifier) @name.definition.function)) @definition.function\n\n(class_specifier\n  name: (type_identifier) @name.definition.class) @definition.class\n\n(struct_specifier\n  name: (type_identifier) @name.definition.struct) @definition.struct\n\n(enum_specifier\n  name: (type_identifier) @name.definition.enum) @definition.enum\n\n; (namespace_definition\n;   name: (identifier) @name.definition.namespace) @definition.namespace\n"},4230:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.PlanModeRespondToolFactory=void 0;const s=r(3563),i=r(2267);let a=class{constructor(){}getToolName(){return"plan_mode_respond"}create(e){return new i.PlanModeRespondTool}};t.PlanModeRespondToolFactory=a,t.PlanModeRespondToolFactory=a=o([(0,s.Injectable)(),n("design:paramtypes",[])],a)},4264:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.OpenAIProvider=void 0;const n=r(6228),s=r(8483),i=r(8959),a=r(2368),c=o(r(8938)),l=r(2088);class d extends s.BaseProvider{static isO1Model(e){return e.startsWith("o1")}getName(){return"openai"}getBaseChatModel(e,t){const r=process.env.OPENAI_BASE_URL||"https://api.openai.com/v1",o=this.shortModelName(e);return new n.ChatOpenAI({modelName:o,openAIApiKey:a.ConfigService.getInstance().getProperty("OPENAI_API_KEY"),configuration:{basePath:r}})}async getModelDescriptors(){0===d.modelCache.models.length&&await this.fetchModels();return d.modelCache.models.map((e=>{const t=d.MODEL_COSTS[e.id]||{input:0,output:0};return new i.ModelDescriptor("openai",e.id,t.input/1e3,0,0,t.output/1e3)}))}isValid(){return!!a.ConfigService.getInstance().getProperty("OPENAI_API_KEY")}async fetchModels(){if(!this.isValid())return[];const e=Date.now();if(d.modelCache.models.length>0&&e-d.modelCache.timestamp<3e5)return d.modelCache.models;const t=a.ConfigService.getInstance().getProperty("OPENAI_API_KEY");if(!t)return console.log("OpenAI API key not found"),[];try{const r=process.env.OPENAI_BASE_URL||"https://api.openai.com/v1",o=await c.default.get(`${r}/models`,{headers:{Authorization:`Bearer ${t}`}});if(200===o.status){const t=(o.data.data||[]).filter((e=>e.id.includes("gpt")||e.id.startsWith("o")));return d.modelCache={models:t,timestamp:e},t}return console.log(`Failed to fetch OpenAI models. Status code: ${o.status}`),[]}catch(e){return console.error(`Error fetching OpenAI models: ${e}`),[]}}getChatModelOptions(e,t){return new l.ChatModelOptions(null,null,!d.isO1Model(e.name))}}t.OpenAIProvider=d,d.GPT_4O_MODEL_NAME="gpt-4o",d.GPT_4O_MINI_MODEL_NAME="gpt-4o-mini",d.modelCache={models:[],timestamp:0},d.MODEL_COSTS={"gpt-4o":{input:1875e-9*1e3,output:75e-7*1e3},"gpt-4o-mini":{input:1125e-7,output:45e-5}}},4279:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.SourceArtefactController=void 0;const i=r(3563),a=r(3153);let c=class{constructor(e){this.sourceArtefactService=e}async importSourceArtefact(e){return this.sourceArtefactService.importSourceArtefact(e.scheme,e.locator,e.repoUrls)}async findById(e){return this.sourceArtefactService.findById(e)}async delete(e){return this.sourceArtefactService.delete(e)}async findBySchemeAndLocator(e,t){return this.sourceArtefactService.findBySchemeAndLocator(e,t)}async query(e,t,r=1,o=10,n="locator",s="ASC"){return this.sourceArtefactService.query(e,t,r,o,n,s)}};t.SourceArtefactController=c,o([(0,i.Post)("import"),s(0,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[Object]),n("design:returntype",Promise)],c.prototype,"importSourceArtefact",null),o([(0,i.Get)(":id"),s(0,(0,i.Param)("id")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"findById",null),o([(0,i.Delete)(":id"),s(0,(0,i.Param)("id")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"delete",null),o([(0,i.Get)("find"),s(0,(0,i.Query)("scheme")),s(1,(0,i.Query)("locator")),n("design:type",Function),n("design:paramtypes",[String,String]),n("design:returntype",Promise)],c.prototype,"findBySchemeAndLocator",null),o([(0,i.Get)(),s(0,(0,i.Query)("scheme")),s(1,(0,i.Query)("partialLocator")),s(2,(0,i.Query)("page")),s(3,(0,i.Query)("pageSize")),s(4,(0,i.Query)("sortBy")),s(5,(0,i.Query)("sortOrder")),n("design:type",Function),n("design:paramtypes",[String,String,Number,Number,String,String]),n("design:returntype",Promise)],c.prototype,"query",null),t.SourceArtefactController=c=o([(0,i.Controller)("source-artefacts"),n("design:paramtypes",[a.SourceArtefactService])],c)},4358:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.SchemePackageManager=void 0;const l=r(3563),d=a(r(6928)),u=a(r(857)),f=a(r(1943)),p=r(8547);let h=class{constructor(e){this.schemes=new Map(e.map((e=>[e.getName(),e])))}getScheme(e){const t=this.schemes.get(e);if(!t)throw new Error(`Unknown scheme: ${e}`);return t}async downloadAndStoreSources(e,t,r){const o=this.schemes.get(e);if(!o)return new p.SourceArtefact({scheme:e,locator:t,valid:!1,error:`Unknown scheme: ${e}`,repo:"",cacheSrcBaseDir:""});const n=d.join(u.homedir(),".eve","cached-sources");try{return await o.downloadAndStoreSources(t,n,r)}catch(r){return new p.SourceArtefact({scheme:e,locator:t,valid:!1,error:r instanceof Error?r.message:"Unknown error occurred",repo:"",cacheSrcBaseDir:""})}}async deleteSourceCache(e){if(e)try{await f.rm(e,{recursive:!0,force:!0})}catch(e){console.error(`Error deleting source cache directory: ${e}`)}}async needsImport(e){const t=this.schemes.get(e.scheme);return!t||await t.needsImport(e)}};t.SchemePackageManager=h,t.SchemePackageManager=h=i([(0,l.Injectable)(),c("design:paramtypes",[Array])],h)},4390:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SearchFilesTool=void 0;const u=r(3563),f=r(5317),p=r(9023),h=d(r(9055)),m=c(r(6928)),g=c(r(1943)),y=r(9581),v=r(2410),_=(0,p.promisify)(f.exec),w=500,k=10485760;let b=n=class{constructor(e){this.name="search_files",this.description="Request to perform a regex search across files in a specified directory.",this.rgPath=null,this.workingDir=e}async findRipgrepPath(){const e="win32"===process.platform,t=e?"rg.exe":"rg",r=[m.join(process.cwd(),"node_modules","@vscode","ripgrep","bin",t),m.join(process.cwd(),"node_modules","vscode-ripgrep","bin",t),t];for(const t of r)try{return await _(`${e?`"${t}"`:t} --version`),t}catch(e){}return null}getUsageInstructions(e){return`## search_files\nDescription: Request to perform a regex search across files in a specified directory, providing context-rich results. This tool searches for patterns or specific content across multiple files, displaying each match with encapsulating context. Uses ripgrep (rg) if available for performance, otherwise falls back to Node.js search.\nParameters:\n- path: (required) The path of the directory to search in (relative to the current working directory ${e.workingDir}). This directory will be recursively searched.\n- regex: (required) The regular expression pattern to search for. Uses Rust regex syntax if ripgrep is used, standard JS regex if fallback is used.\n- file_pattern: (optional) Glob pattern to filter files (e.g., '*.ts' for TypeScript files). If not provided, it will search all files (*).\nUsage:\n<search_files>\n<path>Directory path here</path>\n<regex>Your regex pattern here</regex>\n<file_pattern>file pattern here (optional)</file_pattern>\n</search_files>`}validateParams(e){return"string"==typeof e.path&&""!==e.path.trim()&&"string"==typeof e.regex&&""!==e.regex.trim()}async execute(e){const{path:t,regex:r,file_pattern:o}=e;h.default.info(`[${n.name}] Searching files in directory: ${t}, regex: ${r}, file_pattern: ${o}, relative to ${this.workingDir}`);const s=m.resolve(this.workingDir,t);if(!s.startsWith(this.workingDir)){const e=`Path traversal attempt detected: ${t} resolves outside of workspace ${this.workingDir}`;throw h.default.error(`[${n.name}] ${e}`),new y.FileSystemError(e,"PATH_TRAVERSAL_ERROR")}try{if(!(await g.stat(s)).isDirectory())throw new y.FileSystemError(`Search path is not a directory: ${t}`,"NOT_A_DIRECTORY")}catch(e){if("ENOENT"===e.code){const e=`Search path not found: ${t}`;throw h.default.error(`[${n.name}] ${e}`),new y.FileNotFoundError(e,t)}throw h.default.error(`[${n.name}] Error accessing search path ${t}: ${e.message}`),new y.FileSystemError(`Error accessing search path: ${e.message}`,e.code||"FS_ACCESS_ERROR")}try{if(null===this.rgPath&&(this.rgPath=await this.findRipgrepPath(),this.rgPath?h.default.info(`[${n.name}] Ripgrep found at: ${this.rgPath}`):h.default.warn(`[${n.name}] Ripgrep (rg) command not found. Falling back to Node.js search. Install ripgrep for better performance (e.g., 'brew install ripgrep' or 'apt-get install ripgrep').`)),!this.rgPath)return h.default.info(`[${n.name}] Using Node.js fallback search.`),this.nodeJsSearch(s,r,o);try{return h.default.info(`[${n.name}] Attempting search with ripgrep.`),await this.executeRipgrep(this.rgPath,s,r,o)}catch(e){return h.default.warn(`[${n.name}] Ripgrep execution failed: ${e.message}. Falling back to Node.js search.`),this.nodeJsSearch(s,r,o)}}catch(e){if(e instanceof y.FileNotFoundError||e instanceof y.FileSystemError)throw e;const r=`Error searching files in directory ${t}: ${e.message}`;throw h.default.error(`[${n.name}] ${r}\n${e.stack}`),new y.FileSystemError(r,e.code||"FS_SEARCH_ERROR")}}async executeRipgrep(e,t,r,o){return new Promise(((s,i)=>{const a=["--json","--context","2","--no-heading","--color","never","--line-number","--max-count",String(w)];a.push("--regexp",r),o&&a.push("--glob",o),a.push(t),h.default.debug(`[${n.name}] Executing ripgrep: ${e} ${a.join(" ")}`);const c=(0,f.spawn)(e,a,{cwd:this.workingDir,stdio:["ignore","pipe","pipe"]});let l="",d="";c.stdout.on("data",(e=>{l+=e.toString(),l.length>20971520&&(h.default.warn(`[${n.name}] Ripgrep stdout buffer exceeded limit, killing process.`),c.kill(),i(new y.FileSystemError("Ripgrep output exceeded size limit","OUTPUT_TOO_LARGE")))})),c.stderr.on("data",(e=>{d+=e.toString()})),c.on("close",(e=>{if(0!==e&&1!==e){const t=`Ripgrep exited with code ${e}: ${d||"No stderr output"}`;return h.default.error(`[${n.name}] ${t}`),void i(new y.FileSystemError(t,"RIPGREP_EXEC_ERROR"))}!d||d.includes("using explicit glob")||d.includes("No files were searched")||h.default.warn(`[${n.name}] Ripgrep stderr output: ${d}`);try{const e=this.parseRipgrepOutput(l);s(e)}catch(e){h.default.error(`[${n.name}] Error parsing ripgrep output: ${e.message}\n${e.stack}`),i(new y.FileSystemError(`Error parsing ripgrep output: ${e.message}`,"PARSE_ERROR"))}})),c.on("error",(t=>{h.default.error(`[${n.name}] Error spawning ripgrep process: ${t.message}\n${t.stack}`),"ENOENT"===t.code?i(new y.FileSystemError(`Failed to execute ripgrep binary at ${e}. Ensure it's installed and executable.`,"RIPGREP_SPAWN_ENOENT")):i(new y.FileSystemError(`Error executing ripgrep: ${t.message}`,"RIPGREP_SPAWN_ERROR"))}))}))}async nodeJsSearch(e,t,r){let o=0,s="";const i=new RegExp(t);try{const t=r?m.join(e,"**",r):m.join(e,"**","*"),a=await(0,v.glob)(t,{nodir:!0,absolute:!0,ignore:["**/node_modules/**","**/.git/**"]});for(const e of a){if(o>=w){s+="\nSearch stopped after reaching 500 results.";break}try{if((await g.stat(e)).size>k){h.default.warn(`[${n.name}] Skipping large file (Node.js search): ${e}`);continue}const t=(await g.readFile(e,"utf-8")).split("\n");let r=!1,a="";for(let n=0;n<t.length&&!(i.test(t[n])&&(r||(a+=`\n${m.relative(this.workingDir,e)}:\n`,r=!0),a+=`  ${n+1}: ${t[n]}\n`,o++,o>=w));n++);r&&(s+=a)}catch(t){h.default.warn(`[${n.name}] Error reading file ${e}: ${t.message}`)}}return s.trim()||"No matches found."}catch(e){throw h.default.error(`[${n.name}] Error during Node.js file search globbing: ${e.message}`),new y.FileSystemError(`Error finding files to search: ${e.message}`,"GLOB_ERROR")}}parseRipgrepOutput(e){if(!e.trim())return"No matches found.";const t=e.trim().split("\n"),r=[];let o=0;for(const e of t)try{if(e.trim()){const t=JSON.parse(e);r.push(t)}}catch(t){o++,o<5?h.default.warn(`[${n.name}] Error parsing ripgrep JSON line: ${t.message}. Line: "${e}"`):5===o&&h.default.warn(`[${n.name}] Too many ripgrep JSON parse errors, suppressing further warnings.`)}if(0===r.length&&o>0)return`Error: Could not parse ripgrep output. Found ${o} invalid JSON lines.`;if(0===r.length)return"No matches found.";let s="",i="",a=0;for(const e of r)if("match"===e.type){a++;const{path:t,lines:r,line_number:o}=e.data,n=t?.text||"unknown_file",c=m.relative(this.workingDir,n);c!==i&&(""!==i&&(s+="\n"),i=c,s+=`${i}:\n`),s+=`  ${o}: ${r.text.trimEnd()}\n`}else if("context"===e.type){const{path:t,lines:r,line_number:o}=e.data,n=t?.text||"unknown_file";m.relative(this.workingDir,n)}return(r.length>=w?"Showing first 500 matches.\n\n":`Found ${a} ${1===a?"match":"matches"}.\n\n`)+(s.trim()||"No matches found.")}};t.SearchFilesTool=b,t.SearchFilesTool=b=n=a([(0,u.Injectable)(),l("design:paramtypes",[String])],b)},4434:e=>{"use strict";e.exports=require("events")},4437:e=>{"use strict";e.exports=require("socket.io")},4500:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DatasetRetrieval=void 0;const n=r(7773),s=o(r(9055));class i extends n.Tool{constructor(e){super(),this.datasetRetrievalService=e,this.name="dataset_retrieval",this.description="Search a dataset for similar content using vector similarity. Input should be a JSON string with datasetName, searchText, and optional numResults (defaults to 5)."}async _call(e){try{const t=JSON.parse(e);if(!t.datasetName||!t.searchText)throw new Error("Both datasetName and searchText are required");const r=await this.datasetRetrievalService.searchDataset(t.datasetName,t.searchText,t.numResults);return JSON.stringify(r,null,2)}catch(e){throw s.default.error(`Error in dataset retrieval tool: ${e.message}`),e}}}t.DatasetRetrieval=i},4562:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AudioTranscriptionService=void 0;const d=r(3563),u=r(5317),f=l(r(9055)),p=c(r(9896)),h=c(r(857)),m=c(r(6928));let g=n=class{async transcribe(e){f.default.debug(`[${n.name}] Starting audio transcription`);const t=Buffer.from(e,"base64"),r=m.join(h.tmpdir(),`audio-${Date.now()}.wav`);await p.promises.writeFile(r,t),f.default.debug(`[${n.name}] Temporary file created: ${r}`);try{const e=await this.runFasterWhisperCLI(r);return f.default.debug(`[${n.name}] Transcription completed successfully`),e}finally{await p.promises.unlink(r),f.default.debug(`[${n.name}] Temporary file deleted: ${r}`)}}runFasterWhisperCLI(e){return new Promise(((t,r)=>{const o=m.join(h.tmpdir(),`audio-${Date.now()}.srt`);f.default.debug(`[${n.name}] Running Faster Whisper CLI on file: ${e}`);const s=process.env.TRANSCRIPTION_LANGUAGE||"en",i=process.env.TRANSCRIPTION_COMPUTE_TYPE||"float32",a=[e,"-o",o,"--task","transcribe","--without_timestamps","True","--language",s,"--compute_type",i],c=`faster-whisper ${a.join(" ")}`;f.default.info(`[${n.name}] Executing command: ${c}`);const l=(0,u.spawn)("faster-whisper",a);l.stdout.on("data",(e=>{f.default.debug(`[${n.name}] Faster Whisper stdout: ${e}`)})),l.stderr.on("data",(e=>{f.default.warn(`[${n.name}] Faster Whisper stderr: ${e}`)})),l.on("error",(e=>{f.default.error(`[${n.name}] Error in Faster Whisper process: ${e}`),r(new Error("Error in Faster Whisper process - make sure you have run the ./scripts/install-faster-whisper.sh script"))})),l.on("close",(async e=>{if(0===e)try{const e=await p.promises.readFile(o,"utf-8");f.default.debug(`[${n.name}] SRT content: ${e}`);const r=this.parseSrtContent(e);f.default.debug(`[${n.name}] Faster Whisper process completed successfully`),t(r)}catch(e){f.default.error(`[${n.name}] Error reading SRT file: ${e}`),r(new Error(`Error reading SRT file: ${e.message}`))}finally{await p.promises.unlink(o),f.default.debug(`[${n.name}] Temporary SRT file deleted: ${o}`)}else f.default.error(`[${n.name}] Faster Whisper process exited with code ${e}`),r(new Error(`Faster Whisper process exited with code ${e}`))}))}))}parseSrtContent(e){const t=e.split("\n");let r="";for(let e=0;e<t.length;e++)/^\d+$/.test(t[e])||/.*-->.*$/.test(t[e])||(r+=t[e].trim()+" ");return r.trim()}};t.AudioTranscriptionService=g,t.AudioTranscriptionService=g=n=a([(0,d.Injectable)()],g)},4623:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Dataset=void 0;const o=r(9100);t.Dataset=class{constructor(e,t,r=(0,o.ulid)(),n=new Date){this.id=r,this.name=e,this.baseDir=t,this.createdAt=n}}},4624:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ProviderAdapterRegistry=void 0;const a=r(3563),c=i(r(9055));let l=class{constructor(e){this.adapters=new Map;for(const t of e)this.registerAdapter(t)}registerAdapter(e){this.adapters.set(e.id,e),c.default.info(`[ProviderAdapterRegistry] Registered adapter for provider: ${e.name} (${e.id})`)}getAdapter(e){const t=this.adapters.get(e);if(!t)throw new Error(`No adapter found for provider: ${e}`);return t}getAllAdapters(){return Array.from(this.adapters.values())}};t.ProviderAdapterRegistry=l,t.ProviderAdapterRegistry=l=o([(0,a.Injectable)(),s(0,(0,a.Inject)("PROVIDER_ADAPTERS")),n("design:paramtypes",[Array])],l)},4632:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.StoredFileRepository=void 0;const i=r(3563),a=(r(1832),r(5775));let c=class{constructor(e){this.knex=e,this.columns={all:["id","fileContents","originalFilename","mimeType","createdAt","sessionId","workspaceName"],withoutContent:["id","originalFilename","mimeType","createdAt","sessionId","workspaceName"]}}async findAll(){return(await this.knex("stored_files").select(this.columns.withoutContent)).map((e=>a.StoredFileDto.fromStoredFile(e)))}async findById(e){const t=await this.knex("stored_files").select(this.columns.all).where("id",e).first();return t||null}async findByIdWithoutContent(e){const t=await this.knex("stored_files").select(this.columns.withoutContent).where("id",e).first();return t?a.StoredFileDto.fromStoredFile(t):null}async create(e){await this.knex("stored_files").insert(e)}async delete(e){await this.knex("stored_files").where("id",e).delete()}async findBySessionId(e){return(await this.knex("stored_files").select(this.columns.withoutContent).where("sessionId",e)).map((e=>a.StoredFileDto.fromStoredFile(e)))}async findByWorkspaceName(e){return(await this.knex("stored_files").select(this.columns.withoutContent).where("workspaceName",e)).map((e=>a.StoredFileDto.fromStoredFile(e)))}};t.StoredFileRepository=c,t.StoredFileRepository=c=o([(0,i.Injectable)(),s(0,(0,i.Inject)("KNEX")),n("design:paramtypes",[Function])],c)},4650:e=>{"use strict";e.exports=require("adm-zip")},4652:e=>{"use strict";e.exports=require("fs-extra")},4659:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GroqProvider=void 0;const n=r(1463),s=r(8483),i=r(8959),a=r(2368),c=o(r(8938));class l extends s.BaseProvider{getName(){return"groq"}getBaseChatModel(e,t){return new n.ChatGroq({modelName:this.shortModelName(e),temperature:t.temperature,apiKey:a.ConfigService.getInstance().getProperty("GROQ_API_KEY")})}async getModelDescriptors(){return(await this.fetchModels()).map((e=>new i.ModelDescriptor("groq",e,0,0,0,0)))}isValid(){return!!a.ConfigService.getInstance().getProperty("GROQ_API_KEY")}async fetchModels(){const e=a.ConfigService.getInstance().getProperty("GROQ_API_KEY");if(!e)return console.log("Groq API key not found"),[];try{const t=await c.default.get("https://api.groq.com/openai/v1/models",{headers:{Authorization:`Bearer ${e}`}});if(200===t.status){return(t.data.data||[]).map((e=>e.id))}return console.log(`Failed to fetch Groq models. Status code: ${t.status}`),[]}catch(e){return console.error(`Error fetching Groq models: ${e}`),[]}}}t.GroqProvider=l,l.LLAMA_31_8BB_INSTANT="groq/llama-3.1-8b-instant",l.LLAMA_31_70B_VERSATILE="groq/llama-3.1-70b-versatile",l.LLAMA_3_70B_8192_TOOL_USE="groq/llama3-groq-70b-8192-tool-use-preview"},4717:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceRepository=void 0;const i=r(3563);r(1832);let a=class{constructor(e){this.knex=e}async findAll(e){let t=this.knex("workspaces").select("*");return void 0!==e&&(t=t.where("isTemp",e)),t}async findByName(e){return this.knex("workspaces").where("name",e).first()}async findById(e){return this.knex("workspaces").where("id",e).first()}async create(e){const t={...e};e.portFromBaseDir||delete t.portFromBaseDir,await this.knex("workspaces").insert(e)}async update(e,t){await this.knex("workspaces").where("name",e).update(t)}async delete(e){await this.knex("workspaces").where("name",e).delete()}async updateLastAccessedAt(e){await this.knex("workspaces").where("name",e).update("lastAccessedAt",this.knex.fn.now())}async findUnlockedTempWorkspaceByRemoteUrl(e){return this.knex("workspaces").where({remoteRepoUrl:e,isTemp:!0,isLocked:!1}).orderBy("lastAccessedAt","desc").first()}};t.WorkspaceRepository=a,t.WorkspaceRepository=a=o([(0,i.Injectable)(),s(0,(0,i.Inject)("KNEX")),n("design:paramtypes",[Function])],a)},4778:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.McpToolFactoryService=void 0;const u=r(3563),f=r(2368),p=d(r(9055)),h=r(6910),m=r(499),g=c(r(9896)),y=c(r(6928)),v=r(9023);r(3192);let _=n=class{constructor(e){this.configService=e,this.readFileAsync=(0,v.promisify)(g.readFile),this.accessAsync=(0,v.promisify)(g.access)}async createMcpTools(){const e=this.configService.getProperty(h.ConfigPropNames.MCP_SERVERS_DIRECTORY,"~/.hldk/mcp-servers"),t=e.startsWith("~")?y.join(process.env.HOME||"",e.substring(1)):e,r=y.join(t,"mcp-servers.json");try{await this.accessAsync(r,g.constants.R_OK)}catch(e){return p.default.warn(`[${n.name}] MCP servers configuration file not found at ${r}`),[]}try{const e=await this.readFileAsync(r,"utf8"),t=JSON.parse(e);if(!t.mcpServers||0===Object.keys(t.mcpServers).length)return p.default.warn(`[${n.name}] No MCP servers defined in configuration`),[];const o=[];for(const[e,r]of Object.entries(t.mcpServers))if(r.disabled)p.default.info(`[${n.name}] Skipping disabled MCP server: ${e}`);else try{p.default.info(`[${n.name}] Initializing MCP server: ${e}`);const t=new m.MCPToolkit(r);await t.initialize();const s=await t.get_tools();p.default.info(`[${n.name}] Created ${s.length} tools from MCP server: ${e}`),o.push(...s)}catch(t){p.default.error(`[${n.name}] Failed to initialize MCP server ${e}: ${t.message}`)}return p.default.info(`[${n.name}] Created a total of ${o.length} MCP tools from all servers`),o}catch(e){return p.default.error(`[${n.name}] Error processing MCP servers configuration: ${e.message}`),[]}}};t.McpToolFactoryService=_,t.McpToolFactoryService=_=n=a([(0,u.Injectable)(),l("design:paramtypes",[f.ConfigService])],_)},4833:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ReadFileTool=void 0;const u=r(3563),f=c(r(1943)),p=c(r(6928)),h=d(r(9055)),m=r(9581);let g=n=class{constructor(e){this.name="read_file",this.description="Request to read the contents of a file at the specified path.",this.workingDir=e}validateParams(e){return"string"==typeof e.path&&""!==e.path.trim()}getUsageInstructions(e){return`## read_file\nDescription: Request to read the contents of a file at the specified path. Use this when you need to examine the contents of an existing file you do not know the contents of, for example to analyze code, review text files, or extract information from configuration files. Automatically extracts raw text from PDF and DOCX files. May not be suitable for other types of binary files, as it returns the raw content as a string.\nParameters:\n- path: (required) The path of the file to read (relative to the current working directory ${e.workingDir})\nUsage:\n<read_file>\n<path>File path here</path>\n</read_file>`}async execute(e){const t=e.path;h.default.info(`[${n.name}] Attempting to read file: ${t} relative to ${this.workingDir}`);const r=p.resolve(this.workingDir,t);if(!r.startsWith(this.workingDir)){const e=`Path traversal attempt detected: ${t} resolves outside of workspace ${this.workingDir}`;throw h.default.error(`[${n.name}] ${e}`),new m.FileSystemError(e,"PATH_TRAVERSAL_ERROR")}try{if(!(await f.stat(r)).isFile()){const e=`Path is not a file: ${t}`;throw h.default.error(`[${n.name}] ${e}`),new m.FileNotFoundError(e,t)}const e=await f.readFile(r,"utf8");return h.default.info(`[${n.name}] File ${t} read successfully`),e}catch(e){if("ENOENT"===e.code){const e=`File not found: ${t}`;throw h.default.error(`[${n.name}] ${e}`),new m.FileNotFoundError(e,t)}const r=`Error reading file ${t}: ${e.message}`;throw h.default.error(`[${n.name}] ${r}\n${e.stack}`),new m.FileSystemError(r,e.code||"FS_READ_ERROR")}}};t.ReadFileTool=g,t.ReadFileTool=g=n=a([(0,u.Injectable)(),l("design:paramtypes",[String])],g)},4897:e=>{"use strict";e.exports=require("@langchain/community/document_loaders/fs/pptx")},4911:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GitCommit=void 0;const c=r(7773),l=i(r(9896)),d=i(r(6928)),u=a(r(9055)),f=a(r(3807)),p=r(2434);class h extends c.Tool{async ensureGitignoreExists(){return p.GitUtils.ensureGitignoreExists(this.repoBaseDir)}constructor(e,t,r){super(),this.repoBaseDir=e,this.requestId=t,this.sessionService=r,this.name="git_commit",this.description="Commits changes to the git repository",this.MAX_DIFF_SIZE=5e4,this.git=(0,f.default)(this.repoBaseDir)}async parseGitDiffOutput(e){const t=e.match(/(\d+) files? changed(?:, (\d+) insertions?\(\+\))?(?:, (\d+) deletions?\(-\))?/),r=t&&t[2]?parseInt(t[2]):0,o=t&&t[3]?parseInt(t[3]):0;return{filesChanged:t?parseInt(t[1]):0,insertions:r,deletions:o,linesChanged:Math.max(r,o)}}async getGitStats(){await this.git.add("-A");const e=await this.git.diff(["--cached","--shortstat"]),t=(await this.git.diff(["--cached","--name-only"])).split("\n").filter((e=>e.includes("test")));let r="";return t.length>0&&(r=await this.git.diff(["--cached","--shortstat",...t])),{allFiles:await this.parseGitDiffOutput(e),testFiles:await this.parseGitDiffOutput(r)}}async storeRequestSpecJsonFile(e){const t=await this.sessionService.getRequest(this.requestId);if(!t||!t.requestContent)return void u.default.warn(`Unable to store request content for requestId: ${this.requestId}`);if(!await this.sessionService.getSession(t.sessionId))return void u.default.warn(`Session not found for requestId: ${this.requestId}`);if("false"===process.env.STORE_SPECS_IN_WORKSPACE)return;const r=new Date,o=`${r.getFullYear()}-${String(r.getMonth()+1).padStart(2,"0")}-${String(r.getDate()).padStart(2,"0")}`,n=d.join(this.repoBaseDir,".eve","specs",o);l.mkdirSync(n,{recursive:!0});const s=await this.sessionService.getRequestStats(this.requestId),i=s.cost,a=await this.getGitStats(),c=Date.now()-new Date(t.startedAt).getTime(),f={spec:t.requestContent,commitMessage:e,stats:{...s,cost:i,currency:"gbp",processingMillis:c,git:{...a.allFiles,testFilesChanged:a.testFiles.filesChanged,testInsertions:a.testFiles.insertions,testDeletions:a.testFiles.deletions,linesChanged:a.allFiles.linesChanged,testLinesChanged:a.testFiles.linesChanged}}},p=d.join(n,`${this.requestId}.json`);l.writeFileSync(p,JSON.stringify(f,null,2)),await this.sessionService.updateGitStats(this.requestId,{...a.allFiles,testFilesChanged:a.testFiles.filesChanged,testInsertions:a.testFiles.insertions,testDeletions:a.testFiles.deletions,linesChanged:a.allFiles.linesChanged,testLinesChanged:a.testFiles.linesChanged})}async _call(e){try{const t=await this.ensureGitignoreExists();await this.storeRequestSpecJsonFile(e),u.default.info(`Committing changes to git with message: ${e}`),await this.git.add("-A"),t&&(await this.git.add(".gitignore"),e=`${e}\n\nAutomatically added .gitignore file with default patterns`),await this.git.commit(e);const r=`Successfully committed changes with message: ${e}`;return t?`${r}\nNote: Created a new .gitignore file with default patterns`:r}catch(e){return u.default.error("Error in GitCommit tool:",e),`Failed to commit changes: ${e.message}`}}async hasUncommittedUpdates(){try{await this.ensureGitignoreExists();const e=await this.git.status();return u.default.info("Git status: %s",JSON.stringify(e)),e.files.length>0}catch(e){throw u.default.error("Error checking for uncommitted updates:",e),new Error(`Failed to check for uncommitted updates: ${e.message}`)}}async getUncommittedChanges(){try{await this.ensureGitignoreExists();const e=await this.git.status();let t="";const r=await this.git.raw(["rev-parse","--verify","HEAD"]).catch((()=>!1));if(r){const e=await this.git.diff(["HEAD"]);e&&(t+=e)}if(e.not_added.length>0)for(const r of e.not_added)if(l.existsSync(d.join(this.repoBaseDir,r))){const e=l.readFileSync(d.join(this.repoBaseDir,r),"utf8");t+=`\n\nNew file: ${r}\n`,t+=`+++ ${r}\n`,t+=e.split("\n").map((e=>`+ ${e}`)).join("\n")}if(t.length>this.MAX_DIFF_SIZE){u.default.warn("Git diff is too large to summarise - returning just the filenames");let t="";return r&&(t=await this.git.diff(["HEAD","--name-only"])),e.not_added.length>0&&(t+=(t?"\n":"")+"Untracked files:\n"+e.not_added.join("\n")),t}return u.default.debug(`Git diff: ${t}`),t||"No changes detected"}catch(e){throw u.default.error("Error getting uncommitted changes:",e),new Error(`Failed to get uncommitted changes: ${e.message}`)}}}t.GitCommit=h},4912:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MavenSourceArtefactScheme=void 0;const l=r(3563),d=r(8547),u=c(r(8938)),f=a(r(1943)),p=a(r(6928)),h=a(r(857)),m=c(r(4650)),g=c(r(9055));let y=class{getName(){return"maven"}async downloadAndStoreSources(e,t,r){if(g.default.info(`Downloading and storing sources for Maven artifact: ${e}`),!this.isValidGAV(e))throw g.default.warn(`Invalid Maven GAV coordinates: ${e}`),new l.BadRequestException("Invalid Maven GAV coordinates");const o=this.getRepoUrls(r);g.default.info(`Using repository URLs: ${o.join(", ")}`);const n=await this.findSourcesJarUrl(o,e);if(!n)throw g.default.warn(`Sources jar not found for ${e} in any of the provided repositories`),new l.BadRequestException("Sources jar not found in any of the provided repositories");g.default.info(`Found sources jar at: ${n}`);const s=await f.mkdtemp(p.join(h.tmpdir(),"maven-sources-")),i=p.join(s,"sources.jar");try{await this.downloadFile(n,i),g.default.info(`Downloaded sources jar to: ${i}`);const r=e.replace(/:/g,"/"),o=p.join(t,"maven",r);await f.mkdir(o,{recursive:!0}),g.default.info(`Created cache directory: ${o}`),await this.unzipJar(i,o),g.default.info(`Unzipped sources jar to: ${o}`);const s=new d.SourceArtefact({scheme:this.getName(),locator:e,valid:!0,error:null,repo:new URL(n).origin,cacheSrcBaseDir:o});return g.default.info(`Successfully created SourceArtefact for ${e}`),s}finally{await f.rm(s,{recursive:!0,force:!0}),g.default.info(`Cleaned up temporary directory: ${s}`)}}async needsImport(e){if(!e.cacheSrcBaseDir)return!0;try{return 0===(await f.readdir(e.cacheSrcBaseDir)).length}catch(e){return!0}}async readArtefactSourceTree(e){if(!e.cacheSrcBaseDir)throw new Error("Invalid source artefact: missing cache directory");const{generateTree:t}=await Promise.resolve().then((()=>a(r(6426))));return t(e.cacheSrcBaseDir)}async readArtefactSourceFile(e,t){if(!e.cacheSrcBaseDir)throw new Error("Invalid source artefact: missing cache directory");const r=p.join(e.cacheSrcBaseDir,t);try{return await f.readFile(r,"utf-8")}catch(e){throw new Error(`Failed to read file: ${t}`)}}isValidGAV(e){return/^[^:]+:[^:]+:[^:]+$/.test(e)}getRepoUrls(e){if(e&&e.length>0)return e;const t=process.env.MAVEN_REPO_URLS;return t?t.split(",").map((e=>e.trim())):["https://repo.maven.apache.org/maven2"]}async findSourcesJarUrl(e,t){const[r,o,n]=t.split(":"),s=`${r.replace(/\./g,"/")}/${o}/${n}/${o}-${n}-sources.jar`;for(var i of e){i.endsWith("/")||(i+="/");const e=new URL(s,i).toString();g.default.info(`Checking URL: ${e}`);try{return await u.default.head(e),e}catch(t){g.default.info(`Error checking maven url ${e}: ${t}`)}}return null}async downloadFile(e,t){const r=await u.default.get(e,{responseType:"arraybuffer"});await f.writeFile(t,r.data)}async unzipJar(e,t){new m.default(e).extractAllTo(t,!0)}};t.MavenSourceArtefactScheme=y,t.MavenSourceArtefactScheme=y=i([(0,l.Injectable)()],y)},4934:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ComputerToolLinux=void 0;const n=r(1569),s=r(5317),i=r(9023),a=r(3903),c=o(r(943)),l=o(r(3864)),d=o(r(9896)),u=o(r(6928)),f=r(7751),p=r(7650),h=(0,i.promisify)(s.exec);class m extends f.ComputerToolBase{validateParams(e){return n.z.object({action:n.z.enum(["key","type","mouse_move","left_click","left_click_drag","right_click","middle_click","double_click","screenshot","cursor_position"]),text:n.z.string().optional(),coordinate:n.z.array(n.z.number()).length(2).optional()}).parse(e)}constructor(){if(super(),this.screenshotDelay=2,this.scalingEnabled=!0,this.outputDir="/tmp/outputs",!l.default.sync("xdotool"))throw new Error("xdotool is not installed. Please install it via your package manager.");if(!l.default.sync("gnome-screenshot")&&!l.default.sync("scrot"))throw new Error("Neither gnome-screenshot nor scrot is installed. Please install one of them.");if(!l.default.sync("convert"))throw new Error("ImageMagick is not installed. Please install it via your package manager.");const e=process.env.DISPLAY_NUM;this.displayPrefix=void 0!==e?`DISPLAY=:${e} `:"",this.xdotool=`${this.displayPrefix}xdotool`}async execute(e){const t=this.validateParams(e),{action:r,text:o,coordinate:n}=t;try{let e;switch(r){case"mouse_move":case"left_click_drag":if(!n)throw new p.ToolError(`coordinate is required for ${r}`);const[t,s]=n;e="mouse_move"===r?await this.shell(`${this.xdotool} mousemove --sync ${t} ${s}`):await this.shell(`${this.xdotool} mousedown 1 mousemove --sync ${t} ${s} mouseup 1`);break;case"key":if(!o)throw new p.ToolError(`text is required for ${r}`);e=await this.shell(`${this.xdotool} key -- ${o}`);break;case"type":if(!o)throw new p.ToolError(`text is required for ${r}`);e=await this.typeText(o);break;case"left_click":case"right_click":case"middle_click":case"double_click":e=await this.clickAction(r);break;case"screenshot":return e=await this.screenshot(),[{type:"image_url",image_url:{url:`data:image/png;base64,${e.base64_image}`}}];case"cursor_position":e=await this.getCursorPosition();break;default:throw new p.ToolError(`Invalid action: ${r}`)}return e.output}catch(e){return e instanceof p.ToolError?`Error: ${e.message}`:`Unexpected error: ${e}`}}async typeText(e){const t=this.chunkText(e,50);let r="";for(const e of t){const t=`${this.xdotool} type --delay 12 -- ${c.default.quote([e])}`;r+=(await this.shell(t,!1)).output}const o=await this.screenshot();return new p.ToolResult(r,"",o.base64_image)}async clickAction(e){const t={left_click:"1",right_click:"3",middle_click:"2",double_click:"--repeat 2 --delay 500 1"}[e];return await this.shell(`${this.xdotool} click ${t}`)}async getCursorPosition(){const e=(await this.shell(`${this.xdotool} getmouselocation --shell`,!1)).output||"",t=e.match(/X=(\d+)/),r=e.match(/Y=(\d+)/);if(!t||!r)throw new p.ToolError(`Failed to parse cursor position: ${e}`);const o=parseInt(t[1],10),n=parseInt(r[1],10);return new p.ToolResult(`X=${o},Y=${n}`,"")}async screenshot(){d.default.mkdirSync(this.outputDir,{recursive:!0});const e=u.default.join(this.outputDir,`screenshot_${(0,a.v4)().replace(/-/g,"")}.png`);let t="";if(l.default.sync("gnome-screenshot"))t=`${this.displayPrefix}gnome-screenshot -f ${e} -p`;else{if(!l.default.sync("scrot"))throw new p.ToolError("Neither gnome-screenshot nor scrot is available.");t=`${this.displayPrefix}scrot -p ${e}`}const r=await this.shell(t,!1);if(await this.shell(`convert ${e} -resize ${this.width}x${this.height}! ${e}`,!1),d.default.existsSync(e)){const t=d.default.readFileSync(e).toString("base64");return new p.ToolResult("","",t)}throw new p.ToolError(`Failed to take screenshot: ${r.error}`)}async shell(e,t=!0){const{stdout:r,stderr:o}=await h(e,{shell:"/bin/bash"});let n=null;return t&&(await new Promise((e=>setTimeout(e,1e3*this.screenshotDelay))),n=(await this.screenshot()).base64_image),new p.ToolResult(r,o,n)}chunkText(e,t){const r=[];for(let o=0;o<e.length;o+=t)r.push(e.slice(o,o+t));return r}}t.ComputerToolLinux=m},4970:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ReadFile=void 0;const c=r(5534),l=r(1569),d=i(r(9896)),u=i(r(6928)),f=a(r(9055));class p extends c.Tool{constructor(e){super(),this.name="read_file",this.description="Read the content of a file in the workspace. Should only be used for reading files that are expected to be text based. Do not use this tool for binary files.",this.schema=l.z.object({filePath:l.z.string().describe("The relative path of the file to read")}),this.workspaceRootDir=e}async _call(e){return`The content of the file at path: ${e.filePath} is as follows:\n${this.readFile(e.filePath)}`}readFile(e){f.default.info(`ReadFile.readFile called with: ${e}`);const t=u.join(this.workspaceRootDir,e);try{return d.readFileSync(t,"utf-8")}catch(t){return"ENOENT"===t.code?`Error: File not found - ${e}`:`Error reading file: ${t.message}`}}}t.ReadFile=p},5015:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigController=void 0;const i=r(3563),a=r(2368);let c=class{constructor(e){this.configService=e}getConfig(){return this.configService.getConfig()}async getAllProperties(){return this.configService.getAllProperties()}async getProperty(e){return this.configService.getProperty(e)}async setProperty(e,t){return await this.configService.setProperty(e,t),{message:"Property set successfully"}}async unsetProperty(e){return await this.configService.unsetProperty(e),{message:"Property unset successfully"}}async updateMultipleProperties(e){for(const[t,r]of Object.entries(e))await this.configService.setProperty(t,r);return{message:"Properties updated successfully"}}};t.ConfigController=c,o([(0,i.Get)(),n("design:type",Function),n("design:paramtypes",[]),n("design:returntype",void 0)],c.prototype,"getConfig",null),o([(0,i.Get)("properties"),n("design:type",Function),n("design:paramtypes",[]),n("design:returntype",Promise)],c.prototype,"getAllProperties",null),o([(0,i.Get)("property/:name"),s(0,(0,i.Param)("name")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"getProperty",null),o([(0,i.Put)("property/:name"),s(0,(0,i.Param)("name")),s(1,(0,i.Body)("value")),n("design:type",Function),n("design:paramtypes",[String,String]),n("design:returntype",Promise)],c.prototype,"setProperty",null),o([(0,i.Delete)("property/:name"),s(0,(0,i.Param)("name")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"unsetProperty",null),o([(0,i.Post)("properties"),s(0,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[Object]),n("design:returntype",Promise)],c.prototype,"updateMultipleProperties",null),t.ConfigController=c=o([(0,i.Controller)("config"),n("design:paramtypes",[a.ConfigService])],c)},5017:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SEAgentService=void 0;const a=r(3563),c=r(6158),l=r(3470),d=i(r(9055)),u=r(2300),f=r(5277),p=r(8921);let h=class extends f.GraphAgentService{constructor(e,t,r){super(e,t,r),this.agentCollaborator=e,this.toolFactoryService=t,this.ruleService=r}getName(){return"se-agent"}async getTools(e){const t=["list_files","read_file","update_file","delete_file","command_line","fetch_web_page","read_dependency_source_tree","read_dependency_source_file","git_commit","current_timestamp","grep","find_files","serp_api"];return e.workspace.portFromBaseDir&&t.push("read_port_from_file"),await this.toolFactoryService.createTools(t,e)}async getSystemPrompt(e){const t=await p.EpicsPrompts.updateStoryTasks(e);let r=`As an AI Software Engineer assistant, you are tasked with analysing the software system and answering questions about it and/or making improvements to it.\n  Follow these guidelines:\n  1. Review the file structure tree below and use the read_file tool to answer questions about the system and suggest improvements where appropriate. Provide a concise summary of your findings.\n  2. When making changes to the system:\n     a. First, fetch all the files you think you might need using the read_file tool. For files in the portFromBaseDir, use the read_port_from_file tool. For gradle/maven projects you can also use the read_dependency_source_tree and read_dependency_source_file tools to fetch the source code for dependencies and inspect them to learn how to interact with them.\n     b. Make a clear plan with multiple steps.\n     c. Iterate through the plan, one step at a time.\n     d. Think step-by-step and explain the needed changes in a few short sentences.\n     e. Each change MUST be done by invoking the update_file tool to replace a part of the file with a new bit.\n     f. Before adding new dependencies to a build/dependencies file search the web to look for the latest version - your training data is old :0)\n  3. Use the read_file tool to retrieve the contents of specific files when needed rather than guessing at what they contain.\n     When making edits to previously referenced files, always keep the name/path the same.\n  4. When choosing a file path for generated artifacts, consider the structure and choose a logical location.\n  5. When a specific file name is mentioned, look for it in the structure below and use the read_file tool to get the content of that file.\n  6. Consider the following when suggesting improvements:\n     a. Code organization and structure\n     b. Adherence to best practices and design patterns\n     c. Performance optimizations\n     d. Security considerations\n     e. Scalability and maintainability\n     f. Documentation and comments\n  7. Provide clear explanations for your suggestions and recommendations.\n  8. If you need to create new files or modify existing ones, clearly indicate the file path and content.\n  9. When generating new code or modifying existing code, always look at similar or nearby files in the source tree for guidance on:\n     a. Code style and formatting\n     b. Logging practices\n     c. Error handling\n     d. Import statements and module organization\n     e. Commenting style and docstring format\n     f. Naming conventions for variables, functions, and classes\n     g. Tools, libraries, and frameworks being used\n     h. Your ending summary should be a concise summary of a) which files were updated and b) what changes were made to them.\n  10. To find similar files:\n      a. Examine the file structure provided below.\n      b. Identify files in the same directory or nearby directories with similar purposes or file extensions.\n      c. Use the read_file tool to retrieve the contents of these similar files for reference.\n  11. Ensure that new code generation and modifications align with the existing codebase's style and best practices.\n  12. Do not make assumptions about tools, libraries, or frameworks being used:\n      a. Always fetch and examine similar existing files before creating new ones.\n      b. When adding a new entity or data class, fetch an existing one first and use the same tooling and styles.\n      c. For data migrations, look at an existing migration file to understand the tooling and practices used in the repository.\n      d. Consistently use the same tools and approaches found in the existing codebase.\n  13. When making changes to the system use the update_file tool as follows:\n      a. Always provide the path to the file you want to change (or create) as the first argument.\n      b. The second argument is the SEARCH block - the bit of the existing code you want to replace. For new files this should be an empty string.\n      c. The third argument is the REPLACE block - the bit of the new code you want to replace it with. DO NOT FORGET TO INCLUDE THIS!!\n      d. Always try to minimise the size of the SEARCH block so you are only updating the specific parts of the file that need updating.\n      e. If you need to make edits to multiple parts of a single file, make a plan and do so in a series of update_file calls.\n      f. If you get an error back from the tool saying the search block was not found then you can try again with a larger search block or the entire contents of the file as the search block.\n  14. To delete a file, use the delete_file tool:\n      a. Provide the relative path of the file to delete as the argument.\n      b. Always confirm the file deletion with the user before proceeding.\n  15. When refactoring or renaming files:\n      a. Use the update_file tool to create the new file with the desired content.\n      b. Use the delete_file tool to remove the old file.\n      c. Update any references to the old file in other parts of the codebase using the update_file tool.\n  16. ${e.workspace.isGitRepo?"After making changes to the system, always commit the changes to git using the git_commit tool:\n      a. Use the git_commit tool with a brief, descriptive commit message of the changes you've made.\n      b. The git_commit tool will automatically stage and commit all changes, so you don't need to worry about git add commands.\n  17. If the user asks you to undo or /undo or undo the last changes, inform them that you cannot directly undo git commits, but they can use git reset --hard HEAD~1 in their local environment if needed.":"This workspace is not a git repository. You cannot commit changes or use git commands. Instead, focus on analyzing the code and suggesting improvements without version control operations."}\n  18. You can use the command_line tool to execute commands in the workspace directory${e.workspace.isGitRepo?", but not for git operations":""}. This includes system commands, package managers, build tools, etc. But remember the following:\n      a. Do not traverse up above the workspace directory though and only do things that are safe and can definitely be undone.\n      b. Only use package manager/build commands if you are sure of the correct one. Look in the readme or the build files to find out for sure and if not sure then do not use them. Just say what you might do to complete the task.\n      c. ALWAYS include automatic confirmation flags for interactive commands to prevent hanging:\n         - Use --yes or -y for apt, apt-get\n         - Use -y for yum\n         - Use --no-input for pip\n         - Use -f or --force for npm/pnpm\n         - Use --defaults for yeoman\n         - Use --non-interactive for composer\n         - Use --assume-yes for other tools\n         - Add appropriate silent/quiet flags when available\n  19. You can use the read_dependency_source_tree and read_dependency_source_file tools to fetch the source code for dependencies and inspect them to learn how to interact with them. Look in the build file (e.g. pom.xml or build.gradle) or package metadata (e.g. package.json) and then use that to build the correct scheme and locator.\n  20. Always use the git_commit tool for git operations instead of the command_line tool. The git_commit tool is specifically designed for safe and efficient git operations in this environment.\n      `;return e.workspace.buildOrTestCommand?r+=`\n  21. After making changes to the system, but before committing them to git, consider the following:\n      a. If you have updated any code files (not just scripts, documentation, or other non-code files), you should run the following command to test if the changes haven't broken anything:\n         Use the command_line tool to execute this command: ${e.workspace.buildOrTestCommand}\n      b. If you run the test and any errors occur, try to fix them if it seems feasible.\n      c. If the errors cannot be fixed easily, stop processing and report the error to the user without committing the changes to git.\n      d. If you don't run the test or if the build or test is successful, proceed with committing the changes to git.\n      e. Remember, you only need to run this test command if you've made changes to actual code files, not for changes to scripts, documentation, or other non-code files.`:r+='\n  21. After making changes to the system, but before committing them to git, you need to determine and run the appropriate build/compile command based on the type of code that was modified:\n\n      a. For JavaScript/TypeScript frontend projects:\n         - Look for package.json in the project root or frontend directory\n         - Common commands to try (in order of preference):\n           1. cd <project-dir> && pnpm build --force\n           2. cd <project-dir> && pnpm compile --force\n           3. cd <project-dir> && pnpm lint --force\n         \n      b. For Node.js/TypeScript backend projects:\n         - Look for package.json in the project root or backend directory\n         - Common commands to try (in order of preference):\n           1. cd <project-dir> && pnpm build --force\n           2. cd <project-dir> && pnpm compile --force\n           3. cd <project-dir> && tsc --noEmit\n           4. cd <project-dir> && pnpm lint --force\n\n      c. For Java/Kotlin projects with Maven:\n         - Look for pom.xml in the project directory\n         - Common commands to try (in order of preference):\n           1. cd <project-dir> && ./mvnw compile -DskipTests\n           2. cd <project-dir> && ./mvnw install -DskipTests\n           3. cd <project-dir> && mvn compile -DskipTests\n           4. cd <project-dir> && mvn install -DskipTests\n\n      d. For Java/Kotlin projects with Gradle:\n         - Look for build.gradle or build.gradle.kts\n         - Common commands to try (in order of preference):\n           1. cd <project-dir> && ./gradlew compileJava -x test\n           2. cd <project-dir> && ./gradlew classes -x test\n           3. cd <project-dir> && ./gradlew build -x test\n           4. cd <project-dir> && gradle compileJava -x test\n\n      e. For Python projects:\n         - Look for setup.py, pyproject.toml, or requirements.txt\n         - Common commands to try (in order of preference):\n           1. cd <project-dir> && python -m compileall .\n           2. cd <project-dir> && pylint --errors-only .\n           3. cd <project-dir> && mypy .\n\n      f. For Go projects:\n         - Look for go.mod file\n         - Common commands to try (in order of preference):\n           1. cd <project-dir> && go build ./...\n           2. cd <project-dir> && go vet ./...\n           3. cd <project-dir> && golangci-lint run --fast\n\n      g. For Rust projects:\n         - Look for Cargo.toml\n         - Common commands to try (in order of preference):\n           1. cd <project-dir> && cargo check\n           2. cd <project-dir> && cargo build\n           3. cd <project-dir> && cargo clippy\n\n      h. For .NET/C# projects:\n         - Look for .csproj or .sln files\n         - Common commands to try (in order of preference):\n           1. cd <project-dir> && dotnet build --no-restore\n           2. cd <project-dir> && dotnet build /p:TreatWarningsAsErrors=true\n\n      IMPORTANT GUIDELINES:\n      1. Always cd into the specific directory where the code was modified before running build commands\n      2. Choose the fastest command that will catch compilation/lint errors (avoid full builds if possible)\n      3. Skip tests (use flags like -DskipTests, -x test, etc.) to keep the build fast\n      4. Add appropriate flags to suppress prompts (--force, -y, etc.)\n      5. If multiple files were modified in different projects, run the appropriate command for each project\n      6. If a build fails, report the error and try to fix it before committing\n      7. Look for project-specific build scripts in package.json scripts section or similar configuration files\n      8. For monorepos, only build the affected packages/projects\n      \n      After successfully building and committing the changes, look for relevant integration tests:\n      1. Use the grep and find_files tools to search for test files related to the components you modified\n      2. Look for test files with names like "*e2e*.ts", "*integration*.ts", "*e2e-spec.ts", "*IntegrationTest.kt|java|py", "*IT.kt|java|py" etc.\n      3. If you find relevant integration tests, suggest running them to the user:\n         - Show the exact command needed to run the specific test(s)\n         - Ask if they would like to execute the test command\n         - If they agree, run the command and help fix any issues that arise\n      4. If no specific integration tests are found, suggest running the general test suite for that part of the codebase (e.g. "cd backend && gradle test" or "cd frontend && pnpm test" etc.)',r+=`\n  \n  Here is the file tree of the system:\n  ${e.repositoryTree()}\n  \n  ${e.portFromSourceTree()?`\n  Here is the "port from" file tree containing another codebase that you can learn from and/or port code from (use read_port_from_file tool to read files from here):\n  ${e.portFromSourceTree()}\n  `:""}\n\n  ${e.repositoryHints()?`Additional hints:\n${e.repositoryHints()}`:""}\n  \n  ${e.workspace.buildOrTestCommand?`Build or Test Command: ${e.workspace.buildOrTestCommand}`:""}\n  \n  IMPORTANT: Keep your final summary concise and to the point. If you have made changes to multiple files, only list the files that have been changed and a short description of the changes for each file.\n  IMPORTANT: When using the update_file tool you MUST provide all 3 arguments: filePath, search & REPLACE. DO NOT FORGET TO INCLUDE THE REPLACE BLOCK!!\n  IMPORTANT: ALWAYS GO LOOKING IN THE CODEBASE AND FETCH ANY FILES YOU THINK YOU NEED TO LEARN FROM BEFORE MAKING CHANGES. DO NOT MAKE ASSUMPTIONS ABOUT WHAT IS IN A FILE - JUST FETCH IT!\n  IMPARTANT: You must NEVER try to stop processes or kill running processes. You must only use the command_line tool to execute commands.\n  IMPORTANT: Always use the update_file tool to make changes to the codebase. Never use the command_line tool to make changes to update source code.\n  IMPORTANT: If asked by the user, you can use the fetch_web_page tool to read the content of a web page. Only use this tool when explicitly requested by the user to fetch a specific URL.\n  IMPORTANT: When using the command_line tool, ALWAYS include automatic confirmation flags (--yes, -y, --force, etc.) for interactive commands to prevent hanging.\n  IMPORTANT: Add appropriate silent/quiet flags to command line operations when available to reduce unnecessary output.\n  \n  ${e.workspace.buildOrTestCommand?`\n    IMPORTANT: Run: ${e.workspace.buildOrTestCommand} to build and test the project after making changes to the code.\n    IMPORTANT: If you get an error then fix it and run the test again until you get it right.\n    IMPORTANT: If the build error relates to a maven/gradle dependency then you should use the read_dependency_source_tree and read_dependency_source_file tools to fetch the source code for the dependency and inspect it to see if you can fix the problem.\n    `:"IMPORTANT: DO NOT FORGET TO RUN AN APPROPRIATE BUILD COMMAND TO VERIFY THAT THE CHANGES YOU HAVE MADE HAVE NOT BROKEN ANYTHING! "}\n  IMPORTANT: IF YOU MADE CODE CHANGES THEN YOU MUST REMEMBER TO COMMIT YOUR CHANGES TO GIT! DO NOT FORGET THIS!\n\n  # Task Management Instructions\n  ${t}\n\n  IMPORTANT: When implementing tasks:\n  1. Always check the task status in the task JSON file before starting work\n  2. Update the task status to "inprogress" when you start working on it\n  3. Update the task status to "done" when you complete it\n  4. Always use current_timestamp to update the updatedAt field when changing task status\n  5. Remember that task status changes may require updating the parent story status\n  `,d.default.debug(`SE Agent system prompt for workspace '${e.workspace.name}' (length: ${r.length} chars): ${r}`),r}};t.SEAgentService=h,t.SEAgentService=h=o([(0,a.Injectable)(),s(0,(0,a.Inject)((0,a.forwardRef)((()=>u.GraphAgentCollaborator)))),n("design:paramtypes",[u.GraphAgentCollaborator,c.ToolFactoryService,l.AgentRuleService])],h)},5018:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MCPTest=void 0;const n=r(5534),s=r(1569),i=r(5317),a=o(r(9055)),c=o(r(6928));class l extends n.Tool{constructor(e){super(),this.name="mcp_test",this.description="Test a command with the Model Context Protocol (MCP) lifecycle. This tool will return the MCP server capabilities JSON, available tools list, and tool invocation results",this.schema=s.z.object({command:s.z.string().describe("The command to execute to start the MCP server"),envVars:s.z.record(s.z.string()).optional().describe("Optional environment variables to set"),workingDir:s.z.string().optional().describe("Optional working directory relative to the workspace root")}),this.timeout=1e4,this.workspaceRootDir=e,this.maxOutputChars=parseInt(process.env.MAX_TOOL_OUTPUT_CHARS||"20000")}clipString(e){return e.length>this.maxOutputChars?e.slice(0,this.maxOutputChars/2)+"\n... [output truncated] ...\n"+e.slice(-this.maxOutputChars/2):e}async _call({command:e,envVars:t,workingDir:r}){try{const o=r?c.default.join(this.workspaceRootDir,r):this.workspaceRootDir;a.default.info(`Executing MCP test command: ${e} in directory: ${o}`);const n=e.split(" "),s=n[0],l=n.slice(1),d={...process.env,...t||{}};return new Promise(((t,r)=>{const n=(0,i.spawn)(s,l,{cwd:o,env:d});let c="",u="",f=!1,p="";const h=setTimeout((()=>{n.kill("SIGTERM");const e=`MCP test timed out after ${this.timeout}ms`;a.default.warn(e),r(e)}),this.timeout);n.stdout.on("data",(e=>{const t=e.toString();c+=t,a.default.debug(`MCP stdout: ${t}`);try{const e=t.split("\n").filter((e=>e.trim()));for(const t of e){const e=JSON.parse(t);2===e.id&&e.result&&e.result.tools&&(p=JSON.stringify(e.result,null,2))}}catch(e){}})),n.stderr.on("data",(e=>{const t=e.toString();u+=t,a.default.debug(`MCP stderr: ${t}`)})),n.on("close",(r=>{clearTimeout(h);const n=`MCP test ${0===r?"completed successfully":"exited with code "+r}.\nCommand: ${e}\nWorking directory: ${o}\n==== TOOLS RESPONSE ====\n${p||"No tools response received"}\n==== STDOUT ====\n${this.clipString(c)}\n==== STDERR ====\n${this.clipString(u)}`;t(n)})),n.on("error",(e=>{clearTimeout(h),a.default.error(`MCP test error: ${e.message}`),r(`Error executing MCP test: ${e.message}`)}));const m={jsonrpc:"2.0",id:1,method:"initialize",params:{protocolVersion:"2024-11-05",capabilities:{roots:{listChanged:!0},sampling:{},tools:{listChanged:!0}},clientInfo:{name:"EveMCPTestClient",version:"1.0.0"}}};a.default.debug(`Sending MCP initialize message: ${JSON.stringify(m)}`),n.stdin.write(JSON.stringify(m)+"\n"),setTimeout((()=>{const e={jsonrpc:"2.0",method:"notifications/initialized"};a.default.debug(`Sending MCP initialized notification: ${JSON.stringify(e)}`),n.stdin.write(JSON.stringify(e)+"\n"),f=!0,setTimeout((()=>{const e={jsonrpc:"2.0",id:2,method:"tools/list",params:{}};a.default.debug(`Sending MCP tools/list request: ${JSON.stringify(e)}`),n.stdin.write(JSON.stringify(e)+"\n"),setTimeout((()=>{a.default.debug("Closing MCP stdin to initiate shutdown"),n.stdin.end()}),1e3)}),500)}),500)}))}catch(t){return a.default.warn(`Error executing MCP test: ${e}`,t),`Error executing MCP test:\nCommand: ${e}\nError: ${t.message}`}}}t.MCPTest=l},5025:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AgentRuleRepository=void 0;const a=r(3563),c=(r(1832),i(r(9055)));let l=class{constructor(e){this.knex=e}async findByAgentName(e){return this.knex("rules").where("agentName",e).first()}async upsert(e){const t=(new Date).toISOString();try{await this.knex("rules").insert({agentName:e.agentName,content:e.content,createdAt:t,updatedAt:t}).onConflict("agentName").merge({content:e.content,updatedAt:t})}catch(t){throw c.default.error("Failed to upsert rule:",{error:t.message,stack:t.stack,rule:e}),t}}};t.AgentRuleRepository=l,t.AgentRuleRepository=l=o([(0,a.Injectable)(),s(0,(0,a.Inject)("KNEX")),n("design:paramtypes",[Function])],l)},5056:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.StoredFileController=void 0;const i=r(3563),a=r(9556),c=r(7205);let l=class{constructor(e){this.storedFileService=e}async uploadFile(e,t,r){return this.storedFileService.uploadFile(e,t,r)}async getFileContent(e,t){const r=await this.storedFileService.getFile(e);r?(t.setHeader("Content-Type",r.mimeType),t.setHeader("Content-Disposition",`attachment; filename="${r.originalFilename}"`),t.send(r.fileContents)):t.status(404).send("File not found")}async getFile(e){return this.storedFileService.getFileMetadata(e)}async getAllFiles(){return this.storedFileService.getAllFiles()}async deleteFile(e){await this.storedFileService.deleteFile(e)}async getFilesBySessionId(e){return this.storedFileService.getFilesBySessionId(e)}async getFilesByWorkspaceName(e){return this.storedFileService.getFilesByWorkspaceName(e)}};t.StoredFileController=l,o([(0,i.Post)("upload"),(0,i.UseInterceptors)((0,a.FileInterceptor)("file")),s(0,(0,i.UploadedFile)()),s(1,(0,i.Query)("sessionId")),s(2,(0,i.Query)("workspaceName")),n("design:type",Function),n("design:paramtypes",[Object,String,String]),n("design:returntype",Promise)],l.prototype,"uploadFile",null),o([(0,i.Get)(":id/content"),s(0,(0,i.Param)("id")),s(1,(0,i.Res)()),n("design:type",Function),n("design:paramtypes",[String,Object]),n("design:returntype",Promise)],l.prototype,"getFileContent",null),o([(0,i.Get)(":id"),s(0,(0,i.Param)("id")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],l.prototype,"getFile",null),o([(0,i.Get)(),n("design:type",Function),n("design:paramtypes",[]),n("design:returntype",Promise)],l.prototype,"getAllFiles",null),o([(0,i.Delete)(":id"),s(0,(0,i.Param)("id")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],l.prototype,"deleteFile",null),o([(0,i.Get)("session/:sessionId"),s(0,(0,i.Param)("sessionId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],l.prototype,"getFilesBySessionId",null),o([(0,i.Get)("workspace/:workspaceName"),s(0,(0,i.Param)("workspaceName")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],l.prototype,"getFilesByWorkspaceName",null),t.StoredFileController=l=o([(0,i.Controller)("stored-files"),n("design:paramtypes",[c.StoredFileService])],l)},5096:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.HelloWorldController=void 0;const s=r(3563),i=r(5533);let a=class{constructor(e){this.helloWorldService=e}getHello(){return this.helloWorldService.getHello()}};t.HelloWorldController=a,o([(0,s.Get)(),n("design:type",Function),n("design:paramtypes",[]),n("design:returntype",String)],a.prototype,"getHello",null),t.HelloWorldController=a=o([(0,s.Controller)("hello-world"),n("design:paramtypes",[i.HelloWorldService])],a)},5124:e=>{"use strict";e.exports=require("winston")},5156:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.ReplaceInFileToolFactory=void 0;const s=r(3563),i=r(3409);let a=class{constructor(){}getToolName(){return"replace_in_file"}create(e){return new i.ReplaceInFileTool(e.workingDir)}};t.ReplaceInFileToolFactory=a,t.ReplaceInFileToolFactory=a=o([(0,s.Injectable)(),n("design:paramtypes",[])],a)},5177:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.AccessMcpResourceToolFactory=void 0;const s=r(3563),i=r(7692),a=r(2115);let c=class{constructor(e){this.mcpHubService=e}getToolName(){return"access_mcp_resource"}create(e){return new i.AccessMcpResourceTool(this.mcpHubService)}};t.AccessMcpResourceToolFactory=c,t.AccessMcpResourceToolFactory=c=o([(0,s.Injectable)(),n("design:paramtypes",[a.McpHubService])],c)},5188:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Grep=void 0;const c=r(5534),l=r(1569),d=i(r(8489)),u=i(r(6928)),f=i(r(9896)),p=a(r(9055));class h extends c.Tool{static async main(e,t,r,o,n){p.default.info(`Starting grep search in workspace: ${e}`),p.default.info(`Parameters - startPath: ${t}, searchTerm: ${r}, filePattern: ${o}, max: ${n}`);const s=new h(e),i=await s._call({startPath:t,searchTerm:r,filePattern:o,max:n});return p.default.info("Grep search completed"),i}constructor(e){super(),this.name="grep",this.description="Use this grep tool to search for specific terms throughout the codebase when needed. Try to constrain the search to a specific files or a particular part of the codebase if possible.",this.schema=l.z.object({startPath:l.z.string().describe("The relative path to start the search from (use '.' for entire workspace)"),searchTerm:l.z.string().describe("The search term or regex pattern to look for"),filePattern:l.z.string().describe("Regex pattern to filter file names (required)"),max:l.z.number().optional().describe("Maximum number of files to return (optional, defaults to 20)")}),this.MAX_RESULTS=20,this.workspaceRootDir=e,d.config.silent=!0,d.config.fatal=!0}async _call(e){try{const{startPath:t,searchTerm:r,filePattern:o,max:n}=e,s=u.resolve(this.workspaceRootDir,t),i=n||this.MAX_RESULTS,a=5,c=new RegExp(o),l=this.getAllFiles(s,c),d=[];let h=!1;for(const e of l){if(d.length>=i){h=!0;break}try{const t=f.readFileSync(e,"utf-8").split("\n"),o=[];for(let e=0;e<t.length&&o.length<a;e++){const n=t[e];let s=!1;try{s=new RegExp(r).test(n)}catch(e){s=n.includes(r)}s&&o.push({lineNum:e+1,line:n.trim()})}o.length>0&&d.push({filePath:u.relative(this.workspaceRootDir,e),matches:o})}catch(t){p.default.info(`Skipping unreadable file ${e}: ${t.message}`);continue}}const m={matchingFiles:d};if(h){const e=`Stopped searching after finding matches in ${i} files. There may be more matching files.`;p.default.info(e),m.warning=e}return p.default.info(`Found matches in ${d.length} files`),JSON.stringify(m,null,2)}catch(e){throw p.default.info(`Error in grep search: ${e.message}`),new Error(`Error performing grep search: ${e.message}`)}}getAllFiles(e,t,r=[]){const o=f.readdirSync(e,{withFileTypes:!0});for(const n of o){const o=u.join(e,n.name);n.isDirectory()?this.getAllFiles(o,t,r):n.isFile()&&t.test(n.name)&&r.push(o)}return r}}t.Grep=h},5190:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GitService=void 0;const i=r(3563),a=r(8474),c=r(5754),l=s(r(9055)),d=s(r(3807));let u=class{constructor(e){this.workspaceService=e}async getGit(e){const t=await this.workspaceService.findOne(e);if(!t)throw new Error(`Workspace ${e} not found`);return(0,d.default)(t.repoBaseDir)}async undoLastCommit(e){const t=await this.getGit(e);try{await t.reset(["--hard","HEAD~1"])}catch(e){throw new Error(`Failed to undo last commit: ${e.message}`)}}async getGitLog(e){const t=await this.getGit(e);try{return(await t.log(["-n","15"])).all.map((e=>new c.GitLogEntry(e.hash,e.date,e.message,e.author_name,e.author_email)))}catch(e){return e instanceof Error&&e.message.includes("not a git repository")||l.default.warn(`Failed to fetch git log: ${e.message}`),[]}}async getGitDiff(e,t){const r=await this.getGit(e);try{return await r.show(["--unified",t])}catch(e){throw new Error(`Failed to get git diff: ${e.message}`)}}};t.GitService=u,t.GitService=u=o([(0,i.Injectable)(),n("design:paramtypes",[a.WorkspaceService])],u)},5277:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GraphAgentService=void 0;const a=r(3563),c=r(3470),l=r(1412),d=r(7249),u=r(1162),f=r(6158),p=i(r(9055)),h=r(2300);let m=class{constructor(e,t,r){this.agentCollaborator=e,this.toolFactoryService=t,this.ruleService=r}async getTools(e){return await this.toolFactoryService.createTools(await this.getToolNames(e),e)}async getToolNames(e){return[]}async getAgentRules(){const e=await this.ruleService.getRulesByAgentName(this.getName());return e?.content||null}async getSystemPrompt(e){const t=await this.getAgentRules(),r="Not implemented";return t?`${r}\n\nRules:\n${t}`:r}getName(){return"graph-agent"}getModelCategory(){return u.ModelCategory.CODING}isPrivateModelsOnly(){return!1}async verifyRequest(e,t){}async*processRequestStream(e){if(!e.workspaceName)throw new Error("Workspace name is required in the agent request");yield*this.agentCollaborator.processRequestStream(this,e)}async processRequest(e){return this.agentCollaborator.processRequest(this,e)}async simpleRequest(e,t,r=null){const o=new l.AgentRequest(null,e,r,null,t);return(await this.processRequest(o)).responseContent}createGraph(e,t,r){return d.StandardAgentStateManager.createWorkflow((async function(t){const r=t.messages;p.default.debug("Calling model with messages: %s",JSON.stringify(r));const o=await e.invoke(r);return p.default.debug("Received model response: %s",JSON.stringify(o)),{messages:[o]}}),t).compile({checkpointer:r})}createInitialState(){return{messages:[]}}};t.GraphAgentService=m,t.GraphAgentService=m=o([(0,a.Injectable)(),s(0,(0,a.Inject)((0,a.forwardRef)((()=>h.GraphAgentCollaborator)))),n("design:paramtypes",[h.GraphAgentCollaborator,f.ToolFactoryService,c.AgentRuleService])],m)},5299:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getPlanVsActPrompt=function(e){return"ACT MODE V.S. PLAN MODE\n\nIn each user message, the environment_details will specify the current mode. There are two modes:\n\n- ACT MODE: In this mode, you have access to all tools EXCEPT the plan_mode_respond tool.\n - In ACT MODE, you use tools to accomplish the user's task. Once you've completed the user's task, you use the attempt_completion tool to present the result of the task to the user.\n- PLAN MODE: In this special mode, you have access to the plan_mode_respond tool.\n - In PLAN MODE, the goal is to gather information and get context to create a detailed plan for accomplishing the task, which the user will review and approve before they switch you to ACT MODE to implement the solution.\n - In PLAN MODE, when you need to converse with the user or present a plan, you should use the plan_mode_respond tool to deliver your response directly, rather than using <thinking> tags to analyze when to respond. Do not talk about using plan_mode_respond - just use it directly to share your thoughts and provide helpful answers.\n\n## What is PLAN MODE?\n\n- While you are usually in ACT MODE, the user may switch to PLAN MODE in order to have a back and forth with you to plan how to best accomplish the task. \n- When starting in PLAN MODE, depending on the user's request, you may need to do some information gathering e.g. using read_file or search_files to get more context about the task. You may also ask the user clarifying questions to get a better understanding of the task. You may return mermaid diagrams to visually display your understanding.\n- When in plan mode, if you think you need to read a file then just go ahead and use the read_file tool to do it without stopping to ask for permission.\n- Once you've gained more context about the user's request, you should architect a detailed plan for how you will accomplish the task. Returning mermaid diagrams may be helpful here as well.\n- While it is perfectly fine to make direct updates to documentation files using the replace_in_file and write_to_file tools while in PLAN MODE you should try not to use tools to edit source files. Instead you should propose the code edits in the plan and then ask to switch to ACT mode to implement the changes.\n- Then you might ask the user if they are pleased with this plan, or if they would like to make any changes. Think of this as a brainstorming session where you can discuss the task and plan the best way to accomplish it.\n- If at any point a mermaid diagram would make your plan clearer to help the user quickly see the structure, you are encouraged to include a Mermaid code block in the response. (Note: if you use colors in your mermaid diagrams, be sure to use high contrast colors so the text is readable.)\n- Finally once it seems like you've reached a good plan, ask the user to switch you back to ACT MODE to implement the solution."}},5306:e=>{"use strict";e.exports=require("serpapi")},5312:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Request=void 0;t.Request=class{constructor(e,t,r,o,n={}){this.responseContent="",this.startedAt=new Date,this.endedAt=new Date,this.tookMillis=0,this.inputTokens=0,this.cacheWriteTokens=0,this.cacheReadTokens=0,this.outputTokens=0,this.totalTokens=0,this.cost=0,this.filesChanged=0,this.insertions=0,this.deletions=0,this.testFilesChanged=0,this.testInsertions=0,this.testDeletions=0,this.linesChanged=0,this.testLinesChanged=0,this.requestId=e,this.sessionId=t,this.workspaceName=r,this.requestContent=o,Object.assign(this,n)}}},5317:e=>{"use strict";e.exports=require("child_process")},5324:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BlockService=t.InternalBlockEvents=void 0;const a=r(3563),c=r(461),l=r(2776),d=i(r(9055)),u=r(6297),f=r(269);var p;!function(e){e.BLOCK_CREATED="block.created",e.BLOCK_UPDATED="block.updated",e.USAGE_TRACKED="block.usage.tracked"}(p||(t.InternalBlockEvents=p={}));let h=o=class{constructor(e,t,r){this.appDataSource=e,this.eventEmitter=t,this.dbDebugContextService=r}async createBlock(e){if(!e.blockId)throw new Error("BlockId must be provided by the provider");try{return await this.dbDebugContextService.runWithContext({operationName:"BlockService.createBlock",taskId:e.taskId},(async()=>{const t=new Date,r={blockId:e.blockId,taskId:e.taskId,role:e.role,blockType:e.blockType,tagName:e.tagName,description:e.description,status:e.status,content:e.content,errorText:e.errorText,output:e.output,createdAt:t,updatedAt:t};return await this.appDataSource.knex("eve_task_blocks").insert({...r,createdAt:this.appDataSource.knex.fn.now(),updatedAt:this.appDataSource.knex.fn.now()}),d.default.debug(`[${o.name}] Created block ${e.blockId} for task ${e.taskId}`),u.debugLogger.dumpObject("Created block",r),this.eventEmitter.emit(p.BLOCK_CREATED,r),r}))}catch(e){throw d.default.error(`[${o.name}] Error creating block: ${e.message}\n${e.stack}`),new Error(`Failed to create block: ${e.message}`)}}async updateBlock(e,t){try{const r=await this.getBlock(e);return await this.dbDebugContextService.runWithContext({operationName:"BlockService.updateBlock",taskId:r.taskId},(async()=>{const r={updatedAt:this.appDataSource.knex.fn.now()};void 0!==t.blockType&&(r.blockType=t.blockType),void 0!==t.tagName&&(r.tagName=t.tagName),void 0!==t.description&&(r.description=t.description),void 0!==t.status&&(r.status=t.status),void 0!==t.content&&(r.content=t.content),void 0!==t.errorText&&(r.errorText=t.errorText),void 0!==t.output&&(r.output=t.output),await this.appDataSource.knex("eve_task_blocks").where({blockId:e}).update(r);const n=await this.getBlock(e);d.default.debug(`[${o.name}] Updated block ${e}`),u.debugLogger.dumpObject("Updated block",n);const s={blockId:n.blockId,taskId:n.taskId,...t};return this.eventEmitter.emit(p.BLOCK_UPDATED,s),n}))}catch(t){throw d.default.error(`[${o.name}] Error updating block ${e}: ${t.message}\n${t.stack}`),new Error(`Failed to update block ${e}: ${t.message}`)}}async appendToBlockContent(e,t){try{const r=await this.getBlock(e);return await this.dbDebugContextService.runWithContext({operationName:"BlockService.appendToBlockContent",taskId:r.taskId},(async()=>{const n=r.content+t;await this.appDataSource.knex("eve_task_blocks").where({blockId:e}).update({content:n,updatedAt:this.appDataSource.knex.fn.now()});const s=await this.getBlock(e);d.default.debug(`[${o.name}] Appended content to block ${e}`);const i={blockId:s.blockId,taskId:s.taskId,appendContent:t};return this.eventEmitter.emit(p.BLOCK_UPDATED,i),s}))}catch(t){throw d.default.error(`[${o.name}] Error appending content to block ${e}: ${t.message}\n${t.stack}`),new Error(`Failed to append content to block ${e}: ${t.message}`)}}async getBlock(e){try{const t=await this.appDataSource.knex("eve_task_blocks").where({blockId:e}).first();if(!t)throw new Error(`Block ${e} not found`);return t}catch(t){throw d.default.error(`[${o.name}] Error getting block ${e}: ${t.message}\n${t.stack}`),new Error(`Failed to get block ${e}: ${t.message}`)}}async getBlocksForTask(e){try{return await this.dbDebugContextService.runWithContext({operationName:"BlockService.getBlocksForTask",taskId:e},(async()=>{const t=await this.appDataSource.knex("eve_task_blocks").where({taskId:e}).orderBy("blockId","asc");return d.default.debug(`[${o.name}] Retrieved ${t.length} blocks for task ${e}`),t}))}catch(t){throw d.default.error(`[${o.name}] Error getting blocks for task ${e}: ${t.message}\n${t.stack}`),new Error(`Failed to get blocks for task ${e}: ${t.message}`)}}async getLastBlockForTask(e){try{return await this.dbDebugContextService.runWithContext({operationName:"BlockService.getLastBlockForTask",taskId:e},(async()=>{const t=await this.appDataSource.knex("eve_task_blocks").where({taskId:e}).orderBy("blockId","desc").first();return t?(d.default.debug(`[${o.name}] Retrieved last block ${t.blockId} for task ${e}`),t):(d.default.debug(`[${o.name}] No blocks found for task ${e}`),null)}))}catch(t){throw d.default.error(`[${o.name}] Error getting last block for task ${e}: ${t.message}\n${t.stack}`),new Error(`Failed to get last block for task ${e}: ${t.message}`)}}async trackUsage(e){try{return await this.dbDebugContextService.runWithContext({operationName:"BlockService.trackUsage",taskId:e.taskId},(async()=>{const[t]=await this.appDataSource.knex("eve_task_usage").insert({taskId:e.taskId,inputTokens:e.inputTokens,outputTokens:e.outputTokens,cacheWriteTokens:e.cacheWriteTokens,cacheReadTokens:e.cacheReadTokens,totalCost:e.totalCost,createdAt:this.appDataSource.knex.fn.now()}).returning("id");return await this.appDataSource.knex("eve_tasks").where({taskId:e.taskId}).increment({totalInputTokens:e.inputTokens,totalOutputTokens:e.outputTokens}),d.default.info(`[${o.name}] Tracked usage for task ${e.taskId}: ${e.inputTokens} input tokens, ${e.outputTokens} output tokens`),this.eventEmitter.emit(p.USAGE_TRACKED,{taskId:e.taskId,usageId:t,inputTokens:e.inputTokens,outputTokens:e.outputTokens,cacheWriteTokens:e.cacheWriteTokens,cacheReadTokens:e.cacheReadTokens,totalCost:e.totalCost}),t}))}catch(t){throw d.default.error(`[${o.name}] Error tracking usage for task ${e.taskId}: ${t.message}\n${t.stack}`),new Error(`Failed to track usage for task ${e.taskId}: ${t.message}`)}}async getUsageForTask(e){try{return await this.dbDebugContextService.runWithContext({operationName:"BlockService.getUsageForTask",taskId:e},(async()=>{const t=await this.appDataSource.knex("eve_task_usage").where({taskId:e}).orderBy("createdAt","asc");return d.default.debug(`[${o.name}] Retrieved ${t.length} usage records for task ${e}`),t}))}catch(t){throw d.default.error(`[${o.name}] Error getting usage for task ${e}: ${t.message}\n${t.stack}`),new Error(`Failed to get usage for task ${e}: ${t.message}`)}}async getTotalUsageForTask(e){try{return await this.dbDebugContextService.runWithContext({operationName:"BlockService.getTotalUsageForTask",taskId:e},(async()=>{const t=await this.appDataSource.knex("eve_task_usage").where({taskId:e}).sum({inputTokens:"inputTokens",outputTokens:"outputTokens"}).first();return{inputTokens:Number(t?.inputTokens||0),outputTokens:Number(t?.outputTokens||0)}}))}catch(t){throw d.default.error(`[${o.name}] Error getting total usage for task ${e}: ${t.message}\n${t.stack}`),new Error(`Failed to get total usage for task ${e}: ${t.message}`)}}};t.BlockService=h,t.BlockService=h=o=n([(0,a.Injectable)(),s("design:paramtypes",[l.AppDataSource,c.EventEmitter2,f.DbDebugContextService])],h)},5369:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ApiHandlerFactory=void 0;const a=r(3563),c=r(4624),l=r(8620),d=i(r(9055));let u=o=class{constructor(e,t){this.providerAdapterRegistry=e,this.llmMetadataService=t,d.default.info(`[${o.name}] ApiHandlerFactory initialized`)}async buildApiHandler(e){const t=e?.providerName||"anthropic";d.default.info(`[${o.name}] Building API handler for provider: ${t}`);try{const r=this.providerAdapterRegistry.getAdapter(t),n=(await this.llmMetadataService.getModelsForProvider(t)).find((t=>t.modelId===e.model));n||d.default.warn(`[${o.name}] Model not found: ${e.model}, using default configuration`);const s=n?.supportsThinkingTokens?e.thinkingTokens:void 0,i={modelId:e.model,apiKey:e.apiKey||"",baseUrl:e.baseUrl,thinkingTokens:s},a=r.getModelClient(i);return{generateResponse:(e,t,r,o)=>a.generateResponse(e,t,r,o),getModel:()=>{const e=a.getModelMetadata();return{id:e.modelId,info:e}}}}catch(e){throw d.default.error(`[${o.name}] Error building API handler: ${e.message}`),e}}};t.ApiHandlerFactory=u,t.ApiHandlerFactory=u=o=n([(0,a.Injectable)(),s("design:paramtypes",[c.ProviderAdapterRegistry,l.LlmMetadataService])],u)},5390:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.goQuery=t.csharpQuery=t.cQuery=t.cppQuery=t.rubyQuery=t.rustQuery=t.javaQuery=t.javascriptQuery=t.pythonQuery=t.typescriptQuery=void 0;var n=r(1391);Object.defineProperty(t,"typescriptQuery",{enumerable:!0,get:function(){return o(n).default}});var s=r(7202);Object.defineProperty(t,"pythonQuery",{enumerable:!0,get:function(){return o(s).default}});var i=r(9791);Object.defineProperty(t,"javascriptQuery",{enumerable:!0,get:function(){return o(i).default}});var a=r(460);Object.defineProperty(t,"javaQuery",{enumerable:!0,get:function(){return o(a).default}});var c=r(242);Object.defineProperty(t,"rustQuery",{enumerable:!0,get:function(){return o(c).default}});var l=r(156);Object.defineProperty(t,"rubyQuery",{enumerable:!0,get:function(){return o(l).default}});var d=r(4219);Object.defineProperty(t,"cppQuery",{enumerable:!0,get:function(){return o(d).default}});var u=r(1547);Object.defineProperty(t,"cQuery",{enumerable:!0,get:function(){return o(u).default}});var f=r(1114);Object.defineProperty(t,"csharpQuery",{enumerable:!0,get:function(){return o(f).default}});var p=r(6654);Object.defineProperty(t,"goQuery",{enumerable:!0,get:function(){return o(p).default}})},5444:(e,t)=>{"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0}),t.TaskStatus=void 0,function(e){e.IN_PROGRESS="in_progress",e.WAITING_FOR_INPUT="waiting_for_input",e.EXECUTING_TOOL="executing_tool",e.USER_CANCELLED="user_cancelled"}(r||(t.TaskStatus=r={}))},5480:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.SessionController=void 0;const i=r(3563),a=r(7373),c=r(573);let l=class{constructor(e){this.sessionService=e}async createSession(e,t,r="",o="se-agent"){return this.sessionService.ensureSession(e,t,r,o)}async getSessions(e=1,t=10,r="createdAt",o="DESC"){return this.sessionService.getSessions(e,t,r,o)}async getSession(e){return this.sessionService.getSession(e)}async deleteSession(e){return this.sessionService.deleteSession(e)}async getItemsForSession(e,t=1,r=100,o="ASC"){const[n,s]=await this.sessionService.getItemsForSession(e,t,r,o);return{items:n,total:s}}streamSessionItems(e){return this.sessionService.streamSessionItems(e)}async abortSession(e){return this.sessionService.abortSession(e)}};t.SessionController=l,o([(0,i.Post)(),s(0,(0,i.Body)("workspaceName")),s(1,(0,i.Body)("sessionId")),s(2,(0,i.Body)("requestContent")),s(3,(0,i.Body)("agent")),n("design:type",Function),n("design:paramtypes",[String,String,String,String]),n("design:returntype",Promise)],l.prototype,"createSession",null),o([(0,i.Get)(),s(0,(0,i.Query)("page")),s(1,(0,i.Query)("limit")),s(2,(0,i.Query)("sortBy")),s(3,(0,i.Query)("sortOrder")),n("design:type",Function),n("design:paramtypes",[Number,Number,String,String]),n("design:returntype",Promise)],l.prototype,"getSessions",null),o([(0,i.Get)(":sessionId"),s(0,(0,i.Param)("sessionId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],l.prototype,"getSession",null),o([(0,i.Delete)(":sessionId"),s(0,(0,i.Param)("sessionId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],l.prototype,"deleteSession",null),o([(0,i.Get)(":sessionId/items"),s(0,(0,i.Param)("sessionId")),s(1,(0,i.Query)("page")),s(2,(0,i.Query)("limit")),s(3,(0,i.Query)("sortOrder")),n("design:type",Function),n("design:paramtypes",[String,Number,Number,String]),n("design:returntype",Promise)],l.prototype,"getItemsForSession",null),o([(0,i.Sse)(":sessionId/stream"),s(0,(0,i.Param)("sessionId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",c.Observable)],l.prototype,"streamSessionItems",null),o([(0,i.Post)(":sessionId/abort"),s(0,(0,i.Param)("sessionId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],l.prototype,"abortSession",null),t.SessionController=l=o([(0,i.Controller)("sessions"),n("design:paramtypes",[a.SessionService])],l)},5499:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ToolResultTransformerService=void 0;const a=r(3563),c=i(r(9055));let l=o=class{constructor(){this.transformers=new Map,this.registerTransformer("read_file",this.transformReadFile),this.registerTransformer("search_files",this.transformSearchFiles),this.registerTransformer("list_code_definition_names",this.transformListCodeDefinitionNames),this.registerTransformer("list_files",this.transformListFiles)}registerTransformer(e,t){this.transformers.set(e,t)}transformForClient(e,t){const r=this.transformers.get(e);if(r)try{return c.default.debug(`[${o.name}] Transforming result for tool: ${e}`),r(t)}catch(r){return c.default.warn(`[${o.name}] Error transforming result for tool ${e}: ${r.message}`),t}return t}hasTransformerFor(e){return this.transformers.has(e)}transformReadFile(e){if("string"==typeof e){const t=e,r=t.split("\n").length,o=t.length,n=this.extractFileName("Unknown");return{result:t,display:{summary:`File: ${n} (${r} lines, ${o.toLocaleString()} chars)`,status:"success",isCollapsible:!0,autoCollapse:!0,metadata:{fileName:n,lineCount:r,contentLength:o}}}}if(e&&"object"==typeof e){const t={...e},r=t.content?.length||0,o=t.content?.split("\n").length||0,n=this.extractFileName(t.path||"Unknown");return{...t,display:{summary:`File: ${n} (${o} lines, ${r.toLocaleString()} chars)`,status:"success",isCollapsible:!0,autoCollapse:!0,metadata:{fileName:n,lineCount:o,contentLength:r}}}}return e}transformSearchFiles(e){if(Array.isArray(e)){const t=e.length;return{result:e,display:{summary:`Found ${t} matches across ${this.countUniqueFiles(e)} files`,status:"success",isCollapsible:!0,autoCollapse:!0,metadata:{matchCount:t,fileCount:this.countUniqueFiles(e)}}}}return e}transformListCodeDefinitionNames(e){return Array.isArray(e)?{result:e,display:{summary:`Found ${e.length} code definitions`,status:"success",isCollapsible:!0,autoCollapse:!0,metadata:{definitionCount:e.length}}}:e}transformListFiles(e){return Array.isArray(e)?{result:e,display:{summary:`Listed ${e.length} files/directories`,status:"success",isCollapsible:!0,autoCollapse:!0,metadata:{fileCount:e.length}}}:e}transformAttemptCompletion(e){return e?{result:e,display:{summary:"Task completion",status:"success",isCollapsible:!1,autoCollapse:!1,metadata:{}}}:e}extractFileName(e){if(!e)return"Unknown";const t=e.split("/");return t[t.length-1]||e}countUniqueFiles(e){const t=new Set;return e.forEach((e=>{e&&e.path&&t.add(e.path)})),t.size}};t.ToolResultTransformerService=l,t.ToolResultTransformerService=l=o=n([(0,a.Injectable)(),s("design:paramtypes",[])],l)},5515:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ReadWorkspaceTree=void 0;const o=r(5534),n=r(1569),s=r(6426);class i extends o.Tool{constructor(e){super(),this.name="read_workspace_tree",this.description="Read the workspace file tree, respecting .gitignore and .aiderignore files",this.schema=n.z.object({}),this.workspaceRootDir=e}async _call(){return(0,s.generateTree)(this.workspaceRootDir)}}t.ReadWorkspaceTree=i},5533:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.HelloWorldService=void 0;const n=r(3563);let s=class{getHello(){return"Hello World!"}};t.HelloWorldService=s,t.HelloWorldService=s=o([(0,n.Injectable)()],s)},5534:e=>{"use strict";e.exports=require("@langchain/core/tools")},5562:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.convertEveMessageToGemini=function(e){return{role:"assistant"===e.role?"model":"user",parts:(t=e.segments,t.flatMap((e=>{if("text"===e.type)return{text:e.content};if("thinking"===e.type)return{text:`[Thinking: ${e.content}]`};if("other"===e.type&&"image"===e.metadata?.providerSpecificType){n.default.warn("[GeminiModelClient] Image URL conversion to Gemini format is basic. Expecting base64 data.");const t=e.metadata.url;if(t?.startsWith("data:")){const e=t.split(",");if(2===e.length){const t=e[0].match(/:(.*?);/);if(t&&t[1])return{inlineData:{data:e[1],mimeType:t[1]}}}}return{text:`[Image: ${t||"URL missing"}]`}}return n.default.warn(`[GeminiModelClient] Unsupported segment type: ${e.type}. Converting to text.`),{text:`[Unsupported segment type: ${e.type}] ${e.content}`}})))};var t},t.getMaskedApiKey=function(e){if(!e)return"undefined";if(e.length<=8)return"********";const t=e.substring(0,4),r=e.substring(e.length-4),o=Math.max(0,e.length-8),n="*".repeat(o);return`${t}${n}${r}`};const n=o(r(9055))},5591:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MCPAgentService=void 0;const u=r(3563),f=r(6158),p=r(3470),h=d(r(9055)),m=r(2300),g=r(5277),y=r(9234),v=r(2368),_=r(6910),w=a(r(6928)),k=a(r(9896));let b=class extends g.GraphAgentService{constructor(e,t,r,o){super(e,t,r),this.agentCollaborator=e,this.toolFactoryService=t,this.ruleService=r,this.configService=o}async verifyRequest(e,t){this.mcpDirectory||(this.mcpDirectory=this.initMcpDir()),t.setToolBaseDir(this.mcpDirectory)}initMcpDir(){let e=this.configService.getProperty(_.ConfigPropNames.MCP_SERVERS_DIRECTORY,"~/.hldk/mcp-servers");return e.startsWith("~")&&(e=w.join(process.env.HOME||"",e.substring(1))),this.ensureMcpDirectoryExists(e),e}ensureMcpDirectoryExists(e){try{if(!k.existsSync(e)){k.mkdirSync(e,{recursive:!0}),h.default.info(`Created MCP directory at ${e}`);const t=w.join(e,"mcp-servers.json");k.existsSync(t)||(k.writeFileSync(t,JSON.stringify({mcpServers:{}},null,2)),h.default.info(`Created empty mcp-servers.json file at ${t}`))}}catch(e){h.default.error("Failed to create MCP directory:",e)}}getName(){return"mcp-agent"}async getTools(e){return await this.toolFactoryService.createTools(["list_files","read_file","update_file","delete_file","command_line","mcp_test","fetch_web_page","git_commit","current_timestamp","grep","find_files","serp_api","read_workspace_tree"],e)}async getSystemPrompt(e){this.mcpDirectory||(this.mcpDirectory=this.initMcpDir());const t=(await this.ruleService.getRulesByAgentName(this.getName())).content||"",r=`You are an Expert Software Engineer MCP Server Manager. Your primary purpose is to help users manage their set of Model Context Protocol (MCP) servers in the MCP directory with the precision and attention to detail of a senior software engineer.\n\nIMPORTANT: Always start by reading the mcp-servers.json file to see which servers are currently enabled. All file operations are relative to the MCP directory, so you can simply use "mcp-servers.json" as the file path.\n\nHere is the MCP directory structure:\n${new y.RequestContext({...e.workspace,repoBaseDir:this.mcpDirectory},e.requestId,e.sessionId).repositoryTree()}\n\nThe mcp-servers.json file format:\n{\n  "mcpServers": {\n    "server-name-1": {\n      "command": "/usr/local/bin/npx",\n      "args": ["-y", "package-name"],\n      "env": { "API_KEY": "your-api-key" },\n      "cwd": "/optional/working/directory",\n      "disabled": false\n    },\n    "server-name-2": {\n      "command": "/usr/bin/python",\n      "args": ["-m", "server_module"],\n      "disabled": true\n    }\n  }\n}\n\nIMPORTANT: Always use the full path to executables in the "command" field (e.g., "/usr/local/bin/node" instead of "node", "/usr/bin/python" instead of "python"). Do not assume the executable will be available on the PATH when the server starts. If you're not sure about the location of an executable, use the command_line tool to look it up:\n- On Unix/Mac: command_line({ command: "which node" }) or command_line({ command: "which python" })\n- On Windows: command_line({ command: "where node" }) or command_line({ command: "where python" })\nAlways verify the executable exists at the path before using it in the configuration.\n\nTo disable a server, set the "disabled" property to true in the server's configuration in mcp-servers.json.\nTo enable a server, set "disabled" to false or remove the "disabled" property.\n\nWhat you can do:\n1. List and examine current MCP servers in the mcp-servers.json file\n2. Enable or disable existing MCP servers\n3. Search for MCP servers using SerpApi when users request to install a specific server\n4. Present options for MCP servers based on search results\n5. Help install MCP servers by following these steps:\n   - Clone the git repository to the MCP directory, preserving the original repository name\n   - Configure any necessary environment variables directly in the "env" property in mcp-servers.json\n   - Install dependencies (using pnpm install, pip install, etc.)\n   - Update the mcp-servers.json configuration file\n   - Use the mcp_test tool to verify the server installation and configuration\n   - Inform the user they can ask to "list available tools" to check if the server is working properly\n\n6. Help build new MCP servers when needed or requested\n\nFollow these guidelines when helping users:\n1. When a user asks to install an MCP server:\n   a. First, always use serp_api to search for "MCP server for [what they asked]" or "Model Context Protocol server for [what they asked]"\n   b. Analyze the search results to find GitHub repositories that implement MCP servers\n   c. Present the options to the user with brief descriptions\n   d. Confirm which option they want to install\n   e. If no appropriate server exists, offer to build a new server for them\n\n2. When installing the selected server:\n   a. Clone the repository using git (via command_line), keeping the original repository name unless specifically requested otherwise\n   b. ALWAYS CHECK if required command line tools are installed before proceeding:\n      - Before running any command that requires a specific tool (like git, node, python, etc.), verify if it's available\n      - If a required tool is missing, STOP and explicitly ask the user for permission to install it\n      - Only proceed with installation after receiving explicit user permission\n   c. For repositories containing multiple servers:\n      - Carefully examine the repository structure to identify the specific server the user wants\n      - Focus on one server at a time and only follow the README for that specific server\n      - When using the command_line tool, ALWAYS use the appropriate subDir parameter to ensure you're operating in the correct directory\n      - Example: command_line({ command: "pnpm install", subDir: "path/to/specific/server" })\n   d. Check for installation instructions in README.md or similar files for the SPECIFIC server being installed\n   e. Guide the user through any API key or credential setup\n   f. Follow the installation steps (ALWAYS using pnpm instead of npm)\n   g. When configuring the server in mcp-servers.json, always use the full path to executables in the "command" field (e.g., "/usr/local/bin/node" instead of "node"). You can use the command_line tool with "which [command]" to find the full path on Unix/Mac systems or "where [command]" on Windows systems. Always verify the executable exists before adding it to the configuration. For example:\n      - command_line({ command: "which node" }) // On Unix/Mac\n      - command_line({ command: "where node" }) // On Windows\n   \n   IMPORTANT: Do not forget to run the install command to install the relevant packages (e.g., pnpm install, pip install -r requirements.txt). Failing to install dependencies is a common cause of server startup failures.\n   \n   h. Properly set the "cwd" field in mcp-servers.json to the specific subdirectory where the server is located\n   i. Add any required environment variables to the "env" property in the server's configuration in mcp-servers.json\n   j. Update the mcp-servers.json file with the complete server configuration\n   k. Test the server installation using the mcp_test tool:\n      - Extract the command, args, env, and cwd from the mcp-servers.json configuration\n      - Construct a proper command string from command and args\n      - Use mcp_test({ command: "full command string", envVars: serverConfig.env, workingDir: serverConfig.cwd })\n      - Analyze the output to verify the server returns proper MCP protocol responses\n      - IMPORTANT: DO NOT TRY TO RUN THE COMMAND YOURSELF USING THE COMMAND LINE TOOL OTHERWISE YOU WILL HANG!! Use the test tool. \n   l. Inform the user they can ask to "list available tools" to verify if the server is properly configured\n\n3. To maintain security:\n   a. Always store sensitive information like API keys in the "env" property of the server configuration in mcp-servers.json\n   b. Ensure users understand that the mcp-servers.json file contains sensitive information and should not be shared\n   c. Never commit sensitive information to git\n   d. Explain that the "env" property in mcp-servers.json is used to provide environment variables to the server process\n\n4. Directory management best practices:\n   a. ALWAYS use the subDir parameter with the command_line tool to specify the correct working directory\n   b. When a repository contains multiple servers, carefully identify the correct subdirectory for each server\n   c. Update the "cwd" field in mcp-servers.json to point to the specific subdirectory for each server\n   d. When reading documentation or files, make sure you're looking at the files for the specific server being installed\n   e. Keep track of the current directory context when helping the user\n\n5. When building a new MCP server (if no existing server meets the requirements or if specifically requested):\n   a. First, fetch the MCP server development guide from: https://raw.githubusercontent.com/cyanheads/model-context-protocol-resources/refs/heads/main/guides/mcp-server-development-guide.md\n   b. Read the guide for best practices and implementation details\n   c. Create a new directory in the MCP directory with a descriptive name\n   d. Set up a new Node.js project using TypeScript (recommended for MCP servers)\n   e. Install the MCP SDK: pnpm add @modelcontextprotocol/sdk\n   f. Create the basic server structure according to the guide\n   g. Implement the required tools following the MCP specifications\n   h. Set up proper TypeScript configuration and build scripts\n   i. Create a README.md with clear documentation\n   j. Test the server thoroughly\n   k. Update the mcp-servers.json configuration file to include the new server with appropriate "env" configuration\n\n6. For MCP server implementation details, follow the best practices from the development guide and:\n   a. Use the MCP SDK's registerTool method to register tools\n   b. Properly define input schemas for tools using JSON Schema\n   c. Implement clear error handling with appropriate error messages\n   d. Use async/await for asynchronous operations\n   e. Provide detailed descriptions for all tools\n   f. Follow security best practices for handling credentials\n   g. Access environment variables using process.env which will be populated from the "env" property in mcp-servers.json\n   h. Implement proper logging\n\nThe MCP directory is located at: ${this.mcpDirectory}\n\nIMPORTANT: Since all file operations are already set to work relative to the MCP directory, you don't need to specify the full path when reading, writing, or updating files. For example, use "mcp-servers.json" instead of the full path.\n\nUsing the mcp_test tool:\nThe mcp_test tool allows you to test an MCP server by running through the full Model Context Protocol lifecycle. This is an excellent way to verify that a server is properly installed and configured before letting the user know it's ready to use.\n\nHow to use the mcp_test tool:\n1. Extract the server configuration from mcp-servers.json\n2. Construct the full command string by combining the command with its args\n3. Call the tool with the command, environment variables, and working directory:\n   mcp_test({ \n     command: "full command string", \n     envVars: serverConfig.env, \n     workingDir: serverConfig.cwd \n   })\n4. Analyze the response to check for:\n   - Successful initialization\n   - Server capabilities in the response\n   - No errors or timeout messages\n\nExample:\n\nFor a server configured as:\n{\n  "command": "/usr/local/bin/node",\n  "args": ["server.js"],\n  "env": { "API_KEY": "abc123" },\n  "cwd": "some-server/src"\n}\n\nUse the mcp_test tool with:\nmcp_test({ \n  command: "/usr/local/bin/node server.js", \n  envVars: { "API_KEY": "abc123" }, \n  workingDir: "some-server/src" \n})\n\nThe tool will establish a connection with the server using the MCP protocol, exchange capabilities information, and then gracefully close the connection. This verifies that the server is properly implementing the MCP specification.\n\n${t?`Additional custom rules:\n${t}\n`:""}\n\nGet started by reading the mcp-servers.json file to understand the current MCP server configurations, then help the user with their MCP server management request as an expert software engineer.\n`;return h.default.debug(`MCP Agent system prompt for workspace '${e.workspace.name}' (length: ${r.length} chars)`),r}};t.MCPAgentService=b,t.MCPAgentService=b=i([(0,u.Injectable)(),l(0,(0,u.Inject)((0,u.forwardRef)((()=>m.GraphAgentCollaborator)))),c("design:paramtypes",[m.GraphAgentCollaborator,f.ToolFactoryService,p.AgentRuleService,v.ConfigService])],b)},5610:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ReviewAgentService=void 0;const a=r(3563),c=r(6158),l=r(3470),d=i(r(9055)),u=r(2300),f=r(5277);let p=class extends f.GraphAgentService{constructor(e,t,r){super(e,t,r),this.agentCollaborator=e,this.toolFactoryService=t,this.ruleService=r}getName(){return"review-agent"}async getTools(e){return await this.toolFactoryService.createTools(["read_file","update_file","delete_file","command_line","fetch_web_page","read_dependency_source_tree","read_dependency_source_file","git_commit","remote_git"],e)}async getSystemPrompt(e){let t=`As an AI code review assistant, you are tasked with analyzing and reviewing code changes in a pull request or specific commit.\n  Follow these guidelines:\n  1. The user input will be a URL to a pull request or a specific commit hash.\n  2. Use the "remote-git" toolkit (not implemented yet) to:\n     a. Sync the workspace to match the state of the commit/pull request.\n     b. Fetch the contents of the commit or the pull request (including comments).\n  3. Perform a thorough evaluation of the changes being made, considering:\n     a. Code quality and readability\n     b. Adherence to best practices and design patterns\n     c. Performance implications\n     d. Security considerations\n     e. Potential bugs or issues\n     f. Test coverage\n  4. Use the "remote-git" toolkit to add comments to specific parts of the code where:\n     a. Issues should be pointed out\n     b. Improvements can be suggested\n     c. Clarifications are needed\n  5. Provide a summary of the code changes, including:\n     a. An overview of the main changes\n     b. A list of files modified\n     c. Key points from your review\n     d. Any major concerns or praises\n  6. Use the read_file tool to examine the contents of specific files when needed.\n  7. If you need to reference or compare with existing code, use the read_file tool to retrieve the contents of those files.\n  8. Be constructive and respectful in your comments and feedback.\n  9. Prioritize the most important issues and suggestions in your review.\n  10. Consider the overall impact of the changes on the project's architecture and maintainability.\n\n  Here is the file tree of the system:\n  ${e.repositoryTree()}\n  \n  ${e.repositoryHints()?`Additional hints:\n${e.repositoryHints()}`:""}\n  \n  IMPORTANT: Remember that the "remote-git" toolkit is not implemented yet. When it becomes available, use it to fetch and interact with the pull request or commit data.\n  IMPORTANT: Focus on providing a thorough code review rather than making direct changes to the codebase.\n  IMPORTANT: Ensure your comments and suggestions are clear, specific, and actionable.\n  IMPORTANT: If you need to reference any existing files in the project, use the read_file tool to fetch their contents.\n  `;return d.default.debug(`Review Agent system prompt for workspace '${e.workspace.name}' (length: ${t.length} chars): ${t}`),t}};t.ReviewAgentService=p,t.ReviewAgentService=p=o([(0,a.Injectable)(),s(0,(0,a.Inject)((0,a.forwardRef)((()=>u.GraphAgentCollaborator)))),n("design:paramtypes",[u.GraphAgentCollaborator,c.ToolFactoryService,l.AgentRuleService])],p)},5630:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AnthropicProvider=t.GeminiProvider=void 0;var o=r(1672);Object.defineProperty(t,"GeminiProvider",{enumerable:!0,get:function(){return o.GeminiProvider}});var n=r(209);Object.defineProperty(t,"AnthropicProvider",{enumerable:!0,get:function(){return n.AnthropicProvider}})},5699:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigPropertyRepository=void 0;const c=r(3563),l=(r(1832),a(r(9055))),d=r(1080);let u=o=class{constructor(e){this.knex=e}async getProperty(e){try{const t=await this.knex("config_properties").select("value").where("name",e).first();return t?.value||null}catch(t){return l.default.error(`[${o.name}] Error getting property ${e}`,t),null}}async setProperty(e,t){try{null===t?await this.knex("config_properties").where("name",e).delete():await this.knex("config_properties").insert({name:e,value:t}).onConflict("name").merge()}catch(t){throw l.default.error(`[${o.name}] Error setting property ${e}`,t),t}}async getAllProperties(){try{return(await this.knex("config_properties").select("*")).map((e=>new d.ConfigProperty(e.name,e.value)))}catch(e){return l.default.error(`[${o.name}] Error getting all properties`,e),[]}}async deleteProperty(e){try{await this.knex("config_properties").where("name",e).delete()}catch(t){throw l.default.error(`[${o.name}] Error deleting property ${e}`,t),t}}};t.ConfigPropertyRepository=u,t.ConfigPropertyRepository=u=o=n([(0,c.Injectable)(),i(0,(0,c.Inject)("KNEX")),s("design:paramtypes",[Function])],u)},5702:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ModelRefreshService=void 0;const i=r(3563),a=r(2776),c=r(6206),l=r(8620),d=r(9102),u=s(r(9055));let f=class{constructor(e,t,r,o){this.appDataSource=e,this.providerRegistry=t,this.llmMetadataService=r,this.eveConfigService=o,this.serviceName="ModelRefreshService"}async onModuleInit(){u.default.info(`[${this.serviceName}] Initializing model refresh service...`),await this.refreshAllProvidersModels(),u.default.info(`[${this.serviceName}] Model refresh service initialized`)}async refreshAllProvidersModels(){const e=this.providerRegistry.getAllProviders();u.default.info(`[${this.serviceName}] Refreshing models for ${e.length} providers`);for(const t of e){const e=t.getId();u.default.info(`[${this.serviceName}] Processing provider: ${e}`);await this.refreshProviderModels(e)?u.default.info(`[${this.serviceName}] Successfully refreshed models for provider: ${e}`):u.default.warn(`[${this.serviceName}] Could not refresh models for provider: ${e} - no API key available`)}}async refreshProviderModels(e){return u.default.info(`[${this.serviceName}] Attempting to refresh models for provider: ${e}`),!!await this.refreshWithGlobalApiKey(e)||await this.refreshWithUserApiKey(e)}async refreshWithGlobalApiKey(e){try{const t=this.providerRegistry.getProvider(e),r=await this.getDefaultApiKeyName(e);if(u.default.info(`[${this.serviceName}] Checking for global API key (${r}) for provider: ${e}`),r&&process.env[r]){const o=process.env[r],n=t.getDefaultBaseUrl();return u.default.info(`[${this.serviceName}] Found global API key for provider: ${e}`),await this.llmMetadataService.refreshModelsForProvider(e,o,n),u.default.info(`[${this.serviceName}] Refreshed models for provider ${e} using global API key`),!0}u.default.info(`[${this.serviceName}] No global API key found for provider: ${e}`)}catch(t){u.default.error(`[${this.serviceName}] Failed to refresh models with global API key for provider ${e}: ${t.message}`,t.stack)}return!1}async refreshWithUserApiKey(e){try{u.default.info(`[${this.serviceName}] Looking for user-configured API keys for provider: ${e}`);const t=await this.findUsersWithApiKeys(e);if(t.length>0){const{userId:r,apiKey:o,baseUrl:n}=t[0];return u.default.info(`[${this.serviceName}] Found API key from user ${r} for provider: ${e}`),await this.llmMetadataService.refreshModelsForProvider(e,o,n),u.default.info(`[${this.serviceName}] Refreshed models for provider ${e} using API key from user ${r}`),!0}u.default.info(`[${this.serviceName}] No user-configured API keys found for provider: ${e}`)}catch(t){u.default.error(`[${this.serviceName}] Failed to refresh models with user API key for provider ${e}: ${t.message}`,t.stack)}return!1}async findUsersWithApiKeys(e){return(await this.appDataSource.knex("user_llm_configurations").where("provider_id",e).whereNotNull("api_key").select("user_id","api_key","base_url")).map((e=>({userId:e.user_id,apiKey:e.api_key,baseUrl:e.base_url})))}async getDefaultApiKeyName(e){const t=await this.appDataSource.knex("agent_modes").where("default_provider_id",e).select("default_api_key_secret_name").first();return t?.default_api_key_secret_name}};t.ModelRefreshService=f,t.ModelRefreshService=f=o([(0,i.Injectable)(),n("design:paramtypes",[a.AppDataSource,c.ProviderRegistry,l.LlmMetadataService,d.EveConfigService])],f)},5754:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GitLogEntry=void 0;t.GitLogEntry=class{constructor(e,t,r,o,n){this.hash=e,this.message=r,this.date=t,this.author_name=o,this.author_email=n}}},5762:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.FileSystemEpicRepository=void 0;const l=r(3563),d=a(r(1943)),u=a(r(6928)),f=r(251),p=r(7655),h=r(9615),m=r(4717);let g=class{constructor(e){this.workspaceRepository=e}async getRequirements(e,t){const r=await this.getEpicPath(e,t),o=u.join(r,"requirements.md");try{return await d.readFile(o,"utf-8")}catch(e){throw new Error(`Requirements not found for epic ${t}`)}}async updateRequirements(e,t,r){const o=await this.getEpicPath(e,t),n=u.join(o,"requirements.md");try{return await d.writeFile(n,r),r}catch(e){throw new Error(`Failed to update requirements for epic ${t}`)}}async getEpicsBasePath(e){const t=await this.workspaceRepository.findByName(e);if(!t)throw new l.NotFoundException(`Workspace not found: ${e}`);return u.join(t.repoBaseDir,"epics")}async getEpicPath(e,t){const r=await this.getEpicsBasePath(e);return u.join(r,t)}async findStoryDirectoryNameById(e,t,r){const o=await this.getEpicPath(e,t),n=u.join(o,"stories");try{const e=await d.readdir(n);if(e.includes(r))return r;for(const t of e)try{const e=u.join(n,t,"story.json");if(JSON.parse(await d.readFile(e,"utf-8")).id===r)return t}catch(e){console.error(`Error reading story ${t}:`,e)}throw new l.NotFoundException(`Story with id ${r} not found`)}catch(e){if(e instanceof l.NotFoundException)throw e;throw new l.NotFoundException("Stories directory not found or not accessible")}}async getStoryPath(e,t,r){const o=await this.getEpicPath(e,t),n=await this.findStoryDirectoryNameById(e,t,r);return u.join(o,"stories",n,"story.json")}async getTaskPath(e,t,r,o){const n=await this.getEpicPath(e,t),s=await this.findStoryDirectoryNameById(e,t,r);return u.join(n,"stories",s,"tasks",`${o}.json`)}async ensureDirectoryExists(e){try{await d.mkdir(e,{recursive:!0})}catch(e){if("EEXIST"!==e.code)throw e}}async readTask(e,t,r,o){const n=await this.getTaskPath(e,t,r,o);try{const e=JSON.parse(await d.readFile(n,"utf-8")),t=new h.Task(e.title,e.description,e.status);return t.id=e.id,t.createdAt=new Date(e.createdAt),t.updatedAt=new Date(e.updatedAt),t}catch(e){throw new l.NotFoundException(`Task with id ${o} not found`)}}async writeTask(e,t,r,o){const n=await this.getTaskPath(e,t,r,o.id);await this.ensureDirectoryExists(u.dirname(n)),await d.writeFile(n,JSON.stringify(o,null,2))}async findAllByWorkspace(e){const t=await this.getEpicsBasePath(e);try{await d.access(t)}catch(e){return[]}let r;try{r=await d.readdir(t)}catch(e){return console.error("Error reading epics directory:",e),[]}const o=[];for(const n of r){const r=u.join(t,n),s=u.join(r,"requirements.md");try{const t=await d.readFile(s,"utf-8"),i=t.match(/# (.+?):/),a=t.match(/## Description\s+(.*?)(?=##|$)/s),c=i?i[1].trim():n,l=a?a[1].trim():"",h=u.join(r,"stories"),m=[];try{const e=await d.readdir(h);for(const t of e){const e=u.join(h,t,"story.json"),r=JSON.parse(await d.readFile(e,"utf-8")),o=new p.Story(r.title,r.description,r.acceptanceCriteria,r.status);o.id=r.id,o.createdAt=new Date(r.createdAt),o.updatedAt=new Date(r.updatedAt),m.push(o)}}catch(e){console.log(`No stories directory found for epic ${n}, continuing with empty stories array`)}o.push(new f.Epic(c,l,e,m,n))}catch(e){console.error(`Error reading epic ${n}:`,e)}}return o}async findById(e,t){const r=await this.getEpicPath(e,t);try{await d.access(r)}catch(e){return null}try{const o=u.join(r,"requirements.md"),n=await d.readFile(o,"utf-8"),s=n.match(/# (.+?):/),i=n.match(/## Description\s+(.*?)(?=##|$)/s),a=s?s[1].trim():t,c=i?i[1].trim():"",l=u.join(r,"stories");let h=[];try{const e=await d.readdir(l);for(const t of e)try{const e=u.join(l,t,"story.json"),r=JSON.parse(await d.readFile(e,"utf-8")),o=new p.Story(r.title,r.description,r.acceptanceCriteria,r.status,r.taskIds||[]);o.id=r.id,o.createdAt=new Date(r.createdAt),o.updatedAt=new Date(r.updatedAt),h.push(o)}catch(e){console.error(`Error reading story ${t}:`,e)}}catch(e){console.error("Error reading stories directory:",e)}return new f.Epic(a,c,e,h,t)}catch(e){return console.error(`Error reading epic ${t}:`,e),null}}async create(e){const t=await this.getEpicPath(e.workspaceName,e.id);await this.ensureDirectoryExists(t),await this.ensureDirectoryExists(u.join(t,"stories"));const r=`# ${e.title}:\n\n## Description\n${e.description}\n\n## Goals\n- Add goals here\n`;return await d.writeFile(u.join(t,"requirements.md"),r),e}async update(e){const t=await this.getEpicPath(e.workspaceName,e.id),r=u.join(t,"requirements.md"),o=`# ${e.title}:\n\n## Description\n${e.description}\n\n## Goals\n- Add goals here\n`;return await d.writeFile(r,o),e}async delete(e,t){const r=await this.getEpicPath(e,t);await d.rm(r,{recursive:!0,force:!0})}async addStory(e,t,r){const o=await this.getEpicPath(e,t),n=u.join(o,"stories");await this.ensureDirectoryExists(n);const s=await this.getStoryPath(e,t,r.id);return await this.ensureDirectoryExists(u.dirname(s)),await d.writeFile(s,JSON.stringify(r,null,2)),r}async updateStory(e,t,r){const o=await this.getStoryPath(e,t,r.id);return await d.writeFile(o,JSON.stringify(r,null,2)),r}async deleteStory(e,t,r){const o=await this.getStoryPath(e,t,r),n=u.dirname(o);await d.rm(n,{recursive:!0,force:!0})}async getStory(e,t,r){const o=await this.getStoryPath(e,t,r);try{const e=JSON.parse(await d.readFile(o,"utf-8")),t=new p.Story(e.title,e.description,e.acceptanceCriteria,e.status,e.taskIds||[]);return t.id=e.id,t.createdAt=new Date(e.createdAt),t.updatedAt=new Date(e.updatedAt),t}catch(e){throw new l.NotFoundException(`Story with id ${r} not found`)}}async addTask(e,t,r,o){const n=await this.findById(e,t);if(!n)throw new Error("Epic not found");if(!n.stories.find((e=>e.id===r)))throw new Error("Story not found");return await this.writeTask(e,t,r,o),o}async updateTask(e,t,r,o){const n=await this.findById(e,t);if(!n)throw new Error("Epic not found");if(!n.stories.find((e=>e.id===r)))throw new Error("Story not found");try{await this.readTask(e,t,r,o.id)}catch(e){throw new Error("Task not found")}return await this.writeTask(e,t,r,o),o}async deleteTask(e,t,r,o){const n=await this.findById(e,t);if(!n)throw new Error("Epic not found");if(!n.stories.find((e=>e.id===r)))throw new Error("Story not found");const s=await this.getTaskPath(e,t,r,o);await d.rm(s,{force:!0})}async getTasks(e,t,r){const o=await this.findById(e,t);if(!o)throw new Error("Epic not found");if(!o.stories.find((e=>e.id===r)))throw new Error("Story not found");const n=u.join(await this.getEpicPath(e,t),"stories",r,"tasks");try{const o=await d.readdir(n),s=[];for(const n of o){if(!n.endsWith(".json"))continue;const o=n.replace(".json","");try{const n=await this.readTask(e,t,r,o);s.push(n)}catch(e){console.error(`Error reading task ${o}:`,e)}}return s}catch(e){if("ENOENT"===e.code)return[];throw e}}async getTask(e,t,r,o){return this.readTask(e,t,r,o)}};t.FileSystemEpicRepository=g,t.FileSystemEpicRepository=g=i([(0,l.Injectable)(),c("design:paramtypes",[m.WorkspaceRepository])],g)},5775:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.StoredFileDto=void 0;class r{constructor(e){this.id=e.id,this.originalFilename=e.originalFilename,this.mimeType=e.mimeType,this.createdAt=e.createdAt,this.sessionId=e.sessionId,this.workspaceName=e.workspaceName}static fromStoredFile(e){return new r({id:e.id,originalFilename:e.originalFilename,mimeType:e.mimeType,createdAt:e.createdAt,sessionId:e.sessionId,workspaceName:e.workspaceName})}}t.StoredFileDto=r},5789:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_GEMINI_MODEL_ID=t.GEMINI_PROVIDER_ID=void 0,t.discoverGeminiModels=async function(e,r){n.default.info("[GeminiProvider] Using hardcoded model list (API key presence ignored)");return[{modelId:"gemini-2.5-pro-exp-03-25",providerId:t.GEMINI_PROVIDER_ID,name:"Gemini 2.5 Pro Exp 03-25",contextWindow:1048576,maxOutputTokens:65536,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!1,supportsThinkingTokens:!1,inputCostPerMillionTokens:0,outputCostPerMillionTokens:0,metadata:{description:"Experimental Gemini 2.5 Pro model."}},{modelId:"gemini-2.5-pro-preview-03-25",providerId:t.GEMINI_PROVIDER_ID,name:"Gemini 2.5 Pro Preview 03-25",contextWindow:1048576,maxOutputTokens:65536,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!1,supportsThinkingTokens:!1,inputCostPerMillionTokens:1.25,outputCostPerMillionTokens:10,isDefaultForProvider:!1,metadata:{description:"Preview Gemini 2.5 Pro model."}},{modelId:"gemini-1.5-pro-002",providerId:t.GEMINI_PROVIDER_ID,name:"Gemini 1.5 Pro 002",contextWindow:2097152,maxOutputTokens:8192,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!0,supportsThinkingTokens:!1,inputCostPerMillionTokens:3.5,outputCostPerMillionTokens:10.5,isDefaultForProvider:!0,metadata:{description:"Gemini 1.5 Pro model (version 002)."}},{modelId:"gemini-1.5-flash-002",providerId:t.GEMINI_PROVIDER_ID,name:"Gemini 1.5 Flash 002",contextWindow:1048576,maxOutputTokens:8192,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!0,supportsThinkingTokens:!1,inputCostPerMillionTokens:.35,outputCostPerMillionTokens:1.05,metadata:{description:"Gemini 1.5 Flash model (version 002)."}}]};const n=o(r(9055));t.GEMINI_PROVIDER_ID="gemini",t.DEFAULT_GEMINI_MODEL_ID="gemini-2.5-pro-preview-03-25"},5796:e=>{"use strict";e.exports=require("@langchain/community/vectorstores/chroma")},5814:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.ExecuteCommandToolFactory=void 0;const s=r(3563),i=r(3131);let a=class{constructor(){}getToolName(){return"execute_command"}create(e){return new i.ExecuteCommandTool(e.workingDir)}};t.ExecuteCommandToolFactory=a,t.ExecuteCommandToolFactory=a=o([(0,s.Injectable)(),n("design:paramtypes",[])],a)},5853:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UseMcpToolTool=void 0;const a=r(3563),c=i(r(9055)),l=r(2115);let d=o=class{constructor(e){this.mcpHubService=e,this.name="use_mcp_tool",this.description="Request to use a tool provided by a connected MCP server."}getUsageInstructions(e){return'## use_mcp_tool\nDescription: Request to use a tool provided by a connected MCP server. Each MCP server can provide multiple tools with different capabilities. Tools have defined input schemas that specify required and optional parameters.\nParameters:\n- server_name: (required) The name of the MCP server providing the tool\n- tool_name: (required) The name of the tool to execute\n- arguments: (required) A JSON object containing the tool\'s input parameters, following the tool\'s input schema\nUsage:\n<use_mcp_tool>\n<server_name>server name here</server_name>\n<tool_name>tool name here</tool_name>\n<arguments>\n{\n  "param1": "value1",\n  "param2": "value2"\n}\n</arguments>\n</use_mcp_tool>'}validateParams(e){return"string"==typeof e.server_name&&""!==e.server_name.trim()&&"string"==typeof e.tool_name&&""!==e.tool_name.trim()&&"object"==typeof e.arguments}async execute(e){const{server_name:t,tool_name:r,arguments:n}=e;c.default.info(`[${o.name}] Using MCP tool ${r} on server ${t}`);try{const e=await this.mcpHubService.callTool(t,r,n);return c.default.info(`[${o.name}] MCP tool ${r} executed successfully`),e}catch(e){throw c.default.error(`[${o.name}] Error using MCP tool ${r}: ${e.message}\n${e.stack}`),new Error(`Error using MCP tool ${r}: ${e.message}`)}}};t.UseMcpToolTool=d,t.UseMcpToolTool=d=o=n([(0,a.Injectable)(),s("design:paramtypes",[l.McpHubService])],d)},5862:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AgentRule=void 0;t.AgentRule=class{constructor(e,t,r,o){this.agentName=e,this.content=t,this.createdAt=r,this.updatedAt=o}}},5873:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceModule=void 0;const n=r(3563),s=r(2397),i=r(8474),a=r(4717),c=r(376);let l=class{};t.WorkspaceModule=l,t.WorkspaceModule=l=o([(0,n.Module)({imports:[c.DataSourceModule],controllers:[s.WorkspaceController],providers:[i.WorkspaceService,a.WorkspaceRepository],exports:[i.WorkspaceService,a.WorkspaceRepository]})],l)},5884:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BlockController=void 0;const a=r(3563),c=r(5324),l=r(9668),d=i(r(9055));let u=class{constructor(e,t){this.blockService=e,this.userService=t,this.serviceName="BlockController"}async getBlocksForTask(e,t){try{await this.userService.getCurrentUser(),d.default.debug(`[${this.serviceName}] Received request for blocks of task ${t}`);return await this.blockService.getBlocksForTask(t)}catch(e){if(e instanceof l.AuthenticationError)throw d.default.error(`[${this.serviceName}] Authentication error: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw d.default.error(`[${this.serviceName}] Error in getBlocksForTask endpoint: ${e.message}`,e.stack),e}}async getUsageForTask(e,t){try{await this.userService.getCurrentUser(),d.default.debug(`[${this.serviceName}] Received request for usage data of task ${t}`);return await this.blockService.getUsageForTask(t)}catch(e){if(e instanceof l.AuthenticationError)throw d.default.error(`[${this.serviceName}] Authentication error: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw d.default.error(`[${this.serviceName}] Error in getUsageForTask endpoint: ${e.message}`,e.stack),e}}async getTotalUsageForTask(e,t){try{await this.userService.getCurrentUser(),d.default.debug(`[${this.serviceName}] Received request for total usage data of task ${t}`);return await this.blockService.getTotalUsageForTask(t)}catch(e){if(e instanceof l.AuthenticationError)throw d.default.error(`[${this.serviceName}] Authentication error: ${e.message}`),new a.UnauthorizedException(`Authentication failed: ${e.message}`);throw d.default.error(`[${this.serviceName}] Error in getTotalUsageForTask endpoint: ${e.message}`,e.stack),e}}};t.BlockController=u,o([(0,a.Get)(":taskId/blocks"),s(0,(0,a.Request)()),s(1,(0,a.Param)("taskId")),n("design:type",Function),n("design:paramtypes",[Object,String]),n("design:returntype",Promise)],u.prototype,"getBlocksForTask",null),o([(0,a.Get)(":taskId/blocks/usage"),s(0,(0,a.Request)()),s(1,(0,a.Param)("taskId")),n("design:type",Function),n("design:paramtypes",[Object,String]),n("design:returntype",Promise)],u.prototype,"getUsageForTask",null),o([(0,a.Get)(":taskId/blocks/usage/total"),s(0,(0,a.Request)()),s(1,(0,a.Param)("taskId")),n("design:type",Function),n("design:paramtypes",[Object,String]),n("design:returntype",Promise)],u.prototype,"getTotalUsageForTask",null),t.BlockController=u=o([(0,a.Controller)("eve-agent/task"),n("design:paramtypes",[c.BlockService,l.UserService])],u)},5908:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.SourceArtefactRepository=void 0;const i=r(3563),a=(r(1832),r(8547)),c=r(3563),l=r(9100);let d=class{constructor(e){this.knex=e}async create(e){const t=(0,l.ulid)(),r=e.createdAt?e.createdAt:new Date;return await this.knex("source_artefacts").insert({id:t,...e,createdAt:r}),{id:t,...e}}async findById(e){const t=await this.knex("source_artefacts").where("id",e).first();return t?new a.SourceArtefact(t):null}async update(e,t){return await this.knex("source_artefacts").where("id",e).update(t),this.findById(e)}async delete(e){await this.knex("source_artefacts").where("id",e).delete()}async findBySchemeAndLocator(e,t){const r=await this.knex("source_artefacts").where({scheme:e,locator:t}).first();return r?new a.SourceArtefact(r):null}async query(e,t,r=1,o=10,n="locator",s="ASC"){const i=(r-1)*o;let c=this.knex("source_artefacts");e&&(c=c.where("scheme",e)),t&&(c=c.where("locator","like",`%${t}%`));const[l,d]=await Promise.all([c.clone().orderBy(n,s).limit(o).offset(i),c.clone().count("* as count").first()]);return{items:l.map((e=>new a.SourceArtefact(e))),total:d?.count}}};t.SourceArtefactRepository=d,t.SourceArtefactRepository=d=o([(0,i.Injectable)(),s(0,(0,c.Inject)("KNEX")),n("design:paramtypes",[Function])],d)},5915:e=>{"use strict";e.exports=require("tree-sitter-java")},5996:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AddWorkspace=void 0;const c=r(5534),l=r(1569),d=i(r(9896)),u=i(r(6928)),f=r(5317),p=r(9023),h=a(r(9055)),m=r(1943),g=a(r(3807)),y=(0,p.promisify)(f.exec);class v extends c.Tool{constructor(e,t){super(),this.name="AddWorkspace",this.description="Add a new workspace to the system",this.schema=l.z.object({baseDir:l.z.string().describe("The absolute path to the directory of the workspace (can be a git repo or not)"),name:l.z.string().optional().describe("Optional name of the workspace (no spaces)"),gitRepoUrl:l.z.string().optional().describe("Optional git repository URL to clone into the workspace")}),this.workspaceService=e,this.baseDir=t}async cloneAndCleanGitRepo(e,t){try{h.default.info(`Cloning repository from ${t} to ${e}`),await y(`git clone ${t} ${e} --quiet`),h.default.debug("Repository cloned successfully");const r=u.join(e,".git");d.existsSync(r)&&(h.default.debug(`Removing existing .git directory at ${r}`),await(0,m.rm)(r,{recursive:!0,force:!0}),h.default.debug(".git directory removed successfully")),h.default.info("Initializing new git repository");const o=(0,g.default)(e);await o.init(),h.default.debug("Git repository initialized"),await o.add("."),h.default.debug("Added all files to git"),await o.commit(`initial commit after copying from ${t}`),h.default.info("Created initial commit in new repository")}catch(e){throw h.default.error(`Failed to clone repository: ${e.message}`,e),new Error(`Failed to clone repository: ${e.message}`)}}async _call({baseDir:e,name:t,gitRepoUrl:r}){try{if(h.default.info(`Adding workspace with baseDir: ${e}, name: ${t||"not provided"}, gitRepoUrl: ${r||"not provided"}`),!u.isAbsolute(e))throw h.default.warn(`Base directory is not absolute: ${e}`),new Error(`Base directory must be an absolute path: ${e}`);const o=e;if(h.default.debug(`Full path resolved to: ${o}`),r){h.default.info(`Git repository URL provided, preparing to clone from: ${r}`);const e=u.dirname(o);if(h.default.debug(`Checking parent directory: ${e}`),!d.existsSync(e))throw h.default.error(`Parent directory does not exist: ${e}`),new Error(`Parent directory does not exist: ${e}`);h.default.debug("Parent directory exists, proceeding with clone"),await this.cloneAndCleanGitRepo(o,r)}else{if(h.default.info("No git repository URL provided, checking if directory exists"),!d.existsSync(o))throw h.default.error(`Base directory does not exist: ${o}`),new Error(`Base directory does not exist: ${o}`);h.default.debug("Directory exists, proceeding with workspace creation")}const n=t||u.basename(o);h.default.info(`Creating workspace in database with name: ${n}`),await this.workspaceService.createWorkspace({name:n,repoBaseDir:o,ensureGitRepo:!0}),h.default.debug("Workspace created in database successfully");const s=`Workspace '${n}' added successfully at ${o}${r?" (cloned from git)":""}`;return h.default.info(s),s}catch(e){return h.default.error(`Error adding workspace: ${e.message}`,e),`Error adding workspace: ${e.message}`}}}t.AddWorkspace=v},6002:e=>{function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=()=>[],t.resolve=t,t.id=6002,e.exports=t},6134:e=>{"use strict";e.exports=require("@nestjs/websockets")},6158:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ToolFactoryService=void 0;const a=r(3563),c=r(7602),l=i(r(9055)),d=r(8474),u=r(3153),f=r(7373),p=r(3923),h=r(4970),m=r(7465),g=r(7793),y=r(3765),v=r(5515),_=r(5996),w=r(1781),k=r(7600),b=r(2626),S=r(4911),T=r(3716),O=r(2923),P=r(4500),$=r(42),I=r(9461),E=r(5188),R=r(308),C=r(2900),A=r(5018),M=r(3239),D=r(6696),j=r(7205),x=r(4934),N=r(1983),F=r(4778),L=r(2368),U=r(6910);let B=o=class{constructor(e,t,r,o,n,s,i,a,c){this.mutationsService=e,this.workspaceService=t,this.sourceArtefactService=r,this.sessionService=o,this.summaryCompletion=n,this.datasetRetrievalService=s,this.storedFileService=i,this.mcpToolFactoryService=a,this.configService=c,this.toolMap={update_file:e=>new p.UpdateFile(e.getToolBaseDir(),this.mutationsService,e.sessionId,e.requestId),read_file:e=>new h.ReadFile(e.getToolBaseDir()),read_port_from_file:e=>new g.ReadPortFromFile(e.workspace.portFromBaseDir),delete_file:e=>new m.DeleteFile(e.getToolBaseDir()),command_line:e=>new y.CommandLine(e.getToolBaseDir(),this.summaryCompletion),mcp_test:e=>new A.MCPTest(e.getToolBaseDir()),read_workspace_tree:e=>new v.ReadWorkspaceTree(e.getToolBaseDir()),add_workspace:e=>new _.AddWorkspace(this.workspaceService,e.getToolBaseDir()),fetch_web_page:()=>new w.FetchWebPage(this.summaryCompletion),read_dependency_source_tree:()=>new k.ReadDependencySourceTree(this.sourceArtefactService),read_dependency_source_file:()=>new b.ReadDependencySourceFile(this.sourceArtefactService),git_commit:e=>new S.GitCommit(e.getToolBaseDir(),e.requestId,this.sessionService),git_init:e=>new T.GitInit(e.getToolBaseDir()),current_timestamp:()=>new O.CurrentTimestamp,dataset_retrieval:()=>new P.DatasetRetrieval(this.datasetRetrievalService),docx_to_html:()=>new $.DocxToHtml(this.storedFileService),list_files:e=>new I.ListFiles(e.getToolBaseDir()),grep:e=>new E.Grep(e.getToolBaseDir()),find_files:e=>new R.FindFiles(e.getToolBaseDir()),serp_api:()=>new C.SerpApi(this.configService),computer:()=>{switch(process.platform){case"linux":return new x.ComputerToolLinux;case"darwin":return new N.ComputerToolMac;case"win32":throw new Error("ComputerTool is not supported on Windows yet.");default:throw new Error(`Unsupported platform: ${process.platform}`)}}}}toSnakeCase(e){return e.split(/(?=[A-Z])/).join("_").toLowerCase()}registerTool(e,t){const r=this.toSnakeCase(e);this.toolMap[r]=t,l.default.info(`[${o.name}] Registered new tool: ${r}`)}async createTools(e,t){const r=e.map((e=>{const r=this.toSnakeCase(e),o=this.toolMap[r];if(!o)throw new Error(`Unknown tool: ${e}`);return o(t)}));if(this.configService.getBooleanProperty(U.ConfigPropNames.MCP_SERVERS_ENABLED,!0))try{const e=await this.mcpToolFactoryService.createMcpTools();e.length>0&&(l.default.info(`[${o.name}] Adding ${e.length} MCP tools to the tool list`),r.push(...e))}catch(e){l.default.error(`[${o.name}] Failed to add MCP tools: ${e.message}`)}else l.default.info(`[${o.name}] MCP servers are disabled, skipping MCP tools`);return r}createTool(e,t){const r=this.toSnakeCase(e),o=this.toolMap[r];if(!o)throw new Error(`Unknown tool: ${e}`);return o(t)}async allTools(e){const t=Object.values(this.toolMap).map((t=>t(e)));if(this.configService.getBooleanProperty(U.ConfigPropNames.MCP_SERVERS_ENABLED,!0))try{const e=await this.mcpToolFactoryService.createMcpTools();e.length>0&&(l.default.info(`[${o.name}] Adding ${e.length} MCP tools to all tools list`),t.push(...e))}catch(e){l.default.error(`[${o.name}] Failed to add MCP tools to all tools: ${e.message}`)}else l.default.info(`[${o.name}] MCP servers are disabled, skipping MCP tools in allTools`);return t}async createMcpTools(e){if(!this.configService.getBooleanProperty(U.ConfigPropNames.MCP_SERVERS_ENABLED,!0))return l.default.info(`[${o.name}] MCP servers are disabled, returning empty array`),[];try{return await this.mcpToolFactoryService.createMcpTools()}catch(e){return l.default.error(`[${o.name}] Failed to create MCP tools: ${e.message}`),[]}}};t.ToolFactoryService=B,t.ToolFactoryService=B=o=n([(0,a.Injectable)(),s("design:paramtypes",[c.MutationsService,d.WorkspaceService,u.SourceArtefactService,f.SessionService,M.SummaryCompletion,D.DatasetRetrievalService,j.StoredFileService,F.McpToolFactoryService,L.ConfigService])],B)},6170:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.RulesService=void 0;const u=r(3563),f=c(r(6928)),p=c(r(9896)),h=d(r(9055)),m=r(2141);let g=n=class{constructor(e){this.fileSystemService=e,h.default.info(`[${n.name}] RulesService initialized`)}async getAllRules(e){try{h.default.debug(`[${n.name}] Getting all rules for working directory: ${e}`);const t=[],r=await this.loadRuleFromFile(f.join(e,"hints.md"));r&&(h.default.debug(`[${n.name}] Found hints.md rule`),t.push(r));const o=await this.loadRulesFromDirectory(f.join(e,".clinerules"));o.length>0&&(h.default.debug(`[${n.name}] Found ${o.length} rules in .clinerules directory`),t.push(...o));const s=await this.loadRulesFromDirectory(f.join(e,".everules"));return s.length>0&&(h.default.debug(`[${n.name}] Found ${s.length} rules in .everules directory`),t.push(...s)),t.length>0?(h.default.debug(`[${n.name}] Found ${t.length} rules in total`),this.formatRuleOutput(t)):void h.default.debug(`[${n.name}] No rules found`)}catch(e){return void h.default.error(`[${n.name}] Error getting all rules: ${e.message}\n${e.stack}`)}}async loadRuleFromFile(e){try{if(p.existsSync(e)){return{source:{type:"file",identifier:e},content:p.readFileSync(e,"utf8")}}}catch(t){h.default.error(`[${n.name}] Error loading rule from file ${e}: ${t.message}`)}return null}async loadRulesFromDirectory(e){const t=[];try{if(p.existsSync(e)&&p.statSync(e).isDirectory()){const r=p.readdirSync(e).filter((e=>e.endsWith(".md"))).sort();for(const o of r){const r=f.join(e,o),n=p.readFileSync(r,"utf8");t.push({source:{type:"directory",identifier:r},content:n})}}}catch(t){h.default.error(`[${n.name}] Error loading rules from directory ${e}: ${t.message}`)}return t}async loadRulesFromDatabase(){return[]}formatRuleOutput(e){return e.map((e=>`---- Rules from ${e.source.identifier} ----\n${e.content}\n--------------------------------`)).join("\n\n")}};t.RulesService=g,t.RulesService=g=n=a([(0,u.Injectable)(),l("design:paramtypes",[m.FileSystemService])],g)},6206:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ProviderRegistry=void 0;const i=r(3563),a=s(r(9055));let c=class{constructor(){this.serviceName="ProviderRegistry",this.providers=new Map}onModuleInit(){a.default.info(`[${this.serviceName}] Provider registry initialized`)}registerProvider(e){const t=e.getId();this.providers.set(t,e),a.default.info(`[${this.serviceName}] Registered provider: ${t}`)}getProvider(e){const t=this.providers.get(e);if(!t)throw new Error(`Provider not found: ${e}`);return t}getAllProviders(){return Array.from(this.providers.values())}getAllProviderIds(){return Array.from(this.providers.keys())}};t.ProviderRegistry=c,t.ProviderRegistry=c=o([(0,i.Injectable)(),n("design:paramtypes",[])],c)},6228:e=>{"use strict";e.exports=require("@langchain/openai")},6254:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MessageUtils=void 0;const n=r(1486),s=o(r(9055));class i{static processOutputEvent(e){try{s.default.debug("Processing output event: %s",JSON.stringify(e));let t,r=e?.messages,o="AI",a="No content found";if(!r&&e?.agent?.messages?r=e.agent.messages:!r&&e?.tools?.messages&&(r=e.tools.messages,o="Tool"),r&&Array.isArray(r)&&r.length>0){const c=r[r.length-1];if(!c)return s.default.warn("Last message is undefined or null"),{label:"Unknown",content:"Invalid message format"};if(c instanceof n.ToolMessage||"tool"===c.type){const e=c.name||"Unknown Tool";if(void 0!==c.content){return{label:"Tool",content:`Calling ${e}\nOutput was:\n${i.processContent(c.content)}`}}return s.default.warn("Tool message has undefined content: %s",JSON.stringify(c)),{label:"Tool",content:`Calling ${e}\nOutput was undefined`}}if(c instanceof n.AIMessage)return void 0!==c.content?(a=i.processContent(c.content),t=this.extractUsageMetadata(c),a.trim().length<1?(s.default.warn("AI message has empty content %s",{lastMessage:JSON.stringify(c)}),{label:"AI",content:JSON.stringify(c),usageMetadata:t}):{label:"AI",content:a,usageMetadata:t}):(s.default.warn("AI message has undefined content: %s",JSON.stringify(c)),{label:"AI",content:"AI message content was undefined",usageMetadata:t});if(c instanceof n.HumanMessage)return void 0!==c.content?(a=i.processContent(c.content),o=a.startsWith("Tool:")?"Tool":"Human",{label:o,content:a}):(s.default.warn("Human message has undefined content: %s",JSON.stringify(c)),{label:"Human",content:"Human message content was undefined"});if(c instanceof n.BaseMessage)return void 0!==c.content?(a=i.processContent(c.content),{label:o,content:a}):(s.default.warn("Base message has undefined content: %s",JSON.stringify(c)),{label:o,content:"Base message content was undefined"});try{s.default.warn("Processing unknown output using strings",{output:JSON.stringify(e)});const r=JSON.stringify(c),n=JSON.parse(r);if(n&&"object"==typeof n&&"kwargs"in n&&n.kwargs&&"object"==typeof n.kwargs&&"content"in n.kwargs)return a=n.kwargs.content,t=this.extractUsageMetadata(n),{label:o,content:a,usageMetadata:t}}catch(e){s.default.error("Error parsing message: %s",e)}}return s.default.warn("Processing unknown output: %s",{output:JSON.stringify(e)}),{label:"Unknown",content:JSON.stringify(e)}}catch(t){return s.default.error("Error in processOutputEvent: %s",t),s.default.error("Output that caused error: %s",JSON.stringify(e)),{label:"Error",content:`Error processing output: ${t.message}. See logs for details.`}}}static processContent(e){if(Array.isArray(e))try{return s.default.debug("Processing array content: %s",JSON.stringify(e)),e.filter((e=>e&&"object"==typeof e)).filter((e=>("text"!==e.type||"text"in e||s.default.warn('Found item with type "text" but missing text property: %s',JSON.stringify(e)),"text"===e.type&&"text"in e))).map((e=>e.text||"")).join("\n")}catch(t){return s.default.error("Error processing content array: %s",t),s.default.error("Content that caused error: %s",JSON.stringify(e)),String(e)}return String(e)}static extractUsageMetadata(e){try{if(!e)return void s.default.warn("Cannot extract usage metadata: message is undefined");const t=e.response_metadata?.usage||e.usage_metadata;if(!t)return void s.default.debug("No usage metadata found in message");s.default.debug("Raw usage data: %s",JSON.stringify(t));const r={inputTokens:t.input_tokens||0,cacheWriteTokens:t.cache_creation_input_tokens||0,cacheReadTokens:t.cache_read_input_tokens||0,outputTokens:t.output_tokens||0,totalTokens:t.total_tokens||0};return s.default.info("extractUsageMetadata - usageMetadata: %s",{usageMetadata:JSON.stringify(r)}),r}catch(t){return s.default.error("Error extracting usage metadata: %s",t),void s.default.error("Message that caused error: %s",JSON.stringify(e))}}static buildHumanMessage(e){try{if("string"==typeof e)return new n.HumanMessage(e);if(Array.isArray(e)){if(s.default.debug("Building human message from array content: %s",JSON.stringify(e)),1===e.length&&e[0]&&"object"==typeof e[0]&&"text"===e[0].type&&"text"in e[0])return new n.HumanMessage(e[0].text);const t=e;return new n.HumanMessage({content:t})}{const t=e;return new n.HumanMessage({content:t})}}catch(t){return s.default.error("Error building human message: %s",t),s.default.error("Content that caused error: %s",JSON.stringify(e)),new n.HumanMessage("Error processing message content")}}}t.MessageUtils=i},6268:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ListCodeDefinitionsTool=void 0;const u=r(3563),f=c(r(1943)),p=d(r(9055)),h=c(r(6928)),m=r(873),g=r(9581);let y=n=class{constructor(e,t){this.treeSitterService=t,this.name="list_code_definition_names",this.description="Request to list definition names (classes, functions, methods, etc.) used in source code files.",this.workingDir=e}getUsageInstructions(e){return`## list_code_definition_names\nDescription: Request to list definition names (classes, functions, methods, etc.) used in source code files at the top level of the specified directory. This tool provides insights into the codebase structure and important constructs, encapsulating high-level concepts and relationships that are crucial for understanding the overall architecture.\nParameters:\n- path: (required) The path of the directory (relative to the current working directory ${e.workingDir}) to list top level source code definitions for.\nUsage:\n<list_code_definition_names>\n<path>Directory path here</path>\n</list_code_definition_names>`}validateParams(e){return"string"==typeof e.path&&""!==e.path.trim()}async execute(e){const{path:t}=e;p.default.info(`[${n.name}] Listing code definitions in directory: ${t} relative to ${this.workingDir}`);const r=h.resolve(this.workingDir,t);if(!r.startsWith(this.workingDir)){const e=`Path traversal attempt detected: ${t} resolves outside of workspace ${this.workingDir}`;throw p.default.error(`[${n.name}] ${e}`),new g.FileSystemError(e,"PATH_TRAVERSAL_ERROR")}try{try{await f.stat(r)}catch(e){if("ENOENT"===e.code){const e=`Path not found: ${t}`;throw p.default.error(`[${n.name}] ${e}`),new g.FileNotFoundError(e,t)}throw e}const e=await this.getSourceCodeFiles(r);if(0===e.length)return"No source code files found in the specified path.";const o=await this.extractDefinitions(e);return this.formatDefinitions(o,this.workingDir)}catch(e){if(e instanceof g.FileNotFoundError||e instanceof g.FileSystemError)throw e;const r=`Error listing code definitions in directory ${t}: ${e.message}`;throw p.default.error(`[${n.name}] ${r}\n${e.stack}`),new g.FileSystemError(r,e.code||"FS_LIST_DEFINITIONS_ERROR")}}async getSourceCodeFiles(e){let t;try{t=await f.stat(e)}catch(e){if("ENOENT"===e.code)return[];throw e}if(t.isFile())return this.isSourceCodeFile(e)?[e]:[];if(!t.isDirectory())return[];const r=[];let o;try{o=await f.readdir(e,{withFileTypes:!0})}catch(t){return p.default.warn(`[${n.name}] Error reading directory ${e}: ${t.message}`),[]}for(const t of o){const o=h.join(e,t.name);if(t.isDirectory()){if(this.shouldIgnoreDirectory(t.name))continue;try{const e=await this.getSourceCodeFiles(o);r.push(...e)}catch(e){p.default.warn(`[${n.name}] Error processing subdirectory ${o}: ${e.message}`)}}else t.isFile()&&this.isSourceCodeFile(t.name)&&r.push(o)}return r}isSourceCodeFile(e){const t=h.extname(e).toLowerCase().slice(1);return this.treeSitterService.isExtensionSupported(t)}shouldIgnoreDirectory(e){return["node_modules","dist","build","out",".git",".vscode",".idea","__pycache__","venv","env"].includes(e)}async extractDefinitions(e){const t=new Map;for(const r of e)try{const e=await f.readFile(r,"utf8"),o=this.treeSitterService.parseDefinitions(r,e);o.length>0&&t.set(r,o)}catch(e){p.default.warn(`[${n.name}] Error reading file ${r}: ${e.message}`)}return t}formatDefinitions(e,t){if(0===e.size)return"No definitions found.";let r="";const o=Array.from(e.keys()).sort();for(const n of o){const o=e.get(n)||[];r+=`\n${h.relative(t,n)}:\n`,o.sort();for(const e of o)r+=`  - ${e}\n`}return r.trim()}};t.ListCodeDefinitionsTool=y,t.ListCodeDefinitionsTool=y=n=a([(0,u.Injectable)(),l("design:paramtypes",[String,m.TreeSitterService])],y)},6292:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.PersonaRegistry=void 0;const s=r(3563),i=r(3911);let a=class{constructor(e){this.softwareEngineerPersona=e,this.personas=new Map,this.registerPersona(e)}registerPersona(e){this.personas.set(e.getId(),e)}getPersona(e){const t=this.personas.get(e);return t||this.personas.get("software-engineer")}getAllPersonas(){return Array.from(this.personas.values())}};t.PersonaRegistry=a,t.PersonaRegistry=a=o([(0,s.Injectable)(),n("design:paramtypes",[i.SoftwareEngineerPersona])],a)},6295:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SimpleAgentService=void 0;const i=r(3563),a=r(1412),c=r(8474),l=r(7373),d=r(538),u=r(3239),f=r(9234),p=r(9100),h=s(r(9055)),m=r(4911),g=r(1544),y=r(6254),v=r(6158),_=r(3470);let w=class{constructor(e,t,r,o,n,s){this.workspaceService=e,this.sessionService=t,this.homeService=r,this.summaryCompletion=o,this.toolFactory=n,this.ruleService=s,this.chatModelManager=g.ChatModelManager.getInstance()}async getAgentRules(){const e=await this.ruleService.getRulesByAgentName(this.getName());return e?.content||null}createInitialState(){return{messages:[]}}async*processRequestStream(e){const t=(0,p.ulid)();if(!await this.homeService.isAccessOkay()){const r={label:"Error",content:"Access is not valid. Please check your Eve API key and try again."},o=await this.sessionService.addItem({itemId:this.generateItemId(),sessionId:e.sessionId||this.generateSessionId(),label:r.label,content:r.content,createdAt:new Date,requestId:t});return void(yield o)}const r=new Date;e.sessionId||(e.sessionId=this.generateSessionId());const o=await this.chatModelManager.getModel(e.config,this.getModelCategory(),this.isPrivateModelsOnly());let n;e.workspaceName?n=await this.workspaceService.lockByName(e.workspaceName):(n=await this.workspaceService.lockSessionWorkspace(e.sessionId),e.workspaceName=n.name);const s=n.name,i=new f.RequestContext(n,t,e.sessionId);let c=!1,l=0,d=0,u=0,g=0,v="";try{const n=a.AgentRequest.getFirstTextContent(e.content),s=await this.sessionService.ensureSession(e.workspaceName,e.sessionId,n,this.getName());await this.sessionService.updateSessionStatus(s.sessionId,"active"),h.default.info("%s received request: %s - %s",this.getName(),t,JSON.stringify(e)),h.default.info("Using primary model: %s",o.modelDescriptor.getFullName()),await this.sessionService.addItem({itemId:this.generateItemId(),sessionId:e.sessionId,label:"Human",content:n,createdAt:new Date,requestId:t}),await this.sessionService.addRequest({requestId:t,sessionId:e.sessionId,workspaceName:e.workspaceName,requestContent:n,startedAt:r});const f=await this.handleAppStream(e,i,o);for await(const r of f){h.default.debug("Output Event was: %s",JSON.stringify(r));const n=y.MessageUtils.processOutputEvent(r);h.default.debug("Processed message: %s",n);const s=n.usageMetadata,i=o.calculateCost(s?.inputTokens||0,s?.cacheWriteTokens||0,s?.cacheReadTokens||0,s?.outputTokens||0),a={itemId:this.generateItemId(),sessionId:e.sessionId,label:n.label,content:n.content,createdAt:new Date,inputTokens:s?.inputTokens,cacheWriteTokens:s?.cacheWriteTokens,cacheReadTokens:s?.cacheReadTokens,outputTokens:s?.outputTokens,totalTokens:s?.totalTokens,cost:i,requestId:t},f=await this.sessionService.addItem(a);l+=s?.inputTokens||0,d+=s?.cacheWriteTokens||0,u+=s?.cacheReadTokens||0,g+=s?.outputTokens||0,v=n.content;const p=await this.sessionService.getSession(e.sessionId);if(c=p&&"aborted"===p.status,c){const t={label:"Error",content:"Session was aborted by the user."},r=await this.sessionService.addItem({itemId:this.generateItemId(),sessionId:e.sessionId,label:t.label,content:t.content,createdAt:new Date});yield r;break}yield f}}catch(t){h.default.error("Error in Agent:",t);const r={label:"Error",content:`An error occurred: ${t.message}`},o=await this.sessionService.addItem({itemId:this.generateItemId(),sessionId:e.sessionId,label:r.label,content:r.content,createdAt:new Date});yield o}finally{try{if(!c&&n.isGitRepo){const e=new m.GitCommit(n.repoBaseDir,t,this.sessionService);if(await e.hasUncommittedUpdates()){const t=await e.getUncommittedChanges(),r="Give me a good commit message for the following diff contents - just return the message without quotes",o=await this.summaryCompletion.getSummary(r,t);h.default.info("Detected uncommitted git updates - committing changes with message: "+o),await e._call(o)}}await this.sessionService.updateSessionStatus(e.sessionId,"inactive");const s=o.calculateCost(l,d,u,g),i=new Date,a=i.getTime()-r.getTime(),f=l+d+u+g,p=await this.sessionService.updateRequest(t,{responseContent:v,endedAt:i,tookMillis:a,inputTokens:l,cacheWriteTokens:d,cacheReadTokens:u,outputTokens:g,totalTokens:f,cost:s});await this.homeService.logRequest(p),h.default.info("Agent processing completed in %s seconds - Input tokens: %s, Cache Write tokens: %s, Cache Read tokens: %s, Output tokens: %s, Total tokens: %s, Total cost: £%s",a/1e3,l,d,u,g,f,s.toFixed(6))}finally{s&&await this.workspaceService.unlockByName(s)}}}async processRequest(e){h.default.info("Processing request: %s",JSON.stringify(e));const t=this.processRequestStream(e);let r=null;for await(const e of t)r=e,h.default.info("Yielded item: %s",JSON.stringify(e));if(!r)throw new Error("No items were yielded from the generator");const o=await this.sessionService.getRequest(r?.requestId);if(!o)throw new Error("Failed to retrieve persisted request");return h.default.info("Returning request: %s",JSON.stringify(o)),o}async simpleRequest(e,t,r=null){const o=new a.AgentRequest(null,e,r,null,t);return(await this.processRequest(o)).responseContent}generateSessionId(){return(0,p.ulid)()}generateItemId(){return(0,p.ulid)()}};t.SimpleAgentService=w,t.SimpleAgentService=w=o([(0,i.Injectable)(),n("design:paramtypes",[c.WorkspaceService,l.SessionService,d.HomeService,u.SummaryCompletion,v.ToolFactoryService,_.AgentRuleService])],w)},6297:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.debugLogger=t.DebugLogger=void 0;const c=i(r(9896)),l=i(r(6928)),d=a(r(9055));class u{constructor(){this.enabled=!1;const e=l.join(process.cwd(),"logs","debug");c.existsSync(e)||c.mkdirSync(e,{recursive:!0}),this.logFile=l.join(e,`debug-${Date.now()}.log`),d.default.info(`Debug logger initialized with log file: ${this.logFile}`)}static getInstance(){return u.instance||(u.instance=new u),u.instance}enable(){this.enabled=!0,this.log("Debug logging enabled")}disable(){this.log("Debug logging disabled"),this.enabled=!1}log(e,t){if(!this.enabled)return;const r=`[${(new Date).toISOString()}] ${e}`;if(t){const e="string"==typeof t?t:JSON.stringify(t,null,2);c.appendFileSync(this.logFile,`${r}\n${e}\n\n`)}else c.appendFileSync(this.logFile,`${r}\n`)}dumpObject(e,t){this.enabled&&this.log(`${e}:`,t)}}t.DebugLogger=u,t.debugLogger=u.getInstance()},6308:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.createStateManager=function(){let e=null,t=null,r=null,o=!1,s=!1,i=null,a=!1,c=!1,l="",d=null,u=null,f="",p=!1,h="";return{getCurrentBlockId:()=>e,setCurrentBlockId(t){e=t},getCurrentBlockType:()=>t,setCurrentBlockType(e){t=e},getCurrentTagName:()=>r,setCurrentTagName(e){r=e},isBlockGenerating:()=>o,setBlockGenerating(e){o=e},isInsideXmlTag:()=>s,setInsideXmlTag(e){s=e},getCurrentXmlTagName:()=>i,setCurrentXmlTagName(e){i=e},isInCodeBlock:()=>a,setInCodeBlock(e){a=e},isBuffering:()=>c,setBuffering(e){c=e},getTagBuffer:()=>l,setTagBuffer(e){l=e},appendTagBuffer(e){l+=e},getThinkingContent:()=>d,setThinkingContent(e){d=e},appendThinkingContent(e){null===d?d=e:d+=e},getThinkingSignature:()=>u,setThinkingSignature(e){u=e},getContentBuffer:()=>f,setContentBuffer(e){f=e},appendContentBuffer(e){f+=e},clearContentBuffer(){f=""},isPartialClosingTag:()=>p,setPartialClosingTag(e){p=e},getPartialClosingTagBuffer:()=>h,setPartialClosingTagBuffer(e){h=e},appendPartialClosingTagBuffer(e){h+=e},reset(){n.default.debug("[StateManager] Resetting all state"),e=null,t=null,r=null,o=!1,s=!1,i=null,a=!1,c=!1,l="",d=null,u=null,f="",p=!1,h=""}}};const n=o(r(9055))},6349:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ConversationHistoryService=void 0;const a=r(3563),c=(r(1832),i(r(9055))),l=r(6297),d=r(269);let u=class{constructor(e,t){this.knex=e,this.dbDebugContextService=t}getContentPreview(e,t=50){if(null==e)return"null/undefined";if("string"==typeof e)return e.substring(0,t)+(e.length>t?"...":"");try{const r=JSON.stringify(e);return r.substring(0,t)+(r.length>t?"...":"")}catch(t){return`[Complex object: ${typeof e}]`}}async addMessage(e,t){if(!t.id)throw new Error("MessageInterchange must have an ID set by its creator");if(t.taskId=e,l.debugLogger.log(`[ConversationHistoryService] Adding message for task ${e}, role: ${t.role}, id: ${t.id}`),t.segments&&t.segments.length>0)for(let e=0;e<Math.min(t.segments.length,3);e++){const r=t.segments[e],o=this.getContentPreview(r.content);l.debugLogger.log(`[ConversationHistoryService] Segment ${e+1} type: ${r.type}, content: ${o}`)}try{return await this.dbDebugContextService.runWithContext({operationName:"ConversationHistoryService.addMessage",taskId:e},(async()=>{const r=JSON.stringify(t.segments);return await this.knex("eve_task_messages").insert({id:t.id,taskId:e,role:t.role,segments:r,providerId:t.providerId,providerMetadata:t.providerMetadata?JSON.stringify(t.providerMetadata):null,createdAt:t.createdAt,updatedAt:new Date}),l.debugLogger.log(`[ConversationHistoryService] Successfully added message with ID: ${t.id}`),t.id}))}catch(e){throw l.debugLogger.log(`[ConversationHistoryService] Error adding message: ${e.message}`),c.default.error(`[ConversationHistoryService] Error adding message: ${e.message}`,e.stack),new Error(`Failed to add message: ${e.message}`)}}async getHistory(e){l.debugLogger.log(`[ConversationHistoryService] Fetching history for task: ${e}`);try{return await this.dbDebugContextService.runWithContext({operationName:"ConversationHistoryService.getHistory",taskId:e},(async()=>{const t=await this.knex("eve_task_messages").where({taskId:e}).orderBy("id","asc");l.debugLogger.log(`[ConversationHistoryService] Retrieved ${t.length} messages for task ${e}`);const r=t.map((e=>({id:e.id,taskId:e.taskId,role:e.role,segments:JSON.parse(e.segments),providerId:e.providerId,providerMetadata:e.providerMetadata?JSON.parse(e.providerMetadata):void 0,createdAt:new Date(e.createdAt)})));if(r.length>0){const e=r.slice(-3);for(let t=0;t<e.length;t++){const o=e[t],n=r.length-e.length+t;if(l.debugLogger.log(`[ConversationHistoryService] Message ${n+1}/${r.length}: role=${o.role}, providerId=${o.providerId}`),o.segments&&o.segments.length>0)for(let e=0;e<Math.min(o.segments.length,2);e++){const t=o.segments[e],r=this.getContentPreview(t.content);l.debugLogger.log(`[ConversationHistoryService] Message ${n+1} segment ${e+1} type: ${t.type}, content: ${r}`)}}}else l.debugLogger.log(`[ConversationHistoryService] No history messages found for task ${e}`);return r}))}catch(e){throw l.debugLogger.log(`[ConversationHistoryService] Error retrieving message history: ${e.message}`),c.default.error(`[ConversationHistoryService] Error retrieving message history: ${e.message}`,e.stack),new Error(`Failed to retrieve message history: ${e.message}`)}}async getMessage(e){l.debugLogger.log(`[ConversationHistoryService] Fetching message with ID: ${e}`);try{return await this.dbDebugContextService.runWithContext({operationName:"ConversationHistoryService.getMessage",queryId:e},(async()=>{const t=await this.knex("eve_task_messages").where({id:e}).first();return t?(l.debugLogger.log(`[ConversationHistoryService] Retrieved message with ID ${e}`),{id:t.id,taskId:t.taskId,role:t.role,segments:JSON.parse(t.segments),providerId:t.providerId,providerMetadata:t.providerMetadata?JSON.parse(t.providerMetadata):void 0,createdAt:new Date(t.createdAt)}):(l.debugLogger.log(`[ConversationHistoryService] Message with ID ${e} not found`),null)}))}catch(t){throw l.debugLogger.log(`[ConversationHistoryService] Error retrieving message ${e}: ${t.message}`),c.default.error(`[ConversationHistoryService] Error retrieving message ${e}: ${t.message}`,t.stack),new Error(`Failed to retrieve message: ${t.message}`)}}async deleteTaskMessages(e){l.debugLogger.log(`[ConversationHistoryService] Deleting all messages for task ${e}`);try{await this.dbDebugContextService.runWithContext({operationName:"ConversationHistoryService.deleteTaskMessages",taskId:e},(async()=>{await this.knex("eve_task_messages").where({taskId:e}).delete(),l.debugLogger.log(`[ConversationHistoryService] Deleted all messages for task ${e}`)}))}catch(t){throw l.debugLogger.log(`[ConversationHistoryService] Error deleting messages for task ${e}: ${t.message}`),c.default.error(`[ConversationHistoryService] Error deleting messages for task ${e}: ${t.message}`,t.stack),new Error(`Failed to delete messages: ${t.message}`)}}async getMessagesForProvider(e,t){l.debugLogger.log(`[ConversationHistoryService] Fetching messages for task ${e} and provider ${t}`);try{return await this.dbDebugContextService.runWithContext({operationName:"ConversationHistoryService.getMessagesForProvider",taskId:e},(async()=>{const r=await this.knex("eve_task_messages").where({taskId:e,providerId:t}).orderBy("id","asc");return l.debugLogger.log(`[ConversationHistoryService] Retrieved ${r.length} messages for task ${e} and provider ${t}`),r.map((e=>({id:e.id,taskId:e.taskId,role:e.role,segments:JSON.parse(e.segments),providerId:e.providerId,providerMetadata:e.providerMetadata?JSON.parse(e.providerMetadata):void 0,createdAt:new Date(e.createdAt)})))}))}catch(e){throw l.debugLogger.log(`[ConversationHistoryService] Error retrieving messages for provider: ${e.message}`),c.default.error(`[ConversationHistoryService] Error retrieving messages for provider: ${e.message}`,e.stack),new Error(`Failed to retrieve messages for provider: ${e.message}`)}}};t.ConversationHistoryService=u,t.ConversationHistoryService=u=o([(0,a.Injectable)(),s(0,(0,a.Inject)("KNEX")),n("design:paramtypes",[Function,d.DbDebugContextService])],u)},6387:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AgentLoopOrchestrator=void 0;const c=r(3563),l=r(461),d=r(9100),u=a(r(9055)),f=r(6297),p=r(6550),h=r(6349),m=r(4624),g=r(7403),y=r(9581),v=r(9547),_=r(1280),w=r(5324),k=r(7485),b=r(7438),S=r(6897),T=r(5444),O=r(1623);let P=o=class{constructor(e,t,r,o,n,s,i,a,c){this.taskService=e,this.conversationHistoryService=t,this.eventEmitter=r,this.agentStateManager=o,this.contextTruncationHandler=n,this.fileContentOptimizer=s,this.llmStreamProcessorBlock=i,this.blockService=a,this.providerAdapterRegistry=c,this.setupEventListeners()}setupEventListeners(){this.eventEmitter.on(_.InternalEvents.TOOL_EXECUTION_COMPLETED,(async e=>{await this.handleToolExecutionCompleted(e.taskId,e.clientId,e.blockId,e.toolName,e.result,e.status)}))}async handleToolExecutionCompleted(e,t,r,n,s,i){u.default.info(`[${o.name}] Tool execution completed for tool ${n} with status ${i}`);const a=await this.taskService.getTask(e);if(a.status!==T.TaskStatus.USER_CANCELLED){if("rejected"===i)return await this.taskService.updateTask({taskId:e,status:T.TaskStatus.WAITING_FOR_INPUT,result:JSON.stringify({details:"Tool execution was rejected. Agent is waiting for your input."})}),void u.default.info(`[${o.name}] Task ${e} status set to ${T.TaskStatus.WAITING_FOR_INPUT} after tool rejection.`);"error"===i&&(await this.taskService.updateTask({taskId:e,status:T.TaskStatus.WAITING_FOR_INPUT,result:JSON.stringify({error:`Tool ${n} failed. Agent is waiting for input.`,details:s})}),u.default.info(`[${o.name}] Task ${e} status set to ${T.TaskStatus.WAITING_FOR_INPUT} after tool error.`));try{const r=a.mode||"act",o=await this.conversationHistoryService.getHistory(e);f.debugLogger.log(`[AgentLoopOrchestrator] Reloaded history after tool execution, message count: ${o.length}`),await this.runAgentLoop(e,o,t,r)}catch(t){u.default.error(`[${o.name}] Error handling tool execution completion for task ${e}: ${t.message}`),u.default.error(`[${o.name}] Stack trace: ${t.stack}`)}}else u.default.info(`[${o.name}] Task ${e} is cancelled, not continuing agent loop after tool execution`)}setTaskAborting(e,t){return this.agentStateManager.setTaskAborting(e,t)}isTaskAborting(e){return this.agentStateManager.isTaskAborting(e)}cleanupTask(e){this.agentStateManager.cleanupTask(e)}async runAgentLoop(e,t,r,n){f.debugLogger.log(`Starting agent loop for task ${e} with ${t.length} messages`),f.debugLogger.dumpObject("Current history",t);if((await this.taskService.getTask(e)).status===T.TaskStatus.USER_CANCELLED)return u.default.info(`[${o.name}] Task ${e} is cancelled, not running agent loop`),!1;let s,i=null;const a=(0,d.ulid)();if(this.isTaskAborting(e))return u.default.info(`[${o.name}] Task ${e} is being aborted, stopping agent loop`),!0;if(u.default.info(`[${o.name}] Running agent loop for task ${e} with ${t.length} messages in history`),u.default.info(`[${o.name}] Current mode: ${n}`),t.length>0){const e=t.slice(-3);e.forEach(((r,n)=>{const s=t.length-e.length+n;u.default.info(`[${o.name}] History[${s}] role: ${r.role}`);const i=r.segments.find((e=>"text"===e.type));if(i){const e=i.content.substring(0,100);u.default.info(`[${o.name}] History[${s}] content (first 100 chars): ${e}...`)}r.segments.find((e=>"thinking"===e.type))&&u.default.info(`[${o.name}] History[${s}] has thinking segment`)}))}else u.default.warn(`[${o.name}] No messages in history for task ${e}`);try{u.default.info(`[${o.name}] Running agent loop for task ${e}, mode: ${n}`),await this.taskService.updateTask({taskId:e,status:T.TaskStatus.IN_PROGRESS}),u.default.info(`[${o.name}] Task ${e} status set to ${T.TaskStatus.IN_PROGRESS}`);const c=this.agentStateManager.getOrCreateAbortSignal(e);f.debugLogger.log(`Using abort signal for task ${e}, aborted state: ${c.aborted}`);const l=this.fileContentOptimizer.optimizeFileContent(t);if(u.default.info(`[${o.name}] Optimized conversation history for task ${e}`),f.debugLogger.log(`[AgentLoopOrchestrator] Optimized conversation history for task ${e}, message count: ${l.length}`),l.length>0){const e=l[l.length-1];f.debugLogger.log(`[AgentLoopOrchestrator] Last message role: ${e.role}`);const t=e.segments.find((e=>"text"===e.type));if(t){const r=t.content.substring(0,50)+(t.content.length>50?"...":"");if(f.debugLogger.log(`[AgentLoopOrchestrator] Last message content: ${r}`),"assistant"===e.role){const e=t.content.includes("<thinking>");f.debugLogger.log(`[AgentLoopOrchestrator] Last assistant message has thinking block: ${e}`)}}e.segments.find((e=>"thinking"===e.type))&&f.debugLogger.log("[AgentLoopOrchestrator] Last message has thinking segment")}const d=l.length>0?l[l.length-1]:null;if(d&&"user"===d.role){d.segments.find((e=>"text"===e.type))&&(await this.blockService.createBlock({blockId:d.id,taskId:e,role:"user",blockType:"request",status:"generating",content:""}),u.default.info(`[${o.name}] Created request block ${d.id} for task ${e}`))}f.debugLogger.log(`Calling executeConversationTurn for task ${e}`);const p=await(0,v.retryWithContextTruncation)((()=>this.taskService.executeConversationTurn(e,l,n,c)),(async()=>{const{truncatedHistory:t,removedCount:o}=this.contextTruncationHandler.truncateWithNextStrategy(e,l,r),s=t;return this.taskService.executeConversationTurn(e,s,n)}),{logger:u.default,onRetry:(t,o,n)=>{const s=(0,y.toEveAgentError)(t);this.eventEmitter.emit(_.InternalEvents.TOOL_ERROR,{clientId:r,taskId:e,error:s.toUserMessage(),type:"api_error",code:s.code,context:{attempt:o,willRetryIn:n}})}});this.agentStateManager.resetMistakeCount(e);const h=await this.llmStreamProcessorBlock.processStream(p,e,r,a);if(h.messageInterchange){s=h.messageInterchange;try{await this.conversationHistoryService.addMessage(e,s),u.default.info(`[${o.name}] Saved assistant message ${s.id} for task ${e}`)}catch(t){u.default.error(`[${o.name}] Error saving assistant message for task ${e}: ${t.message}\n${t.stack}`),this.eventEmitter.emit(_.InternalEvents.TOOL_ERROR,{clientId:r,taskId:e,error:`Error saving conversation history: ${t.message}`,type:"database_error"})}}if(h.streamError)throw i=h.streamError,i;const m=await this.blockService.getLastBlockForTask(e);if(m&&"tool_call"===m.blockType){if(u.default.info(`[${o.name}] Detected tool_call block ${m.blockId} for task ${e}, status: ${m.status}, tool: ${m.tagName}`),"finished"===m.status&&!O.RESPONSE_ONLY_TOOLS.includes(m.tagName))return u.default.info(`[${o.name}] Emitting TOOL_CALL_DETECTED for regular tool ${m.tagName}`),this.eventEmitter.emit(_.InternalEvents.TOOL_CALL_DETECTED,{clientId:r,taskId:e,blockId:m.blockId,toolName:m.tagName}),!1;O.RESPONSE_ONLY_TOOLS.includes(m.tagName)?"completed"!==m.status?(u.default.info(`[${o.name}] Updating response-only tool ${m.tagName} block ${m.blockId} status to completed.`),await this.blockService.updateBlock(m.blockId,{status:"completed"})):u.default.info(`[${o.name}] Response-only tool ${m.tagName} block ${m.blockId} already completed.`):u.default.info(`[${o.name}] Tool call block ${m.blockId} has status ${m.status}, not emitting TOOL_CALL_DETECTED.`)}}catch(t){i=t,u.default.error(`[${o.name}] Error in agent loop for task ${e}: ${t.message}\n${t.stack}`);const n=t instanceof y.EveAgentError?t:(0,y.toEveAgentError)(t);return this.eventEmitter.emit(_.InternalEvents.TOOL_ERROR,{clientId:r,taskId:e,error:n.toUserMessage(),type:"task_error",code:n.code,context:n.context}),await this.taskService.updateTask({taskId:e,status:T.TaskStatus.WAITING_FOR_INPUT,result:JSON.stringify({error:n.toUserMessage(),code:n.code})}),!1}u.default.info(`[${o.name}] No tool used for task ${e}. Checking current status before updating.`);return(await this.taskService.getTask(e)).status!==T.TaskStatus.USER_CANCELLED?(u.default.info(`[${o.name}] Task ${e} is not cancelled. Setting status to waiting_for_input.`),await this.taskService.updateTask({taskId:e,status:T.TaskStatus.WAITING_FOR_INPUT,result:JSON.stringify({details:"Agent turn complete. Waiting for your input."})})):u.default.info(`[${o.name}] Task ${e} is already cancelled. Preserving USER_CANCELLED status.`),!1}};t.AgentLoopOrchestrator=P,t.AgentLoopOrchestrator=P=o=n([(0,c.Injectable)(),i(0,(0,c.Inject)((0,c.forwardRef)((()=>p.TaskService)))),s("design:paramtypes",[p.TaskService,h.ConversationHistoryService,l.EventEmitter2,k.AgentStateManager,b.ContextTruncationHandler,g.FileContentOptimizerService,S.LlmStreamProcessorBlock,w.BlockService,m.ProviderAdapterRegistry])],P)},6426:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.generateSummaryTree=g,t.generateAdaptiveTree=function(e,t=[]){if(!c.existsSync(e)||!c.statSync(e).isDirectory())return`Error: ${e} is not a valid directory.`;const r=l.join(e,".eveignore");c.existsSync(r)||(!function(e){const t=["# Binary files","*.jpg","*.jpeg","*.png","*.gif","*.ico","*.svg","*.woff","*.woff2","*.ttf","*.eot","*.otf","*.pdf","*.zip","*.tar","*.gz","*.rar","*.7z","*.exe","*.dll","*.so","*.dylib","","# Build and dependency directories","node_modules/","dist/","build/","bin/","target/",".next/",".nuxt/",".output/","coverage/",".nyc_output/",".cache/",".parcel-cache/",".yarn/","","# IDE and editor files",".idea/",".eve/",".hldk/",".vscode/","*.swp","*.swo","*.swn","*.bak","","# Logs and databases","*.log","*.sqlite","*.sqlite3","*.db","logs/","","# Environment and config files",".env",".env.*","!.env.example",".DS_Store","Thumbs.db"].join("\n"),r=l.join(e,".eveignore");c.writeFileSync(r,t),u.default.info("Created default .eveignore file with common ignore patterns")}(e),t=[]);const o=_(e,t);if(o.length<=h)return o;u.default.warn("Large file tree (%d chars) detected for workspace dir: %s",o.length,e),u.default.warn("A .eveignore file has been created/exists in the root of the repository. You can modify it to control which files are included in the tree sent to the agent");let n,s=f;for(;s>=p;){if(n=g(e,t,s),n.length<=h)return u.default.info("Automatically limited file tree to %d items per dir resulting in a tree of %d chars",s,n.length),n;s-=10}return g(e,t,p)},t.generateTree=_,t.generateTreeRecursive=k;const c=i(r(9896)),l=i(r(6928)),d=a(r(526)),u=a(r(9055)),f=50,p=5,h=3e4,m=3;function g(e,t=[],r=p){if(!c.existsSync(e)||!c.statSync(e).isDirectory())return`Error: ${e} is not a valid directory.`;return v(e,w(e,t),e,"",0,r).trimStart()}function y(e,t,r){const o=c.readdirSync(e).sort(),n={totalFiles:0,totalFolders:0,fileTypes:{}};return o.forEach((o=>{const s=l.join(e,o),i=l.relative(r,s);if(t.ignores(i))return;if(c.statSync(s).isDirectory()){n.totalFolders++;const e=y(s,t,r);n.totalFiles+=e.totalFiles,n.totalFolders+=e.totalFolders,Object.entries(e.fileTypes).forEach((([e,t])=>{n.fileTypes[e]=(n.fileTypes[e]||0)+t}))}else{n.totalFiles++;const e=l.extname(o)||"no-extension";n.fileTypes[e]=(n.fileTypes[e]||0)+1}})),n}function v(e,t,r,o="",n=0,s=p){let i=[];const a=c.readdirSync(e).sort();let d=0,u=0;a.forEach((o=>{const n=l.join(e,o),s=l.relative(r,n);t.ignores(s)||(c.statSync(n).isDirectory()?u++:d++)}));if(n>=m&&d+u>=s){const n=y(e,t,r);i.push(`${o}├── Summary: ${n.totalFiles} files, ${n.totalFolders} folders`),Object.entries(n.fileTypes).sort().forEach((([e,t],r,n)=>{const s=r===n.length-1?"└── ":"├── ",a="no-extension"===e?"files with no extension":`${e} files`;i.push(`${o}│   ${s}${t} ${a}`)}))}else{const d={};a.forEach(((u,f)=>{const p=l.join(e,u),h=l.relative(r,p);if(t.ignores(h))return;const m=c.statSync(p),g=f===a.length-1;if(m.isDirectory())i.push(`${o}${g?"└── ":"├── "}${u}`),i.push(v(p,t,r,o+(g?"    ":"│   "),n+1,s));else{const e=l.extname(u)||"no-extension";d[e]=(d[e]||0)+1,i.push(`${o}${g?"└── ":"├── "}${u}`)}}))}return i.join("\n")}function _(e,t=[]){if(!c.existsSync(e)||!c.statSync(e).isDirectory())return`Error: ${e} is not a valid directory.`;return k(e,w(e,t),e).trimStart()}function w(e,t){const r=(0,d.default)();r.add([".git",".eve",...t]);return[".gitignore",".aiderignore",".clineignore",".cursorignore",".hldkignore",".eveignore"].forEach((t=>{const o=l.join(e,t);if(c.existsSync(o)){const e=c.readFileSync(o,"utf-8");r.add(e)}})),r}function k(e,t,r,o="",n=f){let s=[];const i=c.readdirSync(e).sort();if(i.length>n){const n=y(e,t,r);return s.push(`${o}Summary: ${n.totalFiles} files, ${n.totalFolders} folders`),Object.entries(n.fileTypes).sort().forEach((([e,t],r,n)=>{const i=r===n.length-1?"└── ":"├── ",a="no-extension"===e?"files with no extension":`${e} files`;s.push(`${o}${i}${t} ${a}`)})),s.join("\n")}return i.forEach(((a,d)=>{const u=l.join(e,a),f=l.relative(r,u);if(t.ignores(f))return;const p=d===i.length-1;s.push(`${o}${p?"└── ":"├── "}${a}`),c.statSync(u).isDirectory()&&s.push(k(u,t,r,o+(p?"    ":"│   "),n))})),s.join("\n")}},6511:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ToolCallingScheme=void 0;t.ToolCallingScheme=class{}},6540:e=>{"use strict";e.exports=require("tree-sitter-cpp")},6550:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TaskService=void 0;const f=r(3563),p=r(9100),h=u(r(9055)),m=r(6297),g=c(r(857)),y=r(461),v=r(2776),_=r(269),w=r(5369),k=r(9102),b=r(8010),S=r(2398),T=r(6292),O=r(8615),P=r(538),$=r(6387),I=r(9581),E=r(9547),R=r(8474),C=r(3563),A=r(5444),M=r(1280);let D=n=class{constructor(e,t,r,o,n,s,i,a,c,l,d,u){this.appDataSource=e,this.apiHandlerFactory=t,this.configService=r,this.toolExecutorService=o,this.toolProvider=n,this.mainWorkspaceService=s,this.personaRegistry=i,this.promptBuilderService=a,this.homeService=c,this.eventEmitter=l,this.dbDebugContextService=d,this.agentLoopOrchestrator=u}async createTask(e){const t=(0,p.ulid)();try{return await this.dbDebugContextService.runWithContext({operationName:"TaskService.createTask",taskId:t},(async()=>{const r=(await this.homeService.getUserData()).userId;if(!r)throw new Error("Could not determine authenticated user ID.");let o=null;if(e.workspaceName){const t=await this.mainWorkspaceService.findOne(e.workspaceName);if(!t)throw new C.NotFoundException(`Workspace with name ${e.workspaceName} not found`);o=t.name,h.default.info(`[${n.name}] Found workspace name ${o}`)}return await this.appDataSource.knex("eve_tasks").insert({taskId:t,userId:r,workspaceName:o,prompt:"",personaId:e.personaId||"software-engineer",status:A.TaskStatus.WAITING_FOR_INPUT,totalInputTokens:0,totalOutputTokens:0,createdAt:this.appDataSource.knex.fn.now(),updatedAt:this.appDataSource.knex.fn.now()}),h.default.info(`[${n.name}] Created task ${t} for user ${r}`),t}))}catch(e){throw h.default.error(`[${n.name}] Error creating task: ${e.message}\n${e.stack}`),new Error(`Failed to create task: ${e.message}`)}}async createTaskStep(e){try{const[t]=await this.appDataSource.knex("eve_task_steps").insert({taskId:e.taskId,stepNumber:e.stepNumber,toolName:e.toolName,toolInput:e.toolInput,status:"pending",createdAt:this.appDataSource.knex.fn.now(),updatedAt:this.appDataSource.knex.fn.now()}).returning("id");return h.default.info(`[${n.name}] Created task step ${t} for task ${e.taskId}`),t}catch(e){throw h.default.error(`[${n.name}] Error creating task step: ${e.message}\n${e.stack}`),new Error(`Failed to create task step: ${e.message}`)}}async updateTaskStep(e){try{await this.appDataSource.knex("eve_task_steps").where({taskId:e.taskId,stepNumber:e.stepNumber}).update({toolOutput:e.toolOutput,status:e.status,commitHash:e.commitHash,completedAt:this.appDataSource.knex.fn.now(),updatedAt:this.appDataSource.knex.fn.now()}),h.default.info(`[${n.name}] Updated task step ${e.stepNumber} for task ${e.taskId}`)}catch(e){throw h.default.error(`[${n.name}] Error updating task step: ${e.message}\n${e.stack}`),new Error(`Failed to update task step: ${e.message}`)}}async updateTask(e){m.debugLogger.log(`[${n.name}] Updating task ${e.taskId}`),m.debugLogger.dumpObject("UpdateTask options",e);try{await this.dbDebugContextService.runWithContext({operationName:"TaskService.updateTask",taskId:e.taskId},(async()=>{const t={updatedAt:this.appDataSource.knex.fn.now()};e.status&&(t.status=e.status),void 0!==e.result&&(t.result=e.result),e.mode&&(t.mode=e.mode,h.default.info(`[${n.name}] Updating task ${e.taskId} mode to ${e.mode}`)),e.originalPrompt&&(t.originalPrompt=e.originalPrompt,h.default.info(`[${n.name}] Setting originalPrompt for task ${e.taskId}`)),await this.appDataSource.knex("eve_tasks").where({taskId:e.taskId}).update(t),e.status&&(h.default.info(`[${n.name}] Updated task ${e.taskId} status to ${e.status}`),this.eventEmitter.emit(M.InternalEvents.TASK_UPDATED,{taskId:e.taskId,clientId:null,status:e.status,data:{result:e.result}}),m.debugLogger.log(`[${n.name}] Emitted ${M.InternalEvents.TASK_UPDATED} event for task ${e.taskId} with status ${e.status}`))}))}catch(t){throw h.default.error(`[${n.name}] Error updating task ${e.taskId}: ${t.message}\n${t.stack}`),new Error(`Failed to update task ${e.taskId}: ${t.message}`)}}async getTask(e){try{return await this.dbDebugContextService.runWithContext({operationName:"TaskService.getTask",taskId:e},(async()=>{const t=await this.appDataSource.knex("eve_tasks").where({taskId:e}).first();if(!t)throw new Error(`Task ${e} not found`);return t}))}catch(e){throw h.default.error(`[${n.name}] Error getting task: ${e.message}\n${e.stack}`),new Error(`Failed to get task: ${e.message}`)}}async getTaskSteps(e){try{return await this.appDataSource.knex("eve_task_steps").where({taskId:e}).orderBy("stepNumber","asc")}catch(e){throw h.default.error(`[${n.name}] Error getting task steps: ${e.message}\n${e.stack}`),new Error(`Failed to get task steps: ${e.message}`)}}async getUserTasks(e,t=10,r=0){try{return await this.appDataSource.knex("eve_tasks").where({userId:e}).orderBy("createdAt","desc").limit(t).offset(r)}catch(e){throw h.default.error(`[${n.name}] Error getting user tasks: ${e.message}\n${e.stack}`),new Error(`Failed to get user tasks: ${e.message}`)}}async getNextStepNumber(e){try{const t=await this.appDataSource.knex("eve_task_steps").where({taskId:e}).max("stepNumber as maxStep").first();return(t?.maxStep||0)+1}catch(e){throw h.default.error(`[${n.name}] Error getting next step number: ${e.message}\n${e.stack}`),new Error(`Failed to get next step number: ${e.message}`)}}async executeConversationTurn(e,t,r,o){try{h.default.debug(`[${n.name}] Executing conversation turn for task ${e} in ${r} mode with ${t.length} messages`);const s=await this.getTask(e);let i;h.default.debug(`[${n.name}] Task details: ${JSON.stringify({id:s.taskId,userId:s.userId,workspaceName:s.workspaceName,personaId:s.personaId,status:s.status})}`);const a=s.workspaceName;if(!a)throw new Error(`Task ${e} has no associated workspace name.`);{const t=await this.mainWorkspaceService.findOne(a);if(!t)throw new C.NotFoundException(`Workspace '${a}' not found when executing conversation turn for task ${e}`);i=t.repoBaseDir}h.default.debug(`[${n.name}] Working directory: ${i}`);const c=await this.homeService.getUserData();h.default.debug(`[${n.name}] User data: ${JSON.stringify({userId:s.userId,email:c.email})}`);const l={workingDir:i,user:{userId:s.userId,email:c.email},osInfo:{platform:g.platform(),release:g.release(),homeDir:g.homedir(),shell:process.env.SHELL||"/bin/bash"},currentMode:r,currentTime:(new Date).toISOString()};h.default.debug(`[${n.name}] Created system context with mode: ${r}`);const d=this.personaRegistry.getPersona(s.personaId),u=d.getToolNames(),f=this.toolProvider.getTools(u,l),p=await this.promptBuilderService.buildPersonaSystemPrompt(d,f,l);if(h.default.debug(`[${n.name}] Built system prompt with length: ${p.length} characters`),"true"===process.env.DEBUG_LOG_FULL_SYSTEM_PROMPT)h.default.debug(`[${n.name}] Full System Prompt:\n${p}`);else{const e=p.substring(0,200),t=p.substring(p.length-200);h.default.debug(`[${n.name}] System prompt start: ${e}...`),h.default.debug(`[${n.name}] System prompt end: ...${t}`)}const y=await this.configService.assembleFinalConfiguration(s.userId,r);h.default.debug(`[${n.name}] Assembled configuration for mode ${r}: ${JSON.stringify({providerId:y.providerId,modelId:y.modelId,hasApiKey:!!y.apiKey,hasBaseUrl:!!y.baseUrl,thinkingTokens:y.thinkingTokens})}`),m.debugLogger.dumpObject("[TaskService] Final Assembled Configuration:",y);const v={providerName:y.providerId,model:y.modelId,baseUrl:y.baseUrl,apiKey:y.apiKey,thinkingTokens:y.thinkingTokens};h.default.debug(`[${n.name}] Using API config for mode: ${r}`);const _=await this.apiHandlerFactory.buildApiHandler(v);return h.default.debug(`[${n.name}] Using ${t.length} messages for provider ${y.providerId}`),await(0,E.retryApiOperation)((async()=>{try{if(h.default.debug(`[${n.name}] Calling API handler generateResponse with ${t.length} messages`),t.length>0){const e=t[t.length-1];if(h.default.debug(`[${n.name}] Last message role: ${e.role}`),e.segments&&e.segments.length>0){const t=e.segments[0];h.default.debug(`[${n.name}] Last message first segment type: ${t.type}`),h.default.debug(`[${n.name}] Last message first segment content (first 100 chars): ${t.content.substring(0,100)}...`)}else h.default.warn(`[${n.name}] Last message has no segments`);e.providerMetadata&&h.default.debug(`[${n.name}] Last message has provider metadata for ${e.providerId}`)}else h.default.warn(`[${n.name}] No messages provided to API handler for task ${e}`);return _.generateResponse(p,t,e,o)}catch(t){const r=(0,I.toEveAgentError)(t);throw h.default.error(`[${n.name}] API error during conversation turn for task ${e}: ${r.code} - ${r.message}`,{taskId:e,errorCode:r.code,errorContext:r.context,retriable:r.retriable}),r}}),{maxRetries:3,initialDelayMs:1e3,maxDelayMs:1e4,logger:h.default,onRetry:(t,r,o)=>{const s=(0,I.toEveAgentError)(t);h.default.warn(`[${n.name}] Retrying API call for task ${e} after error: ${s.code} (attempt ${r}, delay: ${o}ms)`)}})}catch(t){const r=(0,I.toEveAgentError)(t);throw h.default.error(`[${n.name}] Failed to execute conversation turn for task ${e}: ${r.code} - ${r.message}`,{taskId:e,errorDetails:r.toJSON()}),r}}};t.TaskService=D,t.TaskService=D=n=a([(0,f.Injectable)(),d(11,(0,f.Inject)((0,f.forwardRef)((()=>$.AgentLoopOrchestrator)))),l("design:paramtypes",[v.AppDataSource,w.ApiHandlerFactory,k.EveConfigService,b.ToolExecutorService,S.ToolProvider,R.WorkspaceService,T.PersonaRegistry,O.PromptBuilderService,P.HomeService,y.EventEmitter2,_.DbDebugContextService,$.AgentLoopOrchestrator])],D)},6552:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.DatasetModule=void 0;const n=r(3563),s=r(376),i=r(2251),a=r(8077),c=r(7184),l=r(6932),d=r(8460),u=r(6696),f=r(7967);let p=class{};t.DatasetModule=p,t.DatasetModule=p=o([(0,n.Module)({imports:[s.DataSourceModule,f.ConfigModule],controllers:[i.DatasetController],providers:[a.DatasetService,c.DatasetRepository,l.DatasetDocumentRepository,d.DatasetIndexingService,u.DatasetRetrievalService],exports:[a.DatasetService,u.DatasetRetrievalService]})],p)},6566:e=>{"use strict";e.exports=require("xml2js")},6595:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TaskEventHandler=void 0;const a=r(3563),c=i(r(9055)),l=r(6297),d=r(461),u=r(6550),f=r(6349),p=r(9100),h=r(6963),m=r(1280),g=r(5444),y=r(8474);let v=o=class{constructor(e,t,r,o,n){this.taskService=e,this.conversationHistoryService=t,this.agentLoopOrchestrator=r,this.eventEmitter=o,this.mainWorkspaceService=n}async handleUserPrompt(e,t){c.default.info(`[${o.name}] Processing userPrompt for task ${e.taskId} from client ${t.id}`);try{const r=await this.taskService.getTask(e.taskId),n=r.workspaceName;if(r.status===g.TaskStatus.USER_CANCELLED&&(c.default.info(`[${o.name}] Restarting previously cancelled task ${e.taskId} with new prompt`),await this.taskService.updateTask({taskId:e.taskId,status:g.TaskStatus.WAITING_FOR_INPUT,result:JSON.stringify({details:"Task restarted with new prompt"})}),c.default.info(`[${o.name}] Task ${e.taskId} status updated from USER_CANCELLED to WAITING_FOR_INPUT`)),n){c.default.info(`[${o.name}] Task ${e.taskId} has workspaceName: ${n}. Validating...`);if(!await this.mainWorkspaceService.findOne(n))throw c.default.error(`[${o.name}] Workspace details not found for name: ${n}, although it was set in the task.`),new a.NotFoundException(`Workspace with name ${n} not found during user prompt handling.`);c.default.info(`[${o.name}] Workspace ${n} validated. Path resolution will occur in TaskService.`)}else c.default.info(`[${o.name}] Task ${e.taskId} does not have a workspaceName associated.`);await this.taskService.updateTask({taskId:e.taskId,mode:e.mode}),c.default.info(`[${o.name}] Updated task ${e.taskId} mode to ${e.mode}`);const s={id:(0,p.ulid)(),taskId:e.taskId,role:"user",segments:[{type:"text",content:e.prompt}],providerId:"system",createdAt:new Date};await this.conversationHistoryService.addMessage(e.taskId,s),c.default.info(`[${o.name}] Added user message with prompt: ${e.prompt.substring(0,100)}...`);(await this.taskService.getTask(e.taskId)).status===g.TaskStatus.WAITING_FOR_INPUT&&c.default.info(`[${o.name}] Task ${e.taskId} was waiting for user input. Agent loop will set status to IN_PROGRESS.`);const i=await this.conversationHistoryService.getHistory(e.taskId);if(c.default.info(`[${o.name}] Loaded updated history with ${i.length} messages`),t.join(e.taskId),c.default.info(`[${o.name}] Client ${t.id} joined room ${e.taskId}`),i.length>0){const e=i.slice(-3);e.forEach(((t,r)=>{const n=i.length-e.length+r;c.default.info(`[${o.name}] History[${n}] role: ${t.role}`);const s=t.segments.find((e=>"text"===e.type));if(s){const e=s.content.substring(0,100);c.default.info(`[${o.name}] History[${n}] content (first 100 chars): ${e}...`)}}))}c.default.info(`[${o.name}] Passing MessageInterchange history directly to agent loop.`),await this.agentLoopOrchestrator.runAgentLoop(e.taskId,i,t.id,e.mode)}catch(r){c.default.error(`[${o.name}] Error handling userPrompt for task ${e.taskId}: ${r.message}\n${r.stack}`),this.eventEmitter.emit(m.InternalEvents.TOOL_ERROR,{clientId:t.id,taskId:e.taskId,error:r.message,type:"task_error",context:{source:"userPrompt"}})}}async handleCreateTask(e,t){c.default.info(`[${o.name}] Processing createTask message from client: ${t.id}`);try{const r=await this.taskService.createTask(e);t.join(r),c.default.info(`[${o.name}] Client ${t.id} joined room ${r}`),this.eventEmitter.emit(m.InternalEvents.TASK_CREATED,{clientId:t.id,taskId:r,status:g.TaskStatus.WAITING_FOR_INPUT,data:{taskId:r}})}catch(e){c.default.error(`[${o.name}] Error creating task: ${e.message}\n${e.stack}`),this.eventEmitter.emit(m.InternalEvents.TOOL_ERROR,{clientId:t.id,taskId:"unknown",error:e.message,type:"task_error",context:{source:"createTask"}})}}async handleCreateTaskStep(e,t){c.default.info(`[${o.name}] Processing createTaskStep message from client: ${t.id}`);try{const t=await this.taskService.createTaskStep(e);c.default.info(`[${o.name}] Created task step ${t} for task ${e.taskId}. Task status remains unchanged.`)}catch(r){c.default.error(`[${o.name}] Error creating task step: ${r.message}\n${r.stack}`),this.eventEmitter.emit(m.InternalEvents.TOOL_ERROR,{clientId:t.id,taskId:e.taskId,error:r.message,type:"task_error",context:{source:"createTaskStep"}})}}async handleUpdateTaskStep(e,t){c.default.info(`[${o.name}] Processing updateTaskStep message from client: ${t.id}`);try{await this.taskService.updateTaskStep(e),c.default.info(`[${o.name}] Updated task step ${e.stepNumber} for task ${e.taskId}. Task status remains unchanged.`)}catch(r){c.default.error(`[${o.name}] Error updating task step: ${r.message}\n${r.stack}`),this.eventEmitter.emit(m.InternalEvents.TOOL_ERROR,{clientId:t.id,taskId:e.taskId,error:r.message,type:"task_error",context:{source:"updateTaskStep"}})}}async handleUpdateTask(e,t){c.default.warn(`[${o.name}] handleUpdateTask called directly. This might be deprecated. Task status should be managed by AgentLoopOrchestrator.`),c.default.info(`[${o.name}] Processing updateTask message from client: ${t.id}`);try{await this.taskService.updateTask(e),this.eventEmitter.emit(m.InternalEvents.TASK_UPDATED,{clientId:t.id,taskId:e.taskId,status:e.status,data:{result:e.result}})}catch(r){c.default.error(`[${o.name}] Error updating task: ${r.message}\n${r.stack}`),this.eventEmitter.emit(m.InternalEvents.TOOL_ERROR,{clientId:t.id,taskId:e.taskId,error:r.message,type:"task_error",context:{source:"updateTask"}})}}async handleCancelTask(e,t){c.default.info(`[${o.name}] Processing cancelTask message for task ${e.taskId} from client ${t.id}`),c.default.info(`[${o.name}] Cancellation reason: ${e.reason||"No reason provided"}`),l.debugLogger.log(`Received cancelTask for task ${e.taskId} from client ${t.id}`),l.debugLogger.dumpObject("CancelTask payload",e),l.debugLogger.log(`Setting task ${e.taskId} to aborting state`);const r=this.agentLoopOrchestrator.setTaskAborting(e.taskId,!0);r?l.debugLogger.log(`AbortSignal created for task ${e.taskId}, aborted state: ${r.aborted}`):l.debugLogger.log(`No AbortSignal returned for task ${e.taskId}`),l.debugLogger.log(`Using block-based tool call handling for task ${e.taskId}`);try{l.debugLogger.log(`[TaskService] Updating task ${e.taskId} with status USER_CANCELLED due to cancellation`),l.debugLogger.dumpObject("UpdateTask options",{taskId:e.taskId,status:g.TaskStatus.USER_CANCELLED,result:JSON.stringify({details:e.reason||"Task cancelled by user"})}),await this.taskService.updateTask({taskId:e.taskId,status:g.TaskStatus.USER_CANCELLED,result:JSON.stringify({details:e.reason||"Task cancelled by user"})}),l.debugLogger.log(`[TaskService] Emitted agent.task.updated event for task ${e.taskId} with status USER_CANCELLED`),l.debugLogger.log(`Sending ${m.NotificationEvents.TASK_STATUS_UPDATED} event to room ${e.taskId}`),l.debugLogger.dumpObject("TaskStatusUpdated payload",{clientId:t.id,taskId:e.taskId,status:g.TaskStatus.USER_CANCELLED,data:{reason:e.reason||"Task cancelled by user"}}),this.eventEmitter.emit(m.InternalEvents.TASK_UPDATED,{clientId:t.id,taskId:e.taskId,status:g.TaskStatus.USER_CANCELLED,data:{reason:e.reason||"Task cancelled by user"}}),c.default.info(`[${o.name}] Task ${e.taskId} cancelled successfully`),l.debugLogger.log(`Task ${e.taskId} cancelled successfully`)}catch(r){l.debugLogger.log(`Error updating task status for cancelled task ${e.taskId}: ${r.message}`),c.default.error(`[${o.name}] Error updating task status for cancelled task ${e.taskId}: ${r.message}\n${r.stack}`),this.eventEmitter.emit(m.InternalEvents.TASK_UPDATED,{clientId:t.id,taskId:e.taskId,status:g.TaskStatus.USER_CANCELLED,data:{reason:"Task cancelled, but failed to update task status in DB"}}),this.eventEmitter.emit(m.InternalEvents.TOOL_ERROR,{clientId:t.id,taskId:e.taskId,error:r.message,type:"task_error",context:{source:"cancelTask"}})}l.debugLogger.log(`Cleaning up resources for task ${e.taskId}`),this.agentLoopOrchestrator.cleanupTask(e.taskId),l.debugLogger.log(`Resources cleaned up for task ${e.taskId}`)}};t.TaskEventHandler=v,t.TaskEventHandler=v=o=n([(0,a.Injectable)(),s("design:paramtypes",[u.TaskService,f.ConversationHistoryService,h.AgentLoopOrchestrator,d.EventEmitter2,y.WorkspaceService])],v)},6610:e=>{"use strict";e.exports=require("is-zip")},6647:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TaskHistoryService=void 0;const i=r(3563),a=r(2776),c=s(r(9055)),l=r(9100),d=r(269);let u=class{constructor(e,t){this.appDataSource=e,this.dbDebugContextService=t}async getTaskSummaries(e,t=4){try{return await this.dbDebugContextService.runWithContext({operationName:"TaskHistoryService.getTaskSummaries"},(async()=>{const r=await this.appDataSource.knex("eve_tasks").where({userId:e}).where("totalInputTokens",">",0).select("taskId","originalPrompt as prompt","totalInputTokens as tokensIn","totalOutputTokens as tokensOut","createdAt as timestamp","mode").orderBy("createdAt","desc").limit(t);return c.default.debug(`Retrieved ${r.length} task summaries with non-zero input tokens for user ${e}`),r}))}catch(t){throw c.default.error(`Error getting task summaries for user ${e}: ${t.message}`,t.stack),new Error(`Failed to get task summaries: ${t.message}`)}}async getTaskEvents(e,t){try{return await this.dbDebugContextService.runWithContext({operationName:"TaskHistoryService.getTaskEvents",taskId:e},(async()=>{if(!await this.appDataSource.knex("eve_tasks").where({taskId:e,userId:t}).first())throw new i.UnauthorizedException("Not authorized to access this task");const r=await this.appDataSource.knex("eve_task_events").where({taskId:e}).orderBy("eventId","asc").select("eventId","eventType","payload","createdAt as timestamp"),o=r.map((e=>({...e,payload:JSON.parse(e.payload)})));return c.default.debug(`Retrieved ${r.length} events for task ${e}`),o}))}catch(t){if(t instanceof i.UnauthorizedException)throw t;throw c.default.error(`Error getting events for task ${e}: ${t.message}`,t.stack),new Error(`Failed to get task events: ${t.message}`)}}async persistEvent(e,t,r,o=1){try{return await this.dbDebugContextService.runWithContext({operationName:"TaskHistoryService.persistEvent",taskId:e},(async()=>{const o=(0,l.ulid)();await this.appDataSource.knex.transaction((async n=>{if(!await n("eve_tasks").where({taskId:e}).first("taskId"))throw new Error(`Cannot persist event: Task ${e} not found`);await n("eve_task_events").insert({eventId:o,taskId:e,eventType:t,payload:JSON.stringify(r),createdAt:n.fn.now()})})),c.default.debug(`Persisted ${t} event ${o} for task ${e}`)}))}catch(n){if(n.message.includes("database is locked")&&o<3){const n=100*Math.pow(2,o);return c.default.warn(`[TaskHistoryService] Database locked when persisting event, retrying in ${n}ms (attempt ${o})`),await new Promise((e=>setTimeout(e,n))),this.persistEvent(e,t,r,o+1)}c.default.error(`Failed to persist ${t} event for task ${e}: ${n.message}`,{taskId:e,eventType:t,error:n.stack})}}async trackApiUsage(e,t,r=1){try{return await this.dbDebugContextService.runWithContext({operationName:"TaskHistoryService.trackApiUsage",taskId:e},(async()=>{if(!e||"string"!=typeof e)throw new Error("Invalid taskId provided");const r=t.inputTokens||0,o=t.outputTokens||0;if("number"!=typeof r||"number"!=typeof o)throw new Error("Invalid token counts provided");await this.appDataSource.knex.transaction((async t=>{if(0===await t("eve_tasks").where({taskId:e}).increment({totalInputTokens:r,totalOutputTokens:o}).update({updatedAt:t.fn.now()}))throw new Error(`Task ${e} not found when updating token counts`)})),c.default.debug(`Updated token counts for task ${e}: +${r} input, +${o} output`)}))}catch(o){if(o.message.includes("database is locked")&&r<3){const o=100*Math.pow(2,r);return c.default.warn(`[TaskHistoryService] Database locked when tracking API usage, retrying in ${o}ms (attempt ${r})`),await new Promise((e=>setTimeout(e,o))),this.trackApiUsage(e,t,r+1)}c.default.error(`Failed to update token counts for task ${e}: ${o.message}`,{taskId:e,error:o.stack,usageInfo:t})}}};t.TaskHistoryService=u,t.TaskHistoryService=u=o([(0,i.Injectable)(),n("design:paramtypes",[a.AppDataSource,d.DbDebugContextService])],u)},6651:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MCPController=void 0;const u=r(3563),f=r(2368),p=r(6910),h=a(r(6928)),m=a(r(9896)),g=d(r(9055));let y=class{constructor(e){this.configService=e}getMcpDirectory(){let e=this.configService.getProperty(p.ConfigPropNames.MCP_SERVERS_DIRECTORY,"~/.eve/mcp-servers");return e.startsWith("~")&&(e=h.join(process.env.HOME||"",e.substring(1))),e}ensureMcpDirectoryExists(e){try{if(!m.existsSync(e)){m.mkdirSync(e,{recursive:!0}),g.default.info(`Created MCP directory at ${e}`);const t=h.join(e,"mcp-servers.json");m.existsSync(t)||(m.writeFileSync(t,JSON.stringify({mcpServers:{}},null,2)),g.default.info(`Created empty mcp-servers.json file at ${t}`))}}catch(e){throw g.default.error("Failed to create MCP directory:",e),new Error(`Failed to create MCP directory: ${e.message}`)}}async getMcpConfig(){try{const e=this.getMcpDirectory();this.ensureMcpDirectoryExists(e);const t=h.join(e,"mcp-servers.json"),r=m.readFileSync(t,"utf8");return JSON.parse(r)}catch(e){throw g.default.error("Failed to get MCP config:",e),new Error(`Failed to get MCP config: ${e.message}`)}}async updateMcpConfig(e){try{const t=this.getMcpDirectory();this.ensureMcpDirectoryExists(t);const r=h.join(t,"mcp-servers.json");return m.writeFileSync(r,JSON.stringify(e,null,2)),g.default.info("Updated MCP config at "+r),{success:!0}}catch(e){throw g.default.error("Failed to update MCP config:",e),new Error(`Failed to update MCP config: ${e.message}`)}}async toggleServerDisabled(e){try{const t=this.getMcpDirectory();this.ensureMcpDirectoryExists(t);const r=h.join(t,"mcp-servers.json"),o=m.readFileSync(r,"utf8"),n=JSON.parse(o);if(!n.mcpServers||!n.mcpServers[e])throw new Error(`Server '${e}' not found`);return n.mcpServers[e].disabled=!n.mcpServers[e].disabled,m.writeFileSync(r,JSON.stringify(n,null,2)),g.default.info(`Toggled disabled state for MCP server '${e}' to ${n.mcpServers[e].disabled}`),{success:!0,serverName:e,disabled:n.mcpServers[e].disabled}}catch(t){throw g.default.error(`Failed to toggle disabled state for MCP server '${e}':`,t),new Error(`Failed to toggle disabled state: ${t.message}`)}}};t.MCPController=y,i([(0,u.Get)("config"),c("design:type",Function),c("design:paramtypes",[]),c("design:returntype",Promise)],y.prototype,"getMcpConfig",null),i([(0,u.Put)("config"),l(0,(0,u.Body)()),c("design:type",Function),c("design:paramtypes",[Object]),c("design:returntype",Promise)],y.prototype,"updateMcpConfig",null),i([(0,u.Post)("servers/:serverName/toggle-disabled"),l(0,(0,u.Param)("serverName")),c("design:type",Function),c("design:paramtypes",[String]),c("design:returntype",Promise)],y.prototype,"toggleServerDisabled",null),t.MCPController=y=i([(0,u.Controller)("mcp"),c("design:paramtypes",[f.ConfigService])],y)},6654:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n(function_declaration\n  name: (identifier) @name.definition.function) @definition.function\n\n(method_declaration\n  name: (field_identifier) @name.definition.method) @definition.method\n\n(type_declaration\n  (type_spec\n    name: (type_identifier) @name.definition.type\n    type: (struct_type))) @definition.struct\n\n(type_declaration\n  (type_spec\n    name: (type_identifier) @name.definition.type\n    type: (interface_type))) @definition.interface\n"},6695:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.ComputerUseAgentService=void 0;const i=r(3563),a=r(3470),c=r(5277),l=r(6158),d=r(2300),u=r(8884);let f=class extends c.GraphAgentService{constructor(e,t,r){super(e,t,r),this.agentCollaborator=e,this.toolFactoryService=t,this.ruleService=r}getName(){return"computer-use-agent"}async getTools(e){return await this.toolFactoryService.createTools(["computer"],e)}async getSystemPrompt(e){const t=process.platform,r="win32"===t?"Windows":"darwin"===t?"macOS":"Linux",o=(0,u.getEnv)("WIDTH"),n=(0,u.getEnv)("HEIGHT");if(!o||!n)throw new Error("Screen resolution environment variables WIDTH and HEIGHT must be set");return`\n    You are a Computer Use Agent specializing in controlling the computer through keyboard and mouse automation. Your task is to help users achieve their goals by controlling the computer interface using the computer tool.\n\n    WORKSPACE INFORMATION:\n    Current operating system: ${r}\n    Screen resolution: ${o}x${n} pixels\n\n    AVAILABLE COMPUTER TOOL FUNCTIONS:\n\n    1. Keyboard Control:\n       - key: Send keyboard key events\n         * Use for special keys and key combinations\n         * Examples: "enter", "tab", "ctrl+c", "shift+a"\n       - type: Type text directly\n         * Use for entering regular text\n         * More reliable than individual key presses for text input\n         * Example: {"action": "type", "text": "Hello World"}\n\n    2. Mouse Control:\n       - mouse_move: Move mouse cursor to specific coordinates\n         * Requires x,y coordinates within screen bounds\n         * Example: {"action": "mouse_move", "coordinate": [100, 200]}\n       - left_click: Click the left mouse button\n         * Use after positioning the cursor\n         * For basic selection and activation\n       - right_click: Click the right mouse button\n         * Use for context menus\n         * Position cursor first\n       - middle_click: Click the middle mouse button\n         * Special functions in some applications\n       - double_click: Double click at current position\n         * Use for opening files/folders\n         * More reliable than two separate clicks\n       - left_click_drag: Click and drag operation\n         * For selections and drag-drop\n         * Requires target coordinates\n         * Example: {"action": "left_click_drag", "coordinate": [300, 400]}\n\n    3. Screen Information:\n       - screenshot: Capture the current screen\n         * Use to verify current state\n         * Helps in debugging automation\n       - cursor_position: Get current mouse coordinates\n         * Use to verify cursor location\n         * Helpful for planning movements\n\n    OPERATIONAL GUIDELINES:\n\n    1. Coordinate System:\n       - Screen coordinates start at (0,0) in top-left corner\n       - X increases right (0 to ${o}), Y increases down (0 to ${n})\n       - All coordinates must stay within screen bounds (0 ≤ x ≤ ${o}, 0 ≤ y ≤ ${n})\n\n    2. Best Practices:\n       - Always verify cursor position before clicking\n       - Use type action for text input when possible\n       - Add small delays between actions if needed\n       - Break complex operations into simple steps\n       - Verify results with screenshots when needed\n\n    3. Safety Considerations:\n       - Avoid rapid mouse movements\n       - Verify coordinates before drag operations\n       - Be cautious with double-clicks\n       - Allow time for system response\n\n    IMPORTANT REMINDERS:\n    1. NEVER guess about what is on the screen - always take a screenshot first to examine the current state\n    2. Take screenshots after performing actions to verify they had the intended effect\n    3. All coordinates must be within screen bounds\n    4. Always verify current state before critical actions\n    5. Use the most appropriate function for each task\n    6. Break complex tasks into simple, verifiable steps\n    7. Consider user confirmation for critical operations\n    8. Remember that screen layout may vary by system\n    9. Be prepared to handle unexpected states\n    10. NEVER assume we need to wait for an operation to complete - if the expected result is not visible in the screenshot, assume the operation did not work\n    \n    WORKFLOW REQUIREMENTS:\n    1. Before making any plan:\n       - Take a screenshot to understand the current state\n       - Analyze the screenshot to identify UI elements and their locations\n       - Only proceed once you have clear visual confirmation of the interface\n    \n    2. After performing actions:\n       - Take another screenshot to verify the results\n       - Compare with expected outcome\n       - If results don't match expectations, adjust your approach\n       \n    3. For complex operations:\n       - Break down into smaller steps\n       - Verify each step with a screenshot before proceeding\n       - Document any unexpected behavior or states`}};t.ComputerUseAgentService=f,t.ComputerUseAgentService=f=o([(0,i.Injectable)(),s(0,(0,i.Inject)((0,i.forwardRef)((()=>d.GraphAgentCollaborator)))),n("design:paramtypes",[d.GraphAgentCollaborator,l.ToolFactoryService,a.AgentRuleService])],f)},6696:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DatasetRetrievalService=void 0;const a=r(3563),c=r(2368),l=i(r(9055)),d=r(8077),u=r(7310),f=r(5796);let p=o=class{constructor(e,t){this.configService=e,this.datasetService=t,this.embeddingsModel=process.env.EMBEDDINGS_MODEL||"Xenova/all-mpnet-base-v2",this.chromaUrl=process.env.CHROMA_URL||"http://localhost:8000"}async searchDataset(e,t,r=20,n=void 0){try{l.default.info(`[${o.name}] Searching dataset ${e} for: ${t}`),l.default.info(`[${o.name}] Initializing embeddings model: ${this.embeddingsModel}`);const s=new u.HuggingFaceTransformersEmbeddings({modelName:this.embeddingsModel}),i=new f.Chroma(s,{collectionName:e,url:this.chromaUrl});if(!n){const n=await i.similaritySearch(t,r);return l.default.info(`[${o.name}] Found ${n.length} matches in dataset ${e}`),n}const a=await this.datasetService.getAllDatasets().then((t=>t.find((t=>t.name===e))));if(!a)throw new Error(`Dataset ${e} not found`);const c=await this.datasetService.getDocuments(a.id),d=c.map((e=>(l.default.info(`[${o.name}] Searching for ${t} in document ${e.id}`),i.similaritySearch(t,n,{original_document_id:{$eq:e.id}})))),p=(await Promise.all(d)).flat();l.default.info(`[${o.name}] Found ${p.length} matches in dataset ${e} - before deduplication`),l.default.debug(`[${o.name}] Combined results: ${JSON.stringify(p)}`);const h=p.filter(((e,t,r)=>r.findIndex((t=>t.metadata.id===e.metadata.id))===t));return l.default.info(`[${o.name}] Found ${h.length} total matches across ${c.length} documents in dataset ${e}`),p}catch(t){throw l.default.error(`[${o.name}] Failed to search dataset ${e}`),l.default.error(`[${o.name}] Error details: ${t.message}`),t.stack&&l.default.error(`[${o.name}] Stack trace: ${t.stack}`),t}}};t.DatasetRetrievalService=p,t.DatasetRetrievalService=p=o=n([(0,a.Injectable)(),s("design:paramtypes",[c.ConfigService,d.DatasetService])],p)},6780:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.parseToolParams=function(e,t){n.default.debug(`[parseToolParams] Attempting to parse XML for tool: ${t}`),n.default.debug(`[parseToolParams] Raw content:\n${e}`);const r={};try{const o=new RegExp(`<${t}\\s*>([\\s\\S]*?)<\\/${t}\\s*>`,"i"),s=e.match(o);if(!s||"string"!=typeof s[1])return n.default.warn(`[parseToolParams] Could not extract inner content for tool ${t}. Regex did not match.`),null;{const e=s[1].trim();n.default.debug(`[parseToolParams] Extracted inner content:\n${e}`);const o=/<([a-zA-Z_][a-zA-Z0-9_-]*)\s*>([\s\S]*?)<\/\1\s*>/g;let i,a=!1;for(;null!==(i=o.exec(e));){const e=i[1],t=i[2].trim();r[e]=t,n.default.debug(`[parseToolParams] Found param: ${e} = "${t}"`),a=!0}a||n.default.warn(`[parseToolParams] No parameters found within the inner content for tool ${t}.`)}}catch(e){return n.default.error(`[parseToolParams] Error parsing tool params for ${t}: ${e.message}\n${e.stack}`),null}return r};const n=o(r(9055))},6808:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.HelloWorldModule=void 0;const n=r(3563),s=r(5096),i=r(5533);let a=class{};t.HelloWorldModule=a,t.HelloWorldModule=a=o([(0,n.Module)({controllers:[s.HelloWorldController],providers:[i.HelloWorldService]})],a)},6823:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.WriteToFileToolFactory=void 0;const s=r(3563),i=r(6946);let a=class{constructor(){}getToolName(){return"write_to_file"}create(e){return new i.WriteToFileTool(e.workingDir)}};t.WriteToFileToolFactory=a,t.WriteToFileToolFactory=a=o([(0,s.Injectable)(),n("design:paramtypes",[])],a)},6844:e=>{"use strict";e.exports=require("tree-sitter-typescript")},6897:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.LlmStreamProcessorBlock=void 0;const c=r(3563),l=r(461),d=r(1623),u=a(r(9055)),f=r(6297),p=r(6550),h=r(7485),m=r(5324),g=r(6349),y=r(1280);let v=o=class{constructor(e,t,r,o,n){this.taskService=e,this.eventEmitter=t,this.agentStateManager=r,this.blockService=o,this.conversationHistoryService=n}async processStream(e,t,r,n){f.debugLogger.log(`Starting to process LLM stream for task ${t} with block-based communication`);let s,i,a=null,c=0,l=0,d=null;const p=this.agentStateManager.getAbortSignal(t);if(p?.aborted)return u.default.info(`[${o.name}] Task ${t} already aborted before stream processing`),a=new Error("Task aborted before stream processing"),{streamError:a,providerId:s,messageInterchange:i};try{u.default.info(`[${o.name}] Starting to process LLM stream for task ${t}`);s=(await this.taskService.getTask(t)).providerId,u.default.info(`[${o.name}] Provider for task ${t}: ${s}`);let n=0,h=!1;try{for await(const s of e){if(this.agentStateManager.isTaskAborting(t)||p?.aborted){if(u.default.info(`[${o.name}] Task ${t} is being aborted, stopping stream processing at chunk ${n}`),d)try{const e=await this.blockService.getBlock(d);e&&"generating"===e.status&&(await this.blockService.updateBlock(d,{status:"error",errorText:"Generation cancelled by user"}),u.default.info(`[${o.name}] Updated block ${d} to error due to cancellation`))}catch(e){u.default.error(`[${o.name}] Error updating current block ${d} during cancellation: ${e.message}`)}try{const e=await this.blockService.getLastBlockForTask(t);e&&"request"===e.blockType&&(await this.blockService.updateBlock(e.blockId,{status:"error",errorText:"Task cancelled by user"}),u.default.info(`[${o.name}] Updated request block ${e.blockId} status to error due to task cancellation`))}catch(e){u.default.error(`[${o.name}] Error updating request block for cancelled task ${t}: ${e.message}\n${e.stack}`)}break}if(!h)try{const e=await this.blockService.getLastBlockForTask(t);e&&"request"===e.blockType&&(await this.blockService.updateBlock(e.blockId,{status:"finished"}),u.default.info(`[${o.name}] Updated request block ${e.blockId} status to finished`)),h=!0}catch(e){u.default.error(`[${o.name}] Error updating request block: ${e.message}`),h=!0}n++,f.debugLogger.dumpObject(`Processing chunk ${n} for task ${t}`,s);try{if("block"===s.type)await this.handleBlockChunk(s,t,r),d=s.block.blockId;else if("blockUpdate"===s.type){const e=s;if(!e.blockId)throw u.default.error(`[${o.name}] Received blockUpdate without blockId for task ${t}`),new Error(`Received blockUpdate without blockId for task ${t}`);const n=e.blockId;await this.handleBlockUpdateChunk(e,n,t,r)}else if("usage"===s.type)await this.handleUsageChunk(s,t),s.inputTokens&&(c=s.inputTokens),s.outputTokens&&(l=s.outputTokens);else if("messageInterchange"===s.type){const e=s;u.default.info(`[${o.name}] Received messageInterchange chunk for task ${t}`),i=e.messageInterchange,i.taskId=t}}catch(e){u.default.error(`[${o.name}] Error processing stream chunk for task ${t}: ${e.message}\n${e.stack}`)}}if(d)try{const e=await this.blockService.getBlock(d);e&&"finished"!==e.status&&(await this.blockService.updateBlock(d,{status:"finished"}),u.default.info(`[${o.name}] Finalized block ${d} for task ${t}`))}catch(e){u.default.warn(`[${o.name}] Could not finalize block ${d} for task ${t}: ${e.message}`)}}catch(e){a=e,u.default.error(`[${o.name}] LLM stream processing error for task ${t}: ${e.message}\n${e.stack}`),this.eventEmitter.emit(y.InternalEvents.TOOL_ERROR,{taskId:t,clientId:r,error:e.message,type:"api_error",context:{stack:e.stack}})}finally{(c>0||l>0)&&(u.default.info(`[${o.name}] Final token counts for task ${t}: Input=${c}, Output=${l}`),await this.blockService.trackUsage({taskId:t,inputTokens:c,outputTokens:l}).catch((e=>{u.default.error(`[${o.name}] Failed to track final API usage for task ${t}: ${e.message}`,{taskId:t,error:e.stack})})))}}catch(e){a=e,u.default.error(`[${o.name}] Outer error in processStream for task ${t}: ${e.message}\n${e.stack}`)}return{streamError:a,providerId:s,messageInterchange:i}}async handleBlockChunk(e,t,r){if(u.default.debug(`[${o.name}] Creating new block for task ${t}`),!e.block.blockId){const e=`Received block without blockId for task ${t}`;throw u.default.error(`[${o.name}] ${e}`),new Error(e)}const n=await this.blockService.createBlock({blockId:e.block.blockId,taskId:t,role:"assistant",blockType:e.block.blockType,tagName:e.block.tagName,status:e.block.status,content:e.block.content||""});return u.default.debug(`[${o.name}] Created block ${n.blockId} for task ${t}`),n}async handleBlockUpdateChunk(e,t,r,n){if(u.default.debug(`[${o.name}] Updating block ${t} for task ${r}`),!e.blockId){const e=`Received blockUpdate without blockId for task ${r}`;throw u.default.error(`[${o.name}] ${e}`),new Error(e)}if(e.blockId!==t){const n=`BlockUpdate blockId (${e.blockId}) does not match expected blockId (${t}) for task ${r}`;throw u.default.error(`[${o.name}] ${n}`),new Error(n)}e.appendContent&&await this.blockService.appendToBlockContent(t,e.appendContent);const s={};e.newStatus&&(s.status=e.newStatus),e.newBlockType&&(s.blockType=e.newBlockType),e.newTagName&&(s.tagName=e.newTagName),e.output&&(s.output=e.output),e.errorText&&(s.errorText=e.errorText),Object.keys(s).length>0&&(await this.blockService.updateBlock(t,s),"finished"===e.newStatus&&"tool_call"===e.newBlockType&&e.newTagName&&d.RESPONSE_ONLY_TOOLS.includes(e.newTagName)&&(await this.blockService.updateBlock(t,{status:"completed"}),u.default.info(`[${o.name}] Auto-completed response-only tool ${e.newTagName} for block ${t}`))),u.default.debug(`[${o.name}] Updated block ${t} for task ${r}`)}async handleUsageChunk(e,t){u.default.info(`[${o.name}] Tracking usage for task ${t}: ${e.inputTokens} input tokens, ${e.outputTokens} output tokens`),await this.blockService.trackUsage({taskId:t,inputTokens:e.inputTokens,outputTokens:e.outputTokens,cacheWriteTokens:e.cacheWriteTokens,cacheReadTokens:e.cacheReadTokens,totalCost:e.totalCost})}};t.LlmStreamProcessorBlock=v,t.LlmStreamProcessorBlock=v=o=n([(0,c.Injectable)(),i(0,(0,c.Inject)((0,c.forwardRef)((()=>p.TaskService)))),s("design:paramtypes",[p.TaskService,l.EventEmitter2,h.AgentStateManager,m.BlockService,g.ConversationHistoryService])],v)},6910:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigPropNames=void 0;class r{}t.ConfigPropNames=r,r.EVE_API_KEY="EVE_API_KEY",r.GOOGLE_API_KEY="GOOGLE_API_KEY",r.DEFAULT_CODING_MODEL="DEFAULT_CODING_MODEL",r.DEFAULT_REASONING_MODEL="DEFAULT_REASONING_MODEL",r.DEFAULT_SUMMARISATION_MODEL="DEFAULT_SUMMARISATION_MODEL",r.DEFAULT_RAG_QUERY_MODEL="DEFAULT_RAG_QUERY_MODEL",r.DEFAULT_ORCHESTRATION_MODEL="DEFAULT_ORCHESTRATION_MODEL",r.DEFAULT_ARCHITECT_MODEL="DEFAULT_ARCHITECT_MODEL",r.PRIVATE_CODING_MODEL="PRIVATE_CODING_MODEL",r.PRIVATE_REASONING_MODEL="PRIVATE_REASONING_MODEL",r.PRIVATE_SUMMARISATION_MODEL="PRIVATE_SUMMARISATION_MODEL",r.PRIVATE_RAG_QUERY_MODEL="PRIVATE_RAG_QUERY_MODEL",r.PRIVATE_ORCHESTRATION_MODEL="PRIVATE_ORCHESTRATION_MODEL",r.PRIVATE_ARCHITECT_MODEL="PRIVATE_ARCHITECT_MODEL",r.AGENT_RECURSION_LIMIT="AGENT_RECURSION_LIMIT",r.AGENT_ITERATION_LIMIT="AGENT_ITERATION_LIMIT",r.AGENT_SYSTEM_PROMPT="MAX_SYSTEM_PROMPT_LENGTH",r.OLLAMA_BASE_URL="OLLAMA_BASE_URL",r.MCP_SERVERS_ENABLED="MCP_SERVERS_ENABLED",r.MCP_SERVERS_DIRECTORY="MCP_SERVERS_DIRECTORY",r.VALUE_PER_LINE="VALUE_PER_LINE",r.ANTHROPIC_API_KEY="ANTHROPIC_API_KEY",r.OPENAI_API_KEY="OPENAI_API_KEY",r.GROQ_API_KEY="GROQ_API_KEY",r.HYPERBOLIC_API_KEY="HYPERBOLIC_API_KEY",r.MISTRAL_API_KEY="MISTRAL_API_KEY",r.OPENROUTER_API_KEY="OPENROUTER_API_KEY",r.GLHF_API_KEY="GLHF_API_KEY",r.DEEPSEEK_API_KEY="DEEPSEEK_API_KEY",r.SERP_API_KEY="SERP_API_KEY",r.MODE="MODE"},6928:e=>{"use strict";e.exports=require("path")},6932:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DatasetDocumentRepository=void 0;const i=r(3563);r(1832);let a=class{constructor(e){this.knex=e}async findAll(e){return this.knex("datasetDocuments").where("datasetId",e).select("*")}async findById(e){return this.knex("datasetDocuments").where("id",e).first()}async create(e){await this.knex("datasetDocuments").insert(e)}async update(e,t){const r={...t,updatedAt:new Date};await this.knex("datasetDocuments").where("id",e).update(r)}async delete(e){await this.knex("datasetDocuments").where("id",e).delete()}async updateStatus(e,t){await this.knex("datasetDocuments").where("id",e).update({status:t,updatedAt:new Date})}};t.DatasetDocumentRepository=a,t.DatasetDocumentRepository=a=o([(0,i.Injectable)(),s(0,(0,i.Inject)("KNEX")),n("design:paramtypes",[Function])],a)},6946:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.WriteToFileTool=void 0;const u=r(3563),f=c(r(1943)),p=d(r(9055)),h=c(r(6928)),m=r(9581);let g=n=class{constructor(e){this.name="write_to_file",this.description="Request to write content to a file at the specified path.",this.workingDir=e}getFailureHandlingSuggestion(e){return e>=3?`The 'write_to_file' tool has failed ${e} times consecutively. Check that the path is valid and within the workspace, and that you have permission to write to the file. Also ensure that the content is properly formatted and doesn't contain any invalid characters.`:null}getUsageInstructions(e){return`## write_to_file\nDescription: Request to write content to a file at the specified path. If the file exists, it will be overwritten with the provided content. If the file doesn't exist, it will be created. This tool will automatically create any directories needed to write the file.\nParameters:\n- path: (required) The path of the file to write to (relative to the current working directory ${e.workingDir})\n- content: (required) The content to write to the file. ALWAYS provide the COMPLETE intended content of the file, without any truncation or omissions. You MUST include ALL parts of the file, even if they haven't been modified.\nUsage:\n<write_to_file>\n<path>File path here</path>\n<content>\nYour file content here\n</content>\n</write_to_file>`}validateParams(e){return"string"==typeof e.path&&""!==e.path.trim()&&"string"==typeof e.content}async execute(e){const{path:t,content:r}=e;p.default.info(`[${n.name}] Writing to file: ${t} relative to ${this.workingDir}`);const o=h.resolve(this.workingDir,t);if(!o.startsWith(this.workingDir)){const e=`Path traversal attempt detected: ${t} resolves outside of workspace ${this.workingDir}`;throw p.default.error(`[${n.name}] ${e}`),new m.FileSystemError(e,"PATH_TRAVERSAL_ERROR")}try{const e=h.dirname(o);return await f.mkdir(e,{recursive:!0}),await f.writeFile(o,r,"utf8"),p.default.info(`[${n.name}] File ${t} written successfully`),`File ${t} written successfully`}catch(e){const r=`Error writing to file ${t}: ${e.message}`;throw p.default.error(`[${n.name}] ${r}\n${e.stack}`),new m.FileSystemError(r,e.code||"FS_WRITE_ERROR")}}};t.WriteToFileTool=g,t.WriteToFileTool=g=n=a([(0,u.Injectable)(),l("design:paramtypes",[String])],g)},6963:function(e,t,r){"use strict";var o=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),n=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||o(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.LlmStreamProcessorBlock=void 0,n(r(7485),t),n(r(7438),t),n(r(6387),t);const s=r(6897);Object.defineProperty(t,"LlmStreamProcessorBlock",{enumerable:!0,get:function(){return s.LlmStreamProcessorBlock}})},6982:e=>{"use strict";e.exports=require("crypto")},7001:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createPatternUtils=function(){return{findOpeningTag(e){const t=[...o.TOOL_CALL_TAGS,...o.THINKING_TAGS].join("|"),r=new RegExp(`^\\s*<(${t})>`),n=e.match(r);if(n){const t=n.index,r=n[0],o=n[1];return{found:!0,tagName:o,index:e.indexOf(`<${o}>`,t),content:r}}return{found:!1}},findClosingTag(e,t){const r=`</${t}>`,o=e.indexOf(r);if(-1!==o){const t=o>0&&"\n"===e[o-1],n=t?o-1:o,s=t?`\n${r}`:r;return{found:!0,contentBefore:e.substring(0,n),closingTag:s,contentAfter:e.substring(o+r.length),index:n}}return{found:!1}},findPartialTagAtEnd(e){const t=e.match(/<([a-zA-Z0-9_]+)$/);if(t&&e.endsWith(t[0])){const r=e.substring(0,t.index);return{found:!0,partialTag:t[0],contentBefore:r,index:t.index}}return{found:!1}},findPartialClosingTagAtEnd(e,t){if(!t)return{found:!1};const r=e.lastIndexOf("</");if(-1===r)return{found:!1};const o=e.slice(r+2);return o.includes(">")?{found:!1}:t.startsWith(o)?{found:!0,contentBefore:e.slice(0,r),partialTag:e.slice(r)}:{found:!1}},isKnownTag:e=>[...o.TOOL_CALL_TAGS,...o.THINKING_TAGS].includes(e),findCodeBlockStart(e){const t=e.indexOf("```");return-1!==t?{found:!0,index:t,content:e.substring(t)}:{found:!1}},findCodeBlockEnd(e){const t=e.indexOf("```");if(-1!==t){const r=e.substring(0,t),o=e.substring(t+3);return{found:!0,contentBefore:r,index:t,content:e.substring(t,t+3),contentAfter:o}}return{found:!1}},analyzeBuffer(e){const t=[...o.TOOL_CALL_TAGS,...o.THINKING_TAGS].join("|"),r=new RegExp(`<(${t})>`),n=e.match(r);return n&&0===n.index?{isCompleteTag:!0,isValidTag:!0,tagName:n[1],content:e}:{isCompleteTag:e.includes(">"),isValidTag:!1}},shouldContinueBuffering:(e,t)=>!e.includes(">")&&(!(e.length>t)&&!/\s/.test(e.substring(1))),countOccurrences(e,t){let r=0,o=0;for(;o=e.indexOf(t,o),-1!==o;)r++,o+=t.length;return r},findBreakPoint(e,t){if(e.length<=t)return e.length;const r=e.indexOf("\n",t);if(-1!==r)return r+1;const o=/[.!?]\s+/g;let n,s=-1;for(;null!==(n=o.exec(e));){if(n.index>=t)return n.index+n[0].length;s=n.index+n[0].length}if(-1!==s&&s>=t/2)return s;const i=e.indexOf(" ",t);return-1!==i?i+1:Math.min(e.length,t)}}};const o=r(1685)},7016:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getObjectivePrompt=function(e){return"OBJECTIVE\n\nYou accomplish a given task iteratively, breaking it down into clear steps and working through them methodically.\n\n1. Analyze the user's task and set clear, achievable goals to accomplish it. Prioritize these goals in a logical order.\n2. Work through these goals sequentially, utilizing available tools one at a time as necessary. Each goal should correspond to a distinct step in your problem-solving process. You will be informed on the work completed and what's remaining as you go.\n3. Remember, you have extensive capabilities with access to a wide range of tools that can be used in powerful and clever ways as necessary to accomplish each goal. Before calling a tool, do some analysis within <thinking></thinking> tags. First, analyze the file structure provided in environment_details to gain context and insights for proceeding effectively. Then, think about which of the provided tools is the most relevant tool to accomplish the user's task. Next, go through each of the required parameters of the relevant tool and determine if the user has directly provided or given enough information to infer a value. When deciding if the parameter can be inferred, carefully consider all the context to see if it supports a specific value. If all of the required parameters are present or can be reasonably inferred, close the thinking tag and proceed with the tool use. BUT, if one of the values for a required parameter is missing, DO NOT invoke the tool (not even with fillers for the missing params) and instead, ask the user to provide the missing parameters using the ask_followup_question tool. DO NOT ask for more information on optional parameters if it is not provided.\n4. Once you've completed the user's task, you must use the attempt_completion tool to present the result of the task to the user. You may also provide a CLI command to showcase the result of your task; this can be particularly useful for web development tasks, where you can run e.g. `open index.html` to show the website you've built.\n5. The user may provide feedback, which you can use to make improvements and try again. But DO NOT continue in pointless back and forth conversations, i.e. don't end your responses with questions or offers for further assistance."}},7020:e=>{"use strict";e.exports=require("yazl")},7050:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.ListCodeDefinitionsToolFactory=void 0;const s=r(3563),i=r(6268),a=r(873);let c=class{constructor(e){this.treeSitterService=e}getToolName(){return"list_code_definition_names"}create(e){return new i.ListCodeDefinitionsTool(e.workingDir,this.treeSitterService)}};t.ListCodeDefinitionsToolFactory=c,t.ListCodeDefinitionsToolFactory=c=o([(0,s.Injectable)(),n("design:paramtypes",[a.TreeSitterService])],c)},7093:e=>{"use strict";e.exports=require("langchain/text_splitter")},7184:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.DatasetRepository=void 0;const i=r(3563);r(1832);let a=class{constructor(e){this.knex=e}async findAll(){return this.knex("datasets").select("*")}async findById(e){return this.knex("datasets").where("id",e).first()}async create(e){await this.knex("datasets").insert(e)}async update(e,t){await this.knex("datasets").where("id",e).update(t)}async delete(e){await this.knex("datasets").where("id",e).delete()}};t.DatasetRepository=a,t.DatasetRepository=a=o([(0,i.Injectable)(),s(0,(0,i.Inject)("KNEX")),n("design:paramtypes",[Function])],a)},7188:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.MCPToolkit=void 0,t.MCPTool=p;const a=r(9150),c=r(9037),l=r(7814),d=r(5534),u=r(1569);class f extends d.BaseToolkit{constructor(e){super(),this.tools=[],this._tools=null,this.transport=null,this.client=null,this.transport=new l.StdioClientTransport(e)}async initialize(){if(null===this._tools){if(this.client=new c.Client({name:"langchain-js-client",version:"1.0.0"},{capabilities:{}}),null===this.transport)throw new Error("Transport is not initialized");await this.client.connect(this.transport),this._tools=await this.client.request({method:"tools/list"},a.ListToolsResultSchema),this.tools=await this.get_tools()}}async get_tools(){if(null===this._tools||null===this.client)throw new Error("Must initialize the toolkit first");const e=this._tools.tools.map((async e=>{if(null===this.client)throw new Error("Client is not initialized");return await p({client:this.client,name:e.name,description:e.description||"",argsSchema:h(e.inputSchema)})}));return Promise.all(e)}}async function p({client:e,name:t,description:o,argsSchema:n}){return(0,d.tool)((async o=>{const n={method:"tools/call",params:{name:t,arguments:o}},s=(await e.request(n,a.CallToolResultSchema)).content,{processImageContent:c}=await Promise.resolve().then((()=>i(r(3192)))),l=c(s);return JSON.stringify(l)}),{name:t,description:o,schema:n})}function h(e){if("object"!==e.type||!e.properties)throw new Error("Invalid schema type or missing properties");const t=Object.entries(e.properties).reduce(((e,[t,r])=>(e[t]=u.z.any(),e)),{});return u.z.object(t)}t.MCPToolkit=f},7201:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),r(1321);const c=r(818),l=r(6928),d=r(8781),u=r(715),f=i(r(7252)),p=r(6928),h=a(r(9055)),m=r(9187);(0,c.config)({path:(0,l.resolve)(__dirname,"../.env")});const g=r(6297);"true"===process.env.EVE_DEBUG_LOGGING&&(g.debugLogger.enable(),h.default.info("Debug logging enabled via EVE_DEBUG_LOGGING=true")),"true"===process.env.EVE_SQL_QUERY_LOGGING&&h.default.info("SQL query logging enabled via EVE_SQL_QUERY_LOGGING=true"),async function(){(0,m.getDefaultKnexConfig)();const e=await d.NestFactory.create(u.AppModule);e.setGlobalPrefix("api"),e.enableCors({origin:["http://localhost:3011","http://localhost:3012","http://localhost:3013","http://localhost:3014"],methods:["GET","POST","PUT","PATCH","DELETE","OPTIONS"],allowedHeaders:"*",exposedHeaders:["Location"]}),e.use(f.json({limit:"100mb"})),e.use(f.urlencoded({limit:"100mb",extended:!0})),e.use(f.static((0,p.join)(__dirname,"webui"))),e.use("*",((e,t,r)=>{e.originalUrl.startsWith("/api")?r():t.sendFile((0,p.join)(__dirname,"webui","index.html"))}));const t=process.env.PORT||3010;await e.listen(t);const r=`http://localhost:${t}`;console.log(`\neve-server is now available at: ${r}`);const o=["SIGTERM","SIGINT"];for(const t of o)process.on(t,(async()=>{h.default.info(`Received ${t}. Starting graceful shutdown...`),await e.close(),h.default.info("Application shut down gracefully"),process.exit(0)}))}().catch((e=>{h.default.error("Error during application bootstrap:",e),process.exit(1)}))},7202:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n(function_definition\n  name: (identifier) @name.definition.function) @definition.function\n\n(class_definition\n  name: (identifier) @name.definition.class) @definition.class\n"},7205:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.StoredFileService=void 0;const d=r(3563),u=r(7607),f=r(5775),p=r(4632),h=a(r(904)),m=l(r(8817)),g=l(r(9055));let y=class{constructor(e){this.storedFileRepository=e}async uploadFile(e,t,r){let o=h.lookup(e.originalname);if(!o){const t=await m.default.fromBuffer(e.buffer);o=t?t.mime:"application/octet-stream"}const n=new u.StoredFile(e.originalname,e.buffer,o,t,r);return await this.storedFileRepository.create(n),g.default.info(`File uploaded: ${e.originalname} (${o}) for session: ${t||"none"}, workspace: ${r||"none"}`),f.StoredFileDto.fromStoredFile(n)}async getFile(e){const t=await this.storedFileRepository.findById(e);return t?g.default.info(`File retrieved: ${t.originalFilename} (${e})`):g.default.info(`File not found: ${e}`),t}async getFileMetadata(e){const t=await this.storedFileRepository.findByIdWithoutContent(e);return t?g.default.info(`File metadata retrieved: ${t.originalFilename} (${e})`):g.default.info(`File not found: ${e}`),t}async getAllFiles(){return this.storedFileRepository.findAll()}async deleteFile(e){const t=await this.storedFileRepository.findByIdWithoutContent(e);await this.storedFileRepository.delete(e),g.default.info(`File deleted: ${t?t.originalFilename:"unknown"} (${e})`)}async getFilesBySessionId(e){const t=await this.storedFileRepository.findBySessionId(e);return g.default.info(`Retrieved ${t.length} files for session: ${e}`),t}async getFilesByWorkspaceName(e){const t=await this.storedFileRepository.findByWorkspaceName(e);return g.default.info(`Retrieved ${t.length} files for workspace: ${e}`),t}};t.StoredFileService=y,t.StoredFileService=y=i([(0,d.Injectable)(),c("design:paramtypes",[p.StoredFileRepository])],y)},7223:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ArchitectAgentService=void 0;const a=r(3563),c=r(3470),l=r(6158),d=i(r(9055)),u=r(2300),f=r(5277),p=r(8921);let h=class extends f.GraphAgentService{constructor(e,t,r){super(e,t,r),this.agentCollaborator=e,this.toolFactoryService=t,this.ruleService=r}getName(){return"architect-agent"}async getTools(e){const t=["list_files","read_file","update_file","delete_file","fetch_web_page","current_timestamp","grep","find_files","serp_api"];return e.workspace.portFromBaseDir&&t.push("read_port_from_file"),await this.toolFactoryService.createTools(t,e)}async getSystemPrompt(e){let t=`As an expert AI Software Architect, your primary role is to analyze requirements and break them down into well-defined, implementable tasks. Your main responsibilities vary based on the type of request:\n\n1. STORY TASK BREAKDOWN (Primary Role):\n   When breaking down an existing story into tasks:\n   \n   a) First analyze the context:\n      - Read the epic's requirements.md for high-level context\n      - Study the story.json to understand specific acceptance criteria\n      - Research the existing codebase using the repository file tree defined below and the read_file to understand current implementation\n      - Read the hints.md and README.md files to understand the tech stack and any other relevant information\n      - Read any other files that seem at all relevant to the task or to see examples of how things are done\n      - Use the read_file tool to read examples of existing code that might be relevant to the task\n      - Do not make assumptions about the codebase, always use the read_file tool to understand the existing code before designing new code\n   \n   b) Create tasks that:\n      - Fulfill all acceptance criteria\n      - Include basic happy path end-to-end tests\n      - Are sized for one atomic commit (3-4 files max)\n      - Are ordered logically for implementation\n      - If possible, include both the backend and frontend code changes in the same task so they can immediately be tested together\n      - Prefer lots of small tasks over fewer larger tasks\n   \n   c) For each task provide:\n      - Clear, descriptive title\n      - List of files to be created and the files to be modified\n      - For each file, describe the changes needed with pseudo code or code snippets if applicable\n      - Define entity/dto properties if applicable\n      - Show the code for DB table creation/updates if applicable\n      - Dependencies on other tasks\n      - Basic testing requirements which should include a happy path end to end test (no mocking/fixtures)\n      - List which acceptance criteria the task fulfills\n      - Status "backlog"\n      - Assignee "se-agent"\n\n2. EPIC/STORY PLANNING:\n   When asked to create a plan for something (and no specific EPIC is mentioned):\n   \n   a) Create a new epic with:\n      - Clear requirements.md file (this can be technical in nature rather than business requirements)\n      - 1-2 initial stories\n   \n   b) STOP and present the plan to user and wait for approval before breaking down the first story\n   \n   c) Only proceed with task breakdown after user approval\n\n3. FIRST EPIC SETUP:\n   When breaking down the first epic/stories in a project (e.g. EPIC-01):\n   \n   a) First task should be either:\n      - Scaffolding: Ask user for tech stack or propose a tech stack and ask user to confirm\n      OR\n      - Rebranding: If template exists:\n        * Update all wording/readmes\n        * Disable/hide template features if needed\n        * Include startup instructions for SE agent to show user\n   \n   b) Second task should implement first actual requirement\n   \n   c) Ensure proper tech stack is defined:\n      - Check hints.md and codebase for existing choices\n      - If none found, propose stack to user and wait for confirmation\n      - Update hints.md with confirmed stack\n\n4. REFACTORING PLANS:\n   When asked to create a refactoring plan:\n   \n   a) Test Coverage:\n      - Assess existing test coverage and add and missing happy path tests for important behaviors\n      - Create test story first if needed to add tests\n      - Plan for test updates/temporary disabling tests if needed\n   \n   b) Analysis & Principles:\n      - Identify complexity, duplication, coupling, large files, etc.\n      - Follow SOLID principles\n      - Keep changes independently deployable\n      - Maintain backward compatibility during the refactoring\n   \n   c) Task Structure:\n      1. Setup (tests, infrastructure)\n      2. Extraction (new files, minimal changes, bit by bit etc)\n      3. Updates (client code, dependencies)\n      4. Cleanup (remove old code, re-enable tests)\n\n${await p.EpicsPrompts.allEpicInstructions(e)}\n\nHere is the file tree of the system:\n${e.repositoryTree()}\n\n${e.portFromSourceTree()?`\nHere is the "port from" file tree containing another codebase that you can learn from and/or port code from (use read_port_from_file tool to read files from here):\n${e.portFromSourceTree()}\n`:""}\n\n${e.repositoryHints()?`Additional hints:\n${e.repositoryHints()}`:""}\n\nIMPORTANT GUIDELINES:\n- If there is no tech stack defined yet in the repository, then propose a tech stack and STOP AND ASK USER TO CONFIRM if that technology stack is okay\n- Always use read_file to examine code before referencing it\n- Tasks should be small (single commit) but complete (testable)\n- Every acceptance criterion must have a task\n- Use current_timestamp for timestamps\n- Order tasks logically\n- You create tasks/stories only - no direct code edits unless specifically asked to do so\n- When creating first epic, focus on proper setup/scaffolding\n- Always stop and present plan to user before detailed breakdown\n\nWhat follows may be more specific instructions which should be followed in preference to the general instructions above...\n`;return d.default.debug(`Architect Agent system prompt for workspace '${e.workspace.name}' (length: ${t.length} chars): ${t}`),t}};t.ArchitectAgentService=h,t.ArchitectAgentService=h=o([(0,a.Injectable)(),s(0,(0,a.Inject)((0,a.forwardRef)((()=>u.GraphAgentCollaborator)))),n("design:paramtypes",[u.GraphAgentCollaborator,l.ToolFactoryService,c.AgentRuleService])],h)},7249:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.StandardAgentStateManager=void 0;const o=r(9314),n=r(8804);t.StandardAgentStateManager=class{static createGraphState(){return{messages:{reducer:(e,t)=>e.concat(t)}}}static shouldContinue(e){const t=e.messages,r=t[t.length-1];return r.tool_calls?.length?"tools":"__end__"}static createWorkflow(e,t){const r=this.createGraphState(),s=new n.ToolNode(t);return new o.StateGraph({channels:r}).addNode("agent",(async t=>await e(t))).addNode("tools",s).addEdge("__start__","agent").addConditionalEdges("agent",this.shouldContinue).addEdge("tools","agent")}}},7252:e=>{"use strict";e.exports=require("express")},7265:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.GitController=void 0;const i=r(3563),a=r(5190);let c=class{constructor(e){this.gitService=e}async getGitLog(e){try{return await this.gitService.getGitLog(e)}catch(t){if(t.message.includes("not found"))throw new i.HttpException(`Workspace ${e} not found`,i.HttpStatus.NOT_FOUND);if(t.message.includes("not a git repository"))throw new i.HttpException("Workspace is not a git repository",i.HttpStatus.BAD_REQUEST);throw new i.HttpException(`Failed to get git log: ${t.message}`,i.HttpStatus.INTERNAL_SERVER_ERROR)}}async getGitDiff(e,t){try{return await this.gitService.getGitDiff(e,t)}catch(t){if(t.message.includes("not found"))throw new i.HttpException(`Workspace ${e} not found`,i.HttpStatus.NOT_FOUND);throw new i.HttpException(`Failed to get git diff: ${t.message}`,i.HttpStatus.INTERNAL_SERVER_ERROR)}}async undoLastCommit(e){try{await this.gitService.undoLastCommit(e)}catch(t){if(t.message.includes("not found"))throw new i.HttpException(`Workspace ${e} not found`,i.HttpStatus.NOT_FOUND);throw new i.HttpException(`Failed to undo last commit: ${t.message}`,i.HttpStatus.INTERNAL_SERVER_ERROR)}}};t.GitController=c,o([(0,i.Get)(":workspaceName/log"),s(0,(0,i.Param)("workspaceName")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"getGitLog",null),o([(0,i.Get)(":workspaceName/diff/:hash"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("hash")),n("design:type",Function),n("design:paramtypes",[String,String]),n("design:returntype",Promise)],c.prototype,"getGitDiff",null),o([(0,i.Post)(":workspaceName/undo-last-commit"),s(0,(0,i.Param)("workspaceName")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"undoLastCommit",null),t.GitController=c=o([(0,i.Controller)("git"),n("design:paramtypes",[a.GitService])],c)},7307:function(__unused_webpack_module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__decorate=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},__importStar=this&&this.__importStar||(ownKeys=function(e){return ownKeys=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},ownKeys(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=ownKeys(e),o=0;o<r.length;o++)"default"!==r[o]&&__createBinding(t,e,r[o]);return __setModuleDefault(t,e),t}),ownKeys,__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},PluginLoaderService_1;Object.defineProperty(exports,"__esModule",{value:!0}),exports.PluginLoaderService=void 0;const common_1=__webpack_require__(3563),fs=__importStar(__webpack_require__(4652)),path=__importStar(__webpack_require__(6928)),graph_agent_collaborator_service_1=__webpack_require__(2300),graph_agent_service_1=__webpack_require__(5277),logger_1=__importDefault(__webpack_require__(9055)),tool_factory_service_1=__webpack_require__(6158),agent_rule_service_1=__webpack_require__(3470);let PluginLoaderService=PluginLoaderService_1=class PluginLoaderService{constructor(e,t,r){this.agentCollaborator=e,this.toolFactoryService=t,this.ruleService=r}async loadPlugins(){const e=[];try{const t=process.env.PLUGIN_DIR||path.join(__dirname,"..","..","plugins");if(logger_1.default.info(`[${PluginLoaderService_1.name}] Loading plugins from: ${t}`),!t)return logger_1.default.info(`[${PluginLoaderService_1.name}] PLUGIN_DIR not set, skipping plugin loading`),e;if(!await fs.pathExists(t))return logger_1.default.warn(`[${PluginLoaderService_1.name}] Plugin directory not found: ${t}`),e;const r=await fs.readdir(t);for(const o of r){const r=path.join(t,o,"plugin-config.json");if(await fs.pathExists(r)){const n=await fs.readJson(r),s=await this.loadPlugin(t,o,n);e.push(...s)}else logger_1.default.warn(`[${PluginLoaderService_1.name}] No plugin-config.json found for plugin: ${o}. Skipping.`)}}catch(e){logger_1.default.error(`[${PluginLoaderService_1.name}] Error loading plugins: ${e.message}\n${e.stack}`)}return e}async loadPlugin(e,t,r){logger_1.default.info(`[${PluginLoaderService_1.name}] Loading plugin: ${t}`);const o=[];if(r.agents)for(const[n,s]of Object.entries(r.agents)){const r=await this.loadAgent(e,t,n,s);r&&o.push(r)}if(r.tools)for(const[o,n]of Object.entries(r.tools))await this.loadTool(e,t,o,n);return r.tests&&await this.runTests(e,t,r.tests),o}async loadAgent(pluginDir,pluginName,agentName,agentFile){const agentPath=path.join(pluginDir,pluginName,agentFile);if(await fs.pathExists(agentPath))try{const AgentModule=eval("require")(agentPath),agentImplementation=AgentModule.default||AgentModule,agent=new graph_agent_service_1.GraphAgentService(this.agentCollaborator,this.toolFactoryService,this.ruleService);for(const e of Object.getOwnPropertyNames(agentImplementation))"function"==typeof agentImplementation[e]&&"constructor"!==e&&(logger_1.default.info(`[${PluginLoaderService_1.name}] Delegating method: ${e} to plugin: ${pluginName}/${agentName}`),agent[e]=async(...t)=>await agentImplementation[e](...t));return agent.getName=()=>agentName,logger_1.default.info(`[${PluginLoaderService_1.name}] Loaded agent: ${agentFile} from plugin: ${pluginName} with name: ${agent.getName()}`),agent}catch(e){logger_1.default.error(`[${PluginLoaderService_1.name}] Error loading agent: ${agentFile} from plugin: ${pluginName}\n${e.stack}`)}else logger_1.default.warn(`[${PluginLoaderService_1.name}] Agent file not found: ${agentPath}`);return null}async loadTool(pluginDir,pluginName,toolName,toolFile){logger_1.default.info(`[${PluginLoaderService_1.name}] Loading tool: ${toolName} (${toolFile}) from plugin: ${pluginName}`);const toolPath=path.join(pluginDir,pluginName,toolFile);if(await fs.pathExists(toolPath))try{const ToolModule=eval("require")(toolPath);"function"==typeof ToolModule.createTool?(this.toolFactoryService.registerTool(toolName,ToolModule.createTool),logger_1.default.info(`[${PluginLoaderService_1.name}] Loaded tool: ${toolName} (${toolFile}) from plugin: ${pluginName}`)):logger_1.default.warn(`[${PluginLoaderService_1.name}] Tool ${toolName} (${toolFile}) from plugin: ${pluginName} does not export a 'createTool' function`)}catch(e){logger_1.default.error(`[${PluginLoaderService_1.name}] Error loading tool: ${toolName} (${toolFile}) from plugin: ${pluginName}\n${e.stack}`)}}async runTests(e,t,r){for(const o of r){const r=path.join(e,t,o);if(await fs.pathExists(r))try{const e=await Promise.resolve(`${r}`).then((e=>__importStar(__webpack_require__(6002)(e))));"function"==typeof e.default&&await e.default(),logger_1.default.info(`[${PluginLoaderService_1.name}] Ran test: ${o} for plugin: ${t}`)}catch(e){logger_1.default.error(`[${PluginLoaderService_1.name}] Error running test: ${o} for plugin: ${t}\n${e.stack}`)}}}};exports.PluginLoaderService=PluginLoaderService,exports.PluginLoaderService=PluginLoaderService=PluginLoaderService_1=__decorate([(0,common_1.Injectable)(),__metadata("design:paramtypes",[graph_agent_collaborator_service_1.GraphAgentCollaborator,tool_factory_service_1.ToolFactoryService,agent_rule_service_1.AgentRuleService])],PluginLoaderService)},7310:e=>{"use strict";e.exports=require("@langchain/community/embeddings/hf_transformers")},7373:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.SessionService=void 0;const i=r(3563),a=r(5312),c=r(573),l=r(4434),d=r(3936),u=r(9095),f=r(811),p=s(r(9055)),h=r(9100);let m=class{constructor(e,t,r){this.sessionRepository=e,this.itemRepository=t,this.requestRepository=r,this.eventEmitter=new l.EventEmitter}async getSessions(e=1,t=10,r="createdAt",o="DESC"){const{sessions:n,total:s}=await this.sessionRepository.findAll({page:e,limit:t},{field:r,order:o}),i=n.map((e=>e.sessionId)),a=await this.itemRepository.getSessionStats(i),c=await this.requestRepository.getSessionGitStats(i);return{sessions:n.map((e=>({...e,stats:{inputTokens:0,cacheWriteTokens:0,cacheReadTokens:0,outputTokens:0,totalTokens:0,cost:0,...a[e.sessionId]||{}},gitStats:{filesChanged:0,insertions:0,deletions:0,testFilesChanged:0,testInsertions:0,testDeletions:0,...c[e.sessionId]||{}}}))),total:s}}async getSessionStats(e){return{...(await this.itemRepository.getSessionStats([e]))[e]||{inputTokens:0,cacheWriteTokens:0,cacheReadTokens:0,outputTokens:0,totalTokens:0,cost:0}}}async getRequestStats(e){return{...(await this.itemRepository.getRequestStats([e]))[e]||{inputTokens:0,cacheWriteTokens:0,cacheReadTokens:0,outputTokens:0,totalTokens:0,cost:0}}}async ensureSession(e,t,r,o){const n=await this.sessionRepository.findById(t);if(n){if(n.workspaceName!==e)throw new Error(`Session ${t} exists but belongs to a different workspace`);if("active"===n.status)throw new Error(`Session ${t} is currently active`);return n.requestSnippet||(n.requestSnippet=r.slice(0,250),await this.sessionRepository.update(t,{requestSnippet:n.requestSnippet})),n}const s={sessionId:t,workspaceName:e,status:"inactive",createdAt:new Date,requestSnippet:r.slice(0,250),agent:o};return await this.sessionRepository.create(s),s}async getSession(e){return this.sessionRepository.findById(e)}async deleteSession(e){await this.sessionRepository.delete(e)}async deleteSessionForWorkspace(e,t){await this.sessionRepository.delete(t)}async addItem(e){return"AI"===e.label||"Human"===e.label?p.default.info("Adding item to session: %s with label: %s, content: %s",e.sessionId,e.label,e.content):p.default.debug("Adding item to session %s with label %s, content: %s",e.sessionId,e.label,e.content),await this.itemRepository.create(e),this.eventEmitter.emit("newItem",e),e}async getItemsForSession(e,t=1,r=100,o="ASC"){return[await this.itemRepository.findBySessionId(e,{page:t,limit:r},{field:"createdAt",order:o}),await this.itemRepository.countBySessionId(e)]}streamSessionItems(e){return new c.Observable((t=>{this.getItemsForSession(e).then((([e])=>{e.forEach((e=>{t.next({data:e})}))}));const r=r=>{r.sessionId===e&&t.next({data:r})};return this.eventEmitter.on("newItem",r),()=>{this.eventEmitter.removeListener("newItem",r)}}))}async updateSessionStatus(e,t){await this.sessionRepository.update(e,{status:t})}async abortSession(e){if(!await this.sessionRepository.findById(e))throw new i.NotFoundException(`Session with id ${e} not found`);return await this.updateSessionStatus(e,"aborted"),this.sessionRepository.findById(e)}generateSessionId(){return(0,h.ulid)()}generateItemId(){return(0,h.ulid)()}async addRequest(e){p.default.info("Adding request to session: %s, workspaceName: %s, requestContent: %s",e.sessionId,e.workspaceName,e.requestContent);const t=new a.Request(e.requestId||this.generateRequestId(),e.sessionId,e.workspaceName,e.requestContent,e);return await this.requestRepository.create(t),t}async updateRequest(e,t){return p.default.info("Updating request: %s, updateData: %s",e,JSON.stringify(t)),await this.requestRepository.updateRequest(e,t),this.requestRepository.findById(e)}generateRequestId(){return(0,h.ulid)()}async getRequest(e){return this.requestRepository.findById(e)}async updateGitStats(e,t){p.default.info("Updating git stats for request: %s, gitStats: %s",e,JSON.stringify(t)),await this.requestRepository.updateGitStats(e,t)}};t.SessionService=m,t.SessionService=m=o([(0,i.Injectable)(),n("design:paramtypes",[d.SessionRepository,u.ItemRepository,f.RequestRepository])],m)},7393:e=>{"use strict";e.exports=require("mammoth")},7403:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.FileContentOptimizerService=void 0;const i=r(3563),a=s(r(9055)),c=r(4155);let l=class{constructor(e){this.responseFormatter=e}optimizeFileContent(e){if(e.length<=1)return e;const t=JSON.parse(JSON.stringify(e)),r={};t.forEach(((e,t)=>{for(const o of e.segments)if("text"===o.type){const e=this.extractFileContentPaths(o.content);for(const o of e)r[o]=t}}));for(let e=0;e<t.length;e++){const o=t[e];for(let n=0;n<o.segments.length;n++){const s=o.segments[n];"text"===s.type&&(t[e].segments[n].content=this.replaceOlderFileContent(s.content,e,r))}}return t}extractFileContentPaths(e){const t=/<file_content path="([^"]+)">/g,r=[];let o;for(;null!==(o=t.exec(e));)r.push(o[1]);return r}replaceOlderFileContent(e,t,r){const o=/<file_content path="([^"]+)">([\s\S]*?)<\/file_content>/g;let n=e;const s=[];let i;for(;null!==(i=o.exec(e));){const e=i[1],o=i[0];if(r[e]===t)continue;const n=`<file_content path="${e}">${this.responseFormatter.duplicateFileReadNotice()}</file_content>`;s.push({original:o,replacement:n}),a.default.debug(`[FileContentOptimizerService] Replacing older file_content block for ${e} at index ${t}`)}for(const{original:e,replacement:t}of s)n=n.replace(e,t);return n}};t.FileContentOptimizerService=l,t.FileContentOptimizerService=l=o([(0,i.Injectable)(),n("design:paramtypes",[c.ResponseFormatterService])],l)},7438:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ContextTruncationHandler=void 0;const a=r(3563),c=r(461),l=r(9100),d=i(r(9055)),u=r(136),f=r(1280),p=r(7485),h=r(4155);let m=o=class{constructor(e,t,r){this.agentStateManager=e,this.eventEmitter=t,this.responseFormatter=r}getTruncationStrategy(e){return this.agentStateManager.getTruncationStrategy(e)||{strategy:"preserve_recent",percentToRemove:25}}updateToNextTruncationStrategy(e){const t=this.getTruncationStrategy(e),r=(0,u.getNextTruncationStrategy)(t.strategy);return d.default.warn(`[${o.name}] Context window exceeded for task ${e}. Updating to next truncation strategy: ${r.strategy}, percentToRemove: ${r.percentToRemove}%`),this.agentStateManager.setTruncationStrategy(e,r),r}truncateHistory(e,t){const r=this.getTruncationStrategy(e);return(0,u.truncateConversationHistory)(t,r)}truncateWithNextStrategy(e,t,r){const n=this.updateToNextTruncationStrategy(e),s=(0,u.truncateConversationHistory)(t,n),i=t.length-s.length;if(d.default.info(`[${o.name}] Truncated history for task ${e}. Removed ${i} messages using strategy ${n.strategy}.`),i>0){const t={id:(0,l.ulid)(),taskId:e,role:"user",segments:[{type:"text",content:this.responseFormatter.contextTruncationNotice()}],providerId:"system",createdAt:new Date};s.unshift(t)}return r&&this.eventEmitter.emit(f.NotificationEvents.CONTEXT_TRUNCATED,{taskId:e,clientId:r,message:`Context window exceeded, removed ${i} messages using strategy ${n.strategy}.`,removedCount:i}),{truncatedHistory:s,removedCount:i}}};t.ContextTruncationHandler=m,t.ContextTruncationHandler=m=o=n([(0,a.Injectable)(),s("design:paramtypes",[p.AgentStateManager,c.EventEmitter2,h.ResponseFormatterService])],m)},7465:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DeleteFile=void 0;const c=r(5534),l=r(1569),d=i(r(9896)),u=i(r(6928)),f=a(r(9055));class p extends c.Tool{constructor(e){super(),this.name="delete_file",this.description="Delete a file from the workspace",this.schema=l.z.object({filePath:l.z.string().describe("The relative path of the file to delete")}),this.workspaceRootDir=e}async _call(e){return this.deleteFile(e.filePath)}deleteFile(e){const t=u.join(this.workspaceRootDir,e);try{return d.existsSync(t)?(f.default.info(`Deleting file: ${e}`),d.unlinkSync(t),`Successfully deleted file: ${e}`):`Error: File not found - ${e}`}catch(e){return`Error deleting file: ${e.message}`}}}t.DeleteFile=p},7485:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AgentStateManager=void 0;const a=r(3563),c=i(r(9055)),l=r(6297),d=r(1302);let u=o=class{constructor(){this.isAborting=new Map,this.abortControllers=new Map,this.consecutiveMistakeCount=new Map,this.consecutiveToolFailures=new Map,this.truncationStrategies=new Map}setTaskAborting(e,t){if(t){this.isAborting.set(e,!0),this.abortControllers.has(e)||this.abortControllers.set(e,new AbortController);const t=this.abortControllers.get(e);return t.signal.aborted?(c.default.info(`[${o.name}] Task ${e} already aborted`),l.debugLogger.log(`Task ${e} already aborted, signal state: ${t.signal.aborted}`)):(t.abort(),c.default.info(`[${o.name}] Task ${e} marked for abortion and AbortController aborted`),l.debugLogger.log(`AbortSignal created for task ${e}, aborted state: ${t.signal.aborted}`)),t.signal}return this.isAborting.delete(e),this.abortControllers.set(e,new AbortController),void c.default.info(`[${o.name}] Abortion flag removed for task ${e} and new AbortController created`)}isTaskAborting(e){return this.isAborting.get(e)||!1}getAbortSignal(e){const t=this.abortControllers.get(e);return t?.signal}getOrCreateAbortSignal(e){return this.abortControllers.has(e)||this.abortControllers.set(e,new AbortController),this.abortControllers.get(e).signal}setupStreamAbortHandling(e,t,r){const n=this.getAbortSignal(t);if(n)(0,d.setupAbortHandling)(e,r,n);else{c.default.info(`[${o.name}] No abort signal for task ${t}, creating one`);const n=this.getOrCreateAbortSignal(t);(0,d.setupAbortHandling)(e,r,n)}}getMistakeCount(e){return this.consecutiveMistakeCount.get(e)||0}setMistakeCount(e,t){this.consecutiveMistakeCount.set(e,t)}incrementMistakeCount(e){const t=this.getMistakeCount(e)+1;return this.setMistakeCount(e,t),t}resetMistakeCount(e){this.setMistakeCount(e,0)}getToolFailureCount(e,t){return(this.consecutiveToolFailures.get(e)||{})[t]||0}setToolFailureCount(e,t,r){const o=this.consecutiveToolFailures.get(e)||{};o[t]=r,this.consecutiveToolFailures.set(e,o)}incrementToolFailureCount(e,t){const r=this.getToolFailureCount(e,t)+1;return this.setToolFailureCount(e,t,r),r}resetToolFailureCount(e,t){this.setToolFailureCount(e,t,0)}getTruncationStrategy(e){return this.truncationStrategies.get(e)}setTruncationStrategy(e,t){this.truncationStrategies.set(e,t)}cleanupTask(e){this.isAborting.delete(e),this.consecutiveMistakeCount.delete(e),this.consecutiveToolFailures.delete(e),this.truncationStrategies.delete(e),this.abortControllers.delete(e),c.default.info(`[${o.name}] Cleaned up state for task ${e}`)}};t.AgentStateManager=u,t.AgentStateManager=u=o=n([(0,a.Injectable)(),s("design:paramtypes",[])],u)},7510:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ReportingService=void 0;const a=r(3563),c=(r(1832),i(r(9055))),l=r(2368),d=r(6910);let u=class{constructor(e,t){this.knex=e,this.configService=t}async generateReport(e,t,r,o){try{const{startDate:n,endDate:s}=this.resolveDateRange(e,t,r),i=await this.getRequestTotalsData(n,s,o);return{requestTotals:i,dailyMetrics:await this.getHistoricStats(n,s,o),dateRange:{startDate:n,endDate:s}}}catch(e){throw c.default.error(`Error generating report: ${e.message}`,e.stack),e}}resolveDateRange(e,t,r){const o=new Date;let n,s;try{if(e&&t)n=new Date(e),s=new Date(t),s.setHours(23,59,59,999);else if(r)switch(s=new Date(o),s.setHours(23,59,59,999),r){case"today":n=new Date(o),n.setHours(0,0,0,0);break;case"this-week":n=new Date(o),n.setDate(n.getDate()-7),n.setHours(0,0,0,0);break;case"this-month":n=new Date(o),n.setDate(n.getDate()-30),n.setHours(0,0,0,0);break;case"all-time":n=new Date(o),n.setDate(n.getDate()-90),n.setHours(0,0,0,0);break;default:throw new Error("Invalid period specified")}else n=new Date(o),n.setDate(n.getDate()-90),n.setHours(0,0,0,0),s=new Date(o),s.setHours(23,59,59,999);return{startDate:n,endDate:s}}catch(e){throw c.default.error(`Error resolving date range: ${e.message}`,e.stack),e}}async getRequestTotalsData(e,t,r){try{let o=this.knex("requests").select(this.knex.raw("COUNT(*) as totalRequests"),this.knex.raw("COALESCE(SUM(tookMillis), 0) as totalProcessingMillis"),this.knex.raw("COALESCE(AVG(tookMillis), 0) as avgProcessingMillis"),this.knex.raw("COALESCE(SUM(inputTokens), 0) as totalInputTokens"),this.knex.raw("COALESCE(SUM(outputTokens), 0) as totalOutputTokens"),this.knex.raw("COALESCE(SUM(totalTokens), 0) as totalTokens"),this.knex.raw("COALESCE(SUM(cost), 0) as totalCost"),this.knex.raw("COALESCE(AVG(cost), 0) as avgCostPerRequest"),this.knex.raw("COALESCE(SUM(CASE WHEN linesChanged <= 500 THEN linesChanged ELSE 0 END), 0) as totalLinesChanged"),this.knex.raw("COALESCE(AVG(CASE WHEN linesChanged <= 500 THEN linesChanged ELSE NULL END), 0) as avgLinesChangedPerRequest"),this.knex.raw("COALESCE(SUM(filesChanged), 0) as totalFilesChanged"),this.knex.raw("COALESCE(SUM(insertions), 0) as totalInsertions"),this.knex.raw("COALESCE(SUM(deletions), 0) as totalDeletions"),this.knex.raw("COALESCE(SUM(CASE WHEN linesChanged <= 500 THEN testLinesChanged ELSE 0 END), 0) as totalTestLinesChanged"),this.knex.raw("COALESCE(SUM(testFilesChanged), 0) as totalTestFilesChanged"),this.knex.raw("COALESCE(SUM(testInsertions), 0) as totalTestInsertions"),this.knex.raw("COALESCE(SUM(testDeletions), 0) as totalTestDeletions"),this.knex.raw("COALESCE(SUM(cacheReadTokens), 0) as totalCacheReadTokens"),this.knex.raw("COALESCE(SUM(cacheWriteTokens), 0) as totalCacheWriteTokens")).whereBetween("startedAt",[e,t]);r&&""!==r.trim()&&(o=o.where("workspaceName",r));const n=await o.first(),s=n.totalLinesChanged-n.totalTestLinesChanged,i=n.totalFilesChanged-n.totalTestFilesChanged,a=n.totalLinesChanged>0?n.totalCost/n.totalLinesChanged:0,c=this.configService.getNumericProperty(d.ConfigPropNames.VALUE_PER_LINE)||2.4,l=n.totalLinesChanged*c,u=n.totalRequests>0?l/n.totalRequests:0,f=n.totalInputTokens+n.totalCacheReadTokens>0?100*n.totalCacheReadTokens/(n.totalInputTokens+n.totalCacheReadTokens):0;return{totalRequests:n.totalRequests,totalProcessingMillis:n.totalProcessingMillis,avgProcessingMillis:n.avgProcessingMillis,totalInputTokens:n.totalInputTokens,totalOutputTokens:n.totalOutputTokens,totalTokens:n.totalTokens,totalCost:n.totalCost,avgCostPerRequest:n.avgCostPerRequest,avgCostPerLine:a,totalLinesChanged:n.totalLinesChanged,totalFilesChanged:n.totalFilesChanged,totalInsertions:n.totalInsertions,totalDeletions:n.totalDeletions,totalTestLinesChanged:n.totalTestLinesChanged,totalTestFilesChanged:n.totalTestFilesChanged,totalTestInsertions:n.totalTestInsertions,totalTestDeletions:n.totalTestDeletions,totalProductionLinesChanged:s,totalProductionFilesChanged:i,totalValueCreated:l,avgValueCreatedPerRequest:u,avgLinesChangedPerRequest:n.avgLinesChangedPerRequest,totalCacheReadTokens:n.totalCacheReadTokens,totalCacheWriteTokens:n.totalCacheWriteTokens,inputCacheHitPercentage:f}}catch(e){throw c.default.error(`Error getting request totals data: ${e.message}`,e.stack),e}}async getHistoricStats(e,t,r){try{let o=this.knex("requests").select(this.knex.raw("strftime('%Y-%m-%d', datetime(startedAt/1000, 'unixepoch')) as label"),this.knex.raw("COALESCE(SUM(CASE WHEN linesChanged <= 500 THEN linesChanged ELSE 0 END), 0) as linesChanged"),this.knex.raw("COALESCE(SUM(cost), 0) as cost"),this.knex.raw("COUNT(*) as requests"),this.knex.raw("COALESCE(SUM(tookMillis), 0) as processingTime")).whereBetween("startedAt",[e,t]);r&&""!==r.trim()&&(o=o.where("workspaceName",r)),o=o.groupBy("label").orderBy("label","asc"),c.default.debug(`Query: ${o.toString()}`);const n=await o,s=this.configService.getNumericProperty(d.ConfigPropNames.VALUE_PER_LINE)||2.4;return n.map((e=>({label:e.label,linesChanged:e.linesChanged,cost:e.cost,valueCreated:e.linesChanged*s,requests:e.requests,processingTime:e.processingTime})))}catch(e){throw c.default.error(`Error getting historic stats: ${e.message}`,e.stack),e}}};t.ReportingService=u,t.ReportingService=u=o([(0,a.Injectable)(),s(0,(0,a.Inject)("KNEX")),n("design:paramtypes",[Function,l.ConfigService])],u)},7516:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ContextManagerService=void 0;const a=r(3563),c=i(r(9055));let l=o=class{constructor(){c.default.info(`[${o.name}] ContextManagerService initialized`)}getNewContextMessagesAndMetadata(e,t,r,o,n){let s=!1;if(n>=0){const i=t[n];if(i&&i.text){const{tokensIn:t,tokensOut:n,cacheWrites:a,cacheReads:c}=JSON.parse(i.text),l=(t||0)+(n||0)+(a||0)+(c||0);let d,u=r.getModel().info.contextWindow||128e3;switch(u){case 64e3:d=u-27e3;break;case 128e3:d=u-3e4;break;case 2e5:d=u-4e4;break;default:d=Math.max(u-4e4,.8*u)}if(l>=d){const t=l/2>d?"quarter":"half";o=this.getNextTruncationRange(e,o,t),s=!0}}}return{conversationHistoryDeletedRange:o,updatedConversationHistoryDeletedRange:s,truncatedConversationHistory:this.getTruncatedMessages(e,o)}}getNextTruncationRange(e,t,r){const o=t?t[1]+1:1;let n;n="half"===r?2*Math.floor((e.length-o)/4):2*Math.floor(3*(e.length-o)/4/2);let s=o+n-1;return"user"!==e[s]?.role&&(s-=1),[1,s]}getTruncatedMessages(e,t){if(!t)return e;const[r,o]=t;return[...e.slice(0,r),...e.slice(o+1)]}};t.ContextManagerService=l,t.ContextManagerService=l=o=n([(0,a.Injectable)(),s("design:paramtypes",[])],l)},7600:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ReadDependencySourceTree=void 0;const o=r(5534),n=r(1569);class s extends o.Tool{constructor(e){super(),this.name="read_dependency_source_tree",this.description='Read the source tree hierarchy (directories and file names only) of a dependency, using the package manager scheme (e.g. "maven") and locator (e.g. "com.example:example:1.0.0"). \n  Use this tool if you need to know more about how to use a specific dependency.\n  Look in the build file (e.g. pom.xml or build.gradle) or package metadata (e.g. package.json) and then use that to build the correct scheme and locator.\n  Currently only maven is supported so the scheme is always "maven" and the locator is always a Maven GAV tuple (group:artifact:version).\n  If no repository URLs are provided then the default Maven central repository will be used.\n  ',this.schema=n.z.object({input:n.z.string().describe("A JSON string containing packageManagerScheme, locator, and optional repositoryUrls")}),this.sourceArtefactService=e}async _call(e){const{packageManagerScheme:t,locator:r,repositoryUrls:o}=JSON.parse(e.input);try{return await this.sourceArtefactService.readArtefactSourceTree(t,r,o)}catch(e){return`Error: Unable to read dependency source tree. ${e instanceof Error?e.message:"Unknown error occurred"}`}}}t.ReadDependencySourceTree=s},7602:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.MutationsService=void 0;const s=r(3563),i=r(672);let a=class{constructor(e){this.mutationRepository=e}async getMutationsForSession(e){return(await this.mutationRepository.findBySessionId(e,void 0,{field:"updatedAt",order:"DESC"})).map((e=>({id:e.id,type:e.type,filePath:e.filePath,updatedAt:e.updatedAt,description:e.description,fileContentsBefore:e.fileContentsBefore,fileContentsAfter:e.fileContentsAfter,requestId:e.requestId})))}async getMutation(e){return this.mutationRepository.findById(e)}async getMutationsForRequest(e){return(await this.mutationRepository.findByRequestId(e)).map((e=>({id:e.id,type:e.type,filePath:e.filePath,updatedAt:e.updatedAt,description:e.description,fileContentsBefore:e.fileContentsBefore,fileContentsAfter:e.fileContentsAfter,requestId:e.requestId})))}async createMutation(e){if(!e.sessionId)throw new Error("sessionId is required to create a mutation");if(!e.requestId)throw new Error("requestId is required to create a mutation");return await this.mutationRepository.create({...e,updatedAt:e.updatedAt||new Date})}};t.MutationsService=a,t.MutationsService=a=o([(0,s.Injectable)(),n("design:paramtypes",[i.MutationRepository])],a)},7607:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.StoredFile=void 0;const o=r(9100);t.StoredFile=class{constructor(e,t,r,n,s,i=(0,o.ulid)(),a=new Date){this.id=i,this.originalFilename=e,this.fileContents=t,this.mimeType=r,this.sessionId=n,this.workspaceName=s,this.createdAt=a}}},7627:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.createStreamProcessor=function(e,t,r){return{async*processStream(a,c,l){const d={value:""};let u="",f=0,p="";t.reset();try{s.default.info("[StreamProcessor] Starting to process stream");for await(const e of a){if(l?.aborted){s.default.info(`[StreamProcessor] Abort signal detected during stream processing after ${f} chunks`);break}f++,i.debugLogger.dumpObject(`Raw Gemini chunk #${f}`,e);let t="",n=!1;try{t=e.text(),e.candidates&&e.candidates[0]&&e.candidates[0].content&&e.candidates[0].content.finishReason&&(n=!0,s.default.info(`[StreamProcessor] Detected finishReason: ${e.candidates[0].content.finishReason}`))}catch(t){if(s.default.warn(`[StreamProcessor] Chunk #${f} has no text content.`),!(e.candidates&&e.candidates[0]&&e.candidates[0].content&&e.candidates[0].content.finishReason))continue;n=!0,s.default.info(`[StreamProcessor] Detected finishReason: ${e.candidates[0].content.finishReason} in textless chunk`)}u+=t;let a=p+t;p="",r.shouldBufferChunk(a)?(a.length<10?s.default.info(`[StreamProcessor] Buffering small chunk (${a.length} chars)`):r.endsWithBacktickOrPartialFence(a)?s.default.info("[StreamProcessor] Buffering chunk ending with potential fence marker"):r.endsWithTagStartOrPartialTag(a)&&s.default.info("[StreamProcessor] Buffering chunk ending with potential tag marker"),p=a):yield*o(a,d,n)}s.default.info(`[StreamProcessor] Finished processing stream loop with ${f} chunks`),p.length>0&&(s.default.info(`[StreamProcessor] Processing final buffered content: ${p.length} chars`),yield*o(p,d,!0),p=""),yield*e.finishCurrentBlockIfNeeded(),t.resetFencedToolCallState();const h={id:(0,n.ulid)(),taskId:c,role:"assistant",segments:[{type:"text",content:u}],providerId:"gemini",providerMetadata:{format:"structured"},createdAt:new Date};i.debugLogger.dumpObject("[StreamProcessor] Emitting final messageInterchange:",h),yield{type:"messageInterchange",messageInterchange:h}}catch(t){throw s.default.error(`[StreamProcessor] Error processing stream: ${t.message}`,t.stack),("AbortError"===t.name||t.message.includes("aborted"))&&s.default.info(`[StreamProcessor] Detected abort error during stream processing: ${t.message}`),yield*e.startNewBlock("error",null,`Stream processing error: ${t.message}`),yield*e.finishCurrentBlockIfNeeded(),t}}};async function*o(o,n,i){if(o.includes("```xml")&&!t.isInXmlFence()){const c=o.split("```xml",2);c[0].length>0&&(yield*e.appendOrStartText(c[0],n)),yield*e.finishCurrentBlockIfNeeded(),t.setInXmlFence(!0);const l=r.extractAfterFencedXmlStart(o),d=r.findPotentialToolName(l);if(d){s.default.info(`[StreamProcessor] Detected potential tool call in fenced XML: ${d}`),t.setInFencedToolCall(!0),t.setFencedToolCallName(d),t.setFencedXmlStarted(!0),t.setFencedXmlComplete(!1);const r=`<${d}>`;yield*e.startNewBlock("tool_call",d,r),yield*a(l,n,i)}else s.default.warn("[StreamProcessor] Found ```xml but no recognized tool tag immediately after. Treating as code."),yield*e.appendOrStartText(o,n);return}if(t.isInXmlFence())return t.isInFencedToolCall()?yield*a(o,n,i):yield*e.appendOrStartText(o,n),void(r.containsCompleteFenceEnd(o)&&t.setInXmlFence(!1));const c=r.findToolCallStart(o);if(c.found){const r=o.substring(0,c.index);r.length>0&&(yield*e.appendOrStartText(r,n),yield*e.finishCurrentBlockIfNeeded()),t.setInToolCall(!0),t.setCurrentToolName(c.toolName);const a=o.substring(c.index+c.length),l=`<${c.toolName}>`;return yield*e.startNewBlock("tool_call",c.toolName,l),void(yield*async function*(r,o,n){const i=t.getCurrentToolName();if(!i)return void s.default.error("[StreamProcessor] In tool call but no tool name set!");const a=`</${i}>`,c=r.indexOf(a);if(-1!==c){const n=r.substring(0,c);if(n.length>0){const t=e.safeEmitUpdate({appendContent:n});t&&(yield t),o.value+=n}const s=e.safeEmitUpdate({appendContent:a,newStatus:"finished"});s&&(yield s),o.value+=a,t.setBlockGenerating(!1),t.setCurrentBlockId(null),t.setCurrentBlockType(null),t.setCurrentTagName(null),t.setInToolCall(!1),t.setCurrentToolName(null);const i=r.substring(c+a.length);i.length>0&&(yield*e.appendOrStartText(i,o))}else{if(r.length>0){const t=e.safeEmitUpdate({appendContent:r});t&&(yield t),o.value+=r}if(n){s.default.warn(`[StreamProcessor] Stream finished, but closing tag </${i}> not found. Finishing block.`);const r=e.safeEmitUpdate({newStatus:"finished"});r&&(yield r),t.setBlockGenerating(!1),t.setCurrentBlockId(null),t.setCurrentBlockType(null),t.setCurrentTagName(null),t.setInToolCall(!1),t.setCurrentToolName(null)}}}(a,n,i))}i?yield*e.appendAndFinishText(o,n):yield*e.appendOrStartText(o,n)}async function*a(r,o,n){const i=r.search(/```\s*($|\n)/);if(-1!==i){const n=r.substring(0,i);if(n.length>0){const r=e.safeEmitUpdate({appendContent:n,newStatus:"finished"});r&&(yield r),o.value+=n,t.setBlockGenerating(!1),t.setCurrentBlockId(null),t.setCurrentBlockType(null),t.setCurrentTagName(null)}else{const r=e.safeEmitUpdate({newStatus:"finished"});r&&(yield r),t.setBlockGenerating(!1),t.setCurrentBlockId(null),t.setCurrentBlockType(null),t.setCurrentTagName(null)}t.setFencedXmlComplete(!0);const s=/```\s*($|\n)/.exec(r);if(s&&s.index+s[0].length<r.length){const t=r.substring(s.index+s[0].length);yield*e.appendOrStartText(t,o)}t.resetFencedToolCallState(),t.setInXmlFence(!1)}else{if(r.length>0){const t=e.safeEmitUpdate({appendContent:r});t&&(yield t),o.value+=r}if(n){s.default.warn("[StreamProcessor] Stream finished, but end fence ``` not found for tool call. Finishing block.");const r=e.safeEmitUpdate({newStatus:"finished"});r&&(yield r),t.setBlockGenerating(!1),t.setCurrentBlockId(null),t.setCurrentBlockType(null),t.setCurrentTagName(null),t.resetFencedToolCallState(),t.setInXmlFence(!1)}}}};const n=r(9100),s=o(r(9055)),i=r(6297)},7650:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ToolResult=t.ToolError=void 0;class r extends Error{constructor(e){super(e),this.name="ToolError"}}t.ToolError=r;class o{constructor(e="",t="",r=null){this.output=e,this.error=t,this.base64_image=r}replace({output:e=null,error:t=null,base64_image:r=null}){return new o(null!==e?e:this.output,null!==t?t:this.error,null!==r?r:this.base64_image)}}t.ToolResult=o},7655:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Story=t.StoryStatus=void 0;const o=r(9100);var n;!function(e){e.BACKLOG="backlog",e.IN_PROGRESS="in_progress",e.DONE="done"}(n||(t.StoryStatus=n={}));t.Story=class{constructor(e,t,r=[],s=n.BACKLOG,i=(0,o.ulid)(),a=new Date,c=new Date){this.id=i,this.title=e,this.description=t,this.status=s,this.acceptanceCriteria=r,this.createdAt=a,this.updatedAt=c}}},7660:e=>{"use strict";e.exports=require("tree-sitter-javascript")},7692:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AccessMcpResourceTool=void 0;const a=r(3563),c=i(r(9055)),l=r(2115);let d=o=class{constructor(e){this.mcpHubService=e,this.name="access_mcp_resource",this.description="Request to access a resource provided by a connected MCP server."}getUsageInstructions(e){return"## access_mcp_resource\nDescription: Request to access a resource provided by a connected MCP server. Resources represent data sources that can be used as context, such as files, API responses, or system information.\nParameters:\n- server_name: (required) The name of the MCP server providing the resource\n- uri: (required) The URI identifying the specific resource to access\nUsage:\n<access_mcp_resource>\n<server_name>server name here</server_name>\n<uri>resource URI here</uri>\n</access_mcp_resource>"}validateParams(e){return"string"==typeof e.server_name&&""!==e.server_name.trim()&&"string"==typeof e.uri&&""!==e.uri.trim()}async execute(e){const{server_name:t,uri:r}=e;c.default.info(`[${o.name}] Accessing MCP resource ${r} on server ${t}`);try{const e=await this.mcpHubService.readResource(t,r);return c.default.info(`[${o.name}] MCP resource ${r} accessed successfully`),e}catch(e){throw c.default.error(`[${o.name}] Error accessing MCP resource ${r}: ${e.message}\n${e.stack}`),new Error(`Error accessing MCP resource ${r}: ${e.message}`)}}};t.AccessMcpResourceTool=d,t.AccessMcpResourceTool=d=o=n([(0,a.Injectable)(),s("design:paramtypes",[l.McpHubService])],d)},7751:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ComputerToolBase=void 0;const o=r(5534),n=r(1569);class s extends o.Tool{constructor(){super(),this.name="computer",this.description='Interact with the screen, keyboard, and mouse of the current computer. Available actions:\n    - key: Send keyboard key events (requires text parameter with key sequence)\n    - type: Type text directly (requires text parameter with content to type)\n    - mouse_move: Move mouse cursor to coordinates (requires coordinate parameter [x, y])\n    - left_click: Perform a left mouse click at current position\n    - left_click_drag: Click and drag from current position to coordinates (requires coordinate parameter [x, y])\n    - right_click: Perform a right mouse click at current position\n    - middle_click: Perform a middle mouse click at current position\n    - double_click: Perform a double click at current position\n    - screenshot: Take a screenshot of the current screen\n    - cursor_position: Get the current cursor position\n    \n    Example: {"action": "type", "text": "Hello World"} or {"action": "mouse_move", "coordinate": [100, 200]}',this.schema=n.z.object({input:n.z.string().optional()}).transform((e=>{try{return JSON.parse(e.input||"{}")}catch(e){return{}}})),this.scale=parseFloat(process.env.SCALE||"0.5"),(isNaN(this.scale)||this.scale<=0||this.scale>1)&&(console.warn(`Invalid SCALE value ${process.env.SCALE}, defaulting to 0.5`),this.scale=.5),this.width=process.env.WIDTH?parseInt(process.env.WIDTH,10):null,this.height=process.env.HEIGHT?parseInt(process.env.HEIGHT,10):null,this.maxOutputChars=2e3}clipString(e){return e.length>this.maxOutputChars?e.slice(-this.maxOutputChars):e}async _call(e){return this.execute(e)}}t.ComputerToolBase=s},7773:e=>{"use strict";e.exports=require("langchain/tools")},7781:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.EpicsController=void 0;const i=r(3563),a=r(8610);let c=class{constructor(e){this.epicsService=e}async getRequirements(e,t){return{content:await this.epicsService.getRequirements(e,t)}}async updateRequirements(e,t,r){return{content:await this.epicsService.updateRequirements(e,t,r.content)}}async findAll(e){return this.epicsService.findAllEpics(e)}async findOne(e,t){return this.epicsService.findEpicById(e,t)}async create(e,t){return this.epicsService.createEpic(e,t.title,t.description)}async update(e,t,r){return this.epicsService.updateEpic(e,t,r.title,r.description)}async remove(e,t){return this.epicsService.deleteEpic(e,t)}async addStory(e,t,r){return this.epicsService.addStory(e,t,r.title,r.description,r.acceptanceCriteria)}async updateStory(e,t,r,o){return this.epicsService.updateStory(e,t,r,o.title,o.description,o.acceptanceCriteria)}async getStory(e,t,r){return this.epicsService.getStory(e,t,r)}async removeStory(e,t,r){return this.epicsService.deleteStory(e,t,r)}async addTask(e,t,r,o){return this.epicsService.addTask(e,t,r,o.title,o.description)}async updateTask(e,t,r,o,n){return this.epicsService.updateTask(e,t,r,o,n.title,n.description,n.status)}async removeTask(e,t,r,o){return this.epicsService.deleteTask(e,t,r,o)}async getTasks(e,t,r){return this.epicsService.getTasks(e,t,r)}async getTask(e,t,r,o){return this.epicsService.getTask(e,t,r,o)}};t.EpicsController=c,o([(0,i.Get)(":epicId/requirements"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),n("design:type",Function),n("design:paramtypes",[String,String]),n("design:returntype",Promise)],c.prototype,"getRequirements",null),o([(0,i.Put)(":epicId/requirements"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[String,String,Object]),n("design:returntype",Promise)],c.prototype,"updateRequirements",null),o([(0,i.Get)(),s(0,(0,i.Param)("workspaceName")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"findAll",null),o([(0,i.Get)(":epicId"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),n("design:type",Function),n("design:paramtypes",[String,String]),n("design:returntype",Promise)],c.prototype,"findOne",null),o([(0,i.Post)(),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[String,Object]),n("design:returntype",Promise)],c.prototype,"create",null),o([(0,i.Put)(":epicId"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[String,String,Object]),n("design:returntype",Promise)],c.prototype,"update",null),o([(0,i.Delete)(":epicId"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),n("design:type",Function),n("design:paramtypes",[String,String]),n("design:returntype",Promise)],c.prototype,"remove",null),o([(0,i.Post)(":epicId/stories"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[String,String,Object]),n("design:returntype",Promise)],c.prototype,"addStory",null),o([(0,i.Put)(":epicId/stories/:storyId"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Param)("storyId")),s(3,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[String,String,String,Object]),n("design:returntype",Promise)],c.prototype,"updateStory",null),o([(0,i.Get)(":epicId/stories/:storyId"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Param)("storyId")),n("design:type",Function),n("design:paramtypes",[String,String,String]),n("design:returntype",Promise)],c.prototype,"getStory",null),o([(0,i.Delete)(":epicId/stories/:storyId"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Param)("storyId")),n("design:type",Function),n("design:paramtypes",[String,String,String]),n("design:returntype",Promise)],c.prototype,"removeStory",null),o([(0,i.Post)(":epicId/stories/:storyId/tasks"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Param)("storyId")),s(3,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[String,String,String,Object]),n("design:returntype",Promise)],c.prototype,"addTask",null),o([(0,i.Put)(":epicId/stories/:storyId/tasks/:taskId"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Param)("storyId")),s(3,(0,i.Param)("taskId")),s(4,(0,i.Body)()),n("design:type",Function),n("design:paramtypes",[String,String,String,String,Object]),n("design:returntype",Promise)],c.prototype,"updateTask",null),o([(0,i.Delete)(":epicId/stories/:storyId/tasks/:taskId"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Param)("storyId")),s(3,(0,i.Param)("taskId")),n("design:type",Function),n("design:paramtypes",[String,String,String,String]),n("design:returntype",Promise)],c.prototype,"removeTask",null),o([(0,i.Get)(":epicId/stories/:storyId/tasks"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Param)("storyId")),n("design:type",Function),n("design:paramtypes",[String,String,String]),n("design:returntype",Promise)],c.prototype,"getTasks",null),o([(0,i.Get)(":epicId/stories/:storyId/tasks/:taskId"),s(0,(0,i.Param)("workspaceName")),s(1,(0,i.Param)("epicId")),s(2,(0,i.Param)("storyId")),s(3,(0,i.Param)("taskId")),n("design:type",Function),n("design:paramtypes",[String,String,String,String]),n("design:returntype",Promise)],c.prototype,"getTask",null),t.EpicsController=c=o([(0,i.Controller)("workspaces/:workspaceName/epics"),n("design:paramtypes",[a.EpicsService])],c)},7793:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ReadPortFromFile=void 0;const c=r(5534),l=r(1569),d=i(r(9896)),u=i(r(6928)),f=a(r(9055));class p extends c.Tool{constructor(e){super(),this.name="read_port_from_file",this.description="Read the content of a file from the portFromBaseDir in the workspace. Should only be used for reading files that are expected to be text based. Do not use this tool for binary files.",this.schema=l.z.object({filePath:l.z.string().describe("The relative path of the file to read")}),this.portFromBaseDir=e}async _call(e){return this.readFile(e.filePath)}readFile(e){f.default.info(`ReadPortFromFile.readFile called with: ${e}`);const t=u.join(this.portFromBaseDir,e);try{return d.readFileSync(t,"utf-8")}catch(t){return"ENOENT"===t.code?`Error: File not found - ${e}`:`Error reading file: ${t.message}`}}}t.ReadPortFromFile=p},7814:e=>{"use strict";e.exports=require("@modelcontextprotocol/sdk/client/stdio.js")},7823:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.StoredDocDTO=void 0;class r{constructor(e,t,r,o,n){this.id=e,this.mimeType=t,this.createdAt=r,this.sessionId=o,this.workspaceName=n}static fromStoredDoc(e){return new r(e.id,e.mimeType,e.createdAt,e.sessionId,e.workspaceName)}}t.StoredDocDTO=r},7852:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.SourceArtefactModule=void 0;const n=r(3563),s=r(4279),i=r(3153),a=r(5908),c=r(376),l=r(4358),d=r(4912);let u=class{};t.SourceArtefactModule=u,t.SourceArtefactModule=u=o([(0,n.Module)({imports:[c.DataSourceModule],controllers:[s.SourceArtefactController],providers:[i.SourceArtefactService,a.SourceArtefactRepository,d.MavenSourceArtefactScheme,{provide:l.SchemePackageManager,useFactory:e=>new l.SchemePackageManager([e]),inject:[d.MavenSourceArtefactScheme]}],exports:[i.SourceArtefactService]})],u)},7886:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},7890:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.createStreamProcessor=function(e,t,r){return{async*processStream(r,o,n){const c={value:""};let l="",d=0;t.reset();try{i.default.info("[StreamProcessor] Starting to process stream");for await(const o of r){if(n?.aborted){i.default.info(`[StreamProcessor] Abort signal detected during stream processing after ${d} chunks`);break}switch(d++,a.debugLogger.dumpObject(`Raw Anthropic chunk #${d}`,o),o.type){case"message_start":const r=o.message.usage;yield{type:"usage",inputTokens:r.input_tokens||0,outputTokens:r.output_tokens||0,cacheWriteTokens:r.cache_creation_input_tokens||void 0,cacheReadTokens:r.cache_read_input_tokens||void 0};break;case"message_delta":yield*e.flushBuffer(),yield{type:"usage",inputTokens:0,outputTokens:o.usage.output_tokens||0};break;case"message_stop":yield*e.flushBuffer();break;case"content_block_start":const{content_block:n}=o;switch(n.type){case"thinking":const r=n.thinking?.trim()?n.thinking:"";yield*e.startNewBlock("thinking","thinking",r),n.thinking?.trim()&&t.setThinkingContent(n.thinking);break;case"redacted_thinking":yield*e.startNewBlock("thinking","thinking","[Redacted thinking block]"),t.setThinkingContent("[Redacted thinking block]");break;case"text":let s=n.text||"";o.index>0&&t.isBlockGenerating()?yield*e.appendOrStartText("\n"+s,c):s.trim()&&(yield*e.startNewBlock("text",null,s));break;case"tool_use":a.debugLogger.log(`Detected tool_use content block: ${n.name}`),a.debugLogger.dumpObject("Tool use content block",n),yield*e.startNewBlock("tool_call",n.name,JSON.stringify(n.input,null,2))}break;case"content_block_delta":const{delta:s}=o;switch(s.type){case"thinking_delta":if("thinking"===t.getCurrentBlockType()&&t.isBlockGenerating()){const r=e.safeEmitUpdate({appendContent:s.thinking});r&&(yield r),t.appendThinkingContent(s.thinking)}else i.default.info("[StreamProcessor] Received thinking_delta but not in a thinking block. Starting new thinking block."),yield*e.startNewBlock("thinking","thinking",s.thinking),t.setThinkingContent(s.thinking);break;case"text_delta":yield*this.processTextDelta(s.text,c),l+=s.text;break;case"signature_delta":"thinking"===t.getCurrentBlockType()&&t.isBlockGenerating()&&s.signature&&(i.default.debug("[StreamProcessor] Received signature_delta, storing."),t.setThinkingSignature(s.signature))}break;case"content_block_stop":if(i.default.debug(`[StreamProcessor] content_block_stop: index=${o.index}`),t.isBuffering()){i.default.warn(`[StreamProcessor] Flushing tag buffer due to content_block_stop: "${t.getTagBuffer()}"`);const r=t.getTagBuffer();t.setBuffering(!1),t.setTagBuffer(""),yield*e.appendOrStartText(r,c)}yield*e.flushBuffer(),yield*e.finishCurrentBlockIfNeeded()}}if(i.default.info(`[StreamProcessor] Finished processing stream loop with ${d} chunks`),t.isBuffering()){i.default.warn(`[StreamProcessor] Stream ended with unflushed tag buffer. Forcing flush: "${t.getTagBuffer()}"`);const r=t.getTagBuffer();t.setBuffering(!1),t.setTagBuffer(""),yield*e.appendOrStartText(r,c)}yield*e.flushBuffer(),yield*e.finishCurrentBlockIfNeeded();const u={id:(0,s.ulid)(),taskId:o,role:"assistant",segments:[],providerId:"anthropic",createdAt:new Date},f=t.getThinkingContent(),p=t.getThinkingSignature();f&&u.segments.push({type:"thinking",content:f,metadata:p?{signature:p}:void 0}),u.segments.push({type:"text",content:l||c.value}),a.debugLogger.dumpObject("[StreamProcessor] Emitting final messageInterchange:",u),yield{type:"messageInterchange",messageInterchange:u}}catch(t){throw i.default.error(`[StreamProcessor] Error processing stream: ${t.message}`,t.stack),("AbortError"===t.name||t.message.includes("aborted"))&&i.default.info(`[StreamProcessor] Detected abort error during stream processing: ${t.message}`),yield*e.createErrorBlock(`Stream processing error: ${t.message}`),t}},async*processTextDelta(o,s){let c=o;if(s.value+=o,t.isPartialClosingTag()){t.appendPartialClosingTagBuffer(c);const r=t.getPartialClosingTagBuffer();if(!r.includes(">"))return i.default.debug(`[StreamProcessor] Still buffering partial closing tag: "${r}"`),void(c="");if(t.setPartialClosingTag(!1),t.setPartialClosingTagBuffer(""),t.isBlockGenerating()){const o=e.safeEmitUpdate({appendContent:r,newStatus:"finished"});o&&(yield o),t.setBlockGenerating(!1),t.setCurrentBlockId(null),t.setCurrentBlockType(null),t.setCurrentTagName(null)}t.setInsideXmlTag(!1),t.setCurrentXmlTagName(null),c=""}if(t.isBuffering()){t.appendTagBuffer(c),c="";const o=r.analyzeBuffer(t.getTagBuffer());if(o.isCompleteTag){const r=t.getTagBuffer();t.setBuffering(!1),t.setTagBuffer(""),o.isValidTag&&o.tagName?n.TOOL_CALL_TAGS.includes(o.tagName)?(yield*e.startNewBlock("tool_call",o.tagName,r),t.setInsideXmlTag(!0),t.setCurrentXmlTagName(o.tagName),i.default.debug(`[StreamProcessor] Entered XML tag from buffer: ${o.tagName}`)):(yield*e.startNewBlock("thinking",o.tagName,r),t.setInsideXmlTag(!0),t.setCurrentXmlTagName(o.tagName),i.default.debug(`[StreamProcessor] Entered XML tag from buffer: ${o.tagName}`)):(i.default.debug(`[StreamProcessor] Buffer resolved as plain text: "${r}"`),yield*e.appendOrStartText(r,s))}else{if(r.shouldContinueBuffering(t.getTagBuffer(),256))return void i.default.debug(`[StreamProcessor] Still buffering: "${t.getTagBuffer()}"`);{const r=t.getTagBuffer();t.setBuffering(!1),t.setTagBuffer(""),i.default.debug(`[StreamProcessor] Buffer resolved as plain text (too large or invalid): "${r}"`),yield*e.appendOrStartText(r,s)}}}for(;c;){let o=!1;if(t.isInsideXmlTag()&&t.getCurrentXmlTagName()&&!t.isInCodeBlock()){const l=r.findClosingTag(c,t.getCurrentXmlTagName());if(l.found){if(l.contentBefore&&(yield*e.appendOrStartText(l.contentBefore,s)),t.isBlockGenerating()){const t=e.safeEmitUpdate({appendContent:l.closingTag});t&&(yield t)}yield*e.finishCurrentBlockIfNeeded();const r=t.getCurrentXmlTagName();t.setInsideXmlTag(!1),t.setCurrentXmlTagName(null),i.default.debug(`[StreamProcessor] Exited XML tag: </${r}>`),n.TOOL_CALL_TAGS.includes(r)&&l.contentAfter&&l.contentAfter.trim()?(i.default.error(`[StreamProcessor] CRITICAL: Unexpected content received after closing tool call tag </${r}>. Discarding.`),a.debugLogger.log(`[StreamProcessor] Discarded content after </${r}>: "${l.contentAfter}"`),c=""):c=l.contentAfter||"",o=!0;continue}{const n=r.findPartialClosingTagAtEnd(c,t.getCurrentXmlTagName());if(n.found){n.contentBefore&&(yield*e.appendOrStartText(n.contentBefore,s)),t.setPartialClosingTag(!0),t.setPartialClosingTagBuffer(n.partialTag),i.default.debug(`[StreamProcessor] Started buffering partial closing tag: "${n.partialTag}"`),c="",o=!0;continue}}}if(t.isInCodeBlock()){const n=r.findCodeBlockEnd(c);if(n.found){const r=c.substring(0,n.index+3);yield*e.appendOrStartText(r,s),t.setInCodeBlock(!1),i.default.debug("[StreamProcessor] Exited code block mode."+(t.isInsideXmlTag()?` Still inside XML tag: ${t.getCurrentXmlTagName()}`:"")),c=n.contentAfter||"",o=!0;continue}i.default.debug(`[StreamProcessor] Appending inside code block: "${c}"`),yield*e.appendOrStartText(c,s),c="",o=!0}else{const n=r.findCodeBlockStart(c);if(n.found){const a=c.substring(0,n.index);a&&(yield*e.appendOrStartText(a,s)),t.setInCodeBlock(!0),i.default.debug("[StreamProcessor] Entered code block mode."+(t.isInsideXmlTag()?` Inside XML tag: ${t.getCurrentXmlTagName()}`:""));const l=c.substring(n.index),d=r.findCodeBlockEnd(l.substring(3));if(d.found){const r=l.substring(0,d.index+6),o=l.substring(d.index+6);yield*e.appendOrStartText(r,s),t.setInCodeBlock(!1),i.default.debug("[StreamProcessor] Exited code block mode (same chunk)."+(t.isInsideXmlTag()?` Still inside XML tag: ${t.getCurrentXmlTagName()}`:"")),c=o}else i.default.debug(`[StreamProcessor] Yielding start of code block: "${l}"`),yield*e.appendOrStartText(l,s),c="";o=!0;continue}}if(!t.isInCodeBlock()&&!t.isInsideXmlTag()){const a=r.findOpeningTag(c);if(a.found){const r=c.substring(0,a.index);r&&r.trim()&&(yield*e.appendOrStartText(r,s)),n.TOOL_CALL_TAGS.includes(a.tagName)?(yield*e.startNewBlock("tool_call",a.tagName,a.content),t.setInsideXmlTag(!0),t.setCurrentXmlTagName(a.tagName),i.default.debug(`[StreamProcessor] Entered XML tag: ${a.tagName}`)):(yield*e.startNewBlock("thinking",a.tagName,a.content),t.setInsideXmlTag(!0),t.setCurrentXmlTagName(a.tagName),i.default.debug(`[StreamProcessor] Entered XML tag: ${a.tagName}`)),c=c.substring(a.index+a.content.length),o=!0;continue}}const l=r.findPartialTagAtEnd(c);l.found?(l.contentBefore&&(yield*e.appendOrStartText(l.contentBefore,s)),t.setBuffering(!0),t.setTagBuffer(l.partialTag),c="",o=!0):(!o&&c&&(i.default.debug(`[StreamProcessor] Appending as plain text (insideXmlTag=${t.isInsideXmlTag()}, inCodeBlock=${t.isInCodeBlock()}): "${c}"`),yield*e.appendOrStartText(c,s),c="",o=!0),!o&&c&&(i.default.error(`[StreamProcessor] Infinite loop detected in processTextDelta! Remaining text: "${c}"`),yield*e.appendOrStartText(c,s),c=""))}}}};const n=r(1685),s=r(9100),i=o(r(9055)),a=r(6297)},7915:e=>{"use strict";e.exports=require("@langchain/community/document_loaders/fs/unstructured")},7916:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.GeminiAdapter=void 0;const s=r(3563),i=r(1926),a=r(9100),c=r(5562);let l=class{constructor(e){this.provider=e,this.id="gemini",this.name="Google Gemini"}getProvider(){return this.provider}getModelClient(e){return this.provider.getModelClient(e)}toProviderFormat(e){return e.map((e=>(0,c.convertEveMessageToGemini)(e)))}fromProviderFormat(e){return e.map((e=>{const t=[];if(e.parts&&Array.isArray(e.parts))for(const r of e.parts)if("text"in r&&r.text){const e=r.text.match(/\[Thinking:(.*?)\]/s);if(e){t.push({type:"thinking",content:e[1].trim(),metadata:{}});const o=r.text.replace(/\[Thinking:.*?\]/s,"").trim();o&&t.push({type:"text",content:o})}else t.push({type:"text",content:r.text})}else"inlineData"in r&&r.inlineData&&t.push({type:"other",content:"[Image data]",metadata:{providerSpecificType:"image",mimeType:r.inlineData.mimeType,data:r.inlineData.data}});else"string"==typeof e.parts&&t.push({type:"text",content:e.parts});return{id:(0,a.ulid)(),taskId:"",role:"model"===e.role?"assistant":"user",segments:t,providerId:"gemini",providerMetadata:{format:"structured"},createdAt:new Date}}))}extractMetadata(e){return{format:"structured"}}supportsThinking(){return!1}supportsFormatConversion(e){return!0}};t.GeminiAdapter=l,t.GeminiAdapter=l=o([(0,s.Injectable)(),n("design:paramtypes",[i.GeminiProvider])],l)},7967:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigModule=void 0;const n=r(3563),s=r(5015),i=r(2368),a=r(5699),c=r(3713),l=r(376);let d=class{};t.ConfigModule=d,t.ConfigModule=d=o([(0,n.Module)({imports:[l.DataSourceModule],controllers:[s.ConfigController],providers:[i.ConfigService,a.ConfigPropertyRepository,c.ConfigPropertyDescriptor,c.ConfigSection,c.ConfigDescriptors],exports:[i.ConfigService,a.ConfigPropertyRepository,c.ConfigPropertyDescriptor,c.ConfigSection,c.ConfigDescriptors]})],d)},8010:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ToolExecutorService=void 0;const f=r(3563),p=r(461),h=r(9100),m=c(r(857)),g=c(r(8787)),y=u(r(9055)),v=r(6297),_=r(6780),w=r(5324),k=r(6550),b=r(6349),S=r(2398),T=r(8474),O=r(538),P=r(6292),$=r(5499),I=r(2776),E=r(3563),R=r(5444),C=r(1280),A=r(9581);let M=n=class{constructor(e,t,r,o,s,i,a,c,l,d){this.eventEmitter=e,this.blockService=t,this.conversationHistoryService=r,this.toolProvider=o,this.mainWorkspaceService=s,this.homeService=i,this.personaRegistry=a,this.toolResultTransformerService=c,this.appDataSource=l,this.taskService=d,this.setupEventListeners(),y.default.info(`[${n.name}] ToolExecutorService initialized`)}setupEventListeners(){y.default.info(`[${n.name}] Setting up event listeners`)}decodeHtmlEntitiesInParams(e){if("string"==typeof e)return g.decode(e);if(Array.isArray(e))return e.map((e=>this.decodeHtmlEntitiesInParams(e)));if("object"==typeof e&&null!==e){const t={};for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=this.decodeHtmlEntitiesInParams(e[r]));return t}return e}async handleToolCallDetected(e){const{clientId:t,taskId:r,blockId:o,toolName:s}=e;y.default.info(`[${n.name}] Tool call detected for tool ${s} (blockId: ${o})`);try{const e=await this.blockService.getBlock(o);if(!e)throw new Error(`Block ${o} not found for tool ${s}`);y.default.debug(`[${n.name}] Raw block content for ${o}:\n${e.content}`);let i=null,a=!1;try{i=JSON.parse(e.content),a=!0,y.default.info(`[${n.name}] Successfully parsed block content as JSON for block ${o}.`)}catch(a){y.default.info(`[${n.name}] Block content for ${o} is not valid JSON. Attempting XML parsing.`),y.default.debug(`[${n.name}] Full block content for ${o}:\n${e.content}`);try{if(i=(0,_.parseToolParams)(e.content,s),!i)throw y.default.error(`[${n.name}] Failed to parse XML content for tool ${s}. Full block content:\n${e.content}`),new Error(`Failed to parse XML content for tool ${s}`);y.default.info(`[${n.name}] Successfully parsed block content as XML for tool ${s} (block ${o}).`)}catch(e){return y.default.error(`[${n.name}] Failed to parse parameters for tool ${s} from block ${o}. Content was neither valid JSON nor parsable XML. Error: ${e.message}`),await this.blockService.updateBlock(o,{status:"error",errorText:`Failed to parse tool parameters: ${e.message}`}),await this.taskService.updateTask({taskId:r,status:R.TaskStatus.WAITING_FOR_INPUT}),void this.eventEmitter.emit(C.InternalEvents.TOOL_EXECUTION_COMPLETED,{clientId:t,taskId:r,blockId:o,toolName:s,result:{error:`Failed to parse tool parameters: ${e.message}`},status:"error"})}}if(!i)return y.default.error(`[${n.name}] Parameters object is null after parsing attempts for block ${o}. Cannot proceed.`),y.default.error(`[${n.name}] Full block content for ${o}:\n${e.content}`),await this.blockService.updateBlock(o,{status:"error",errorText:"Internal error: Parameter parsing resulted in null."}),await this.taskService.updateTask({taskId:r,status:R.TaskStatus.WAITING_FOR_INPUT}),void this.eventEmitter.emit(C.InternalEvents.TOOL_EXECUTION_COMPLETED,{clientId:t,taskId:r,blockId:o,toolName:s,result:{error:"Internal error: Parameter parsing resulted in null."},status:"error"});const c=this.decodeHtmlEntitiesInParams(i);y.default.debug(`[${n.name}] Decoded parameters for tool ${s} (block ${o}):`,c);const l=c.requires_approval;let d;if(void 0!==l)d="string"==typeof l?"true"===l.toLowerCase():!!l,y.default.info(`[${n.name}] Approval requirement determined by explicit 'requires_approval' parameter: ${d}`);else{d=!await this.shouldAutoApproveTool(r,s,c),y.default.info(`[${n.name}] Approval requirement determined by auto-approval logic: ${d}`)}d?(y.default.info(`[${n.name}] Tool ${s} requires user approval.`),await this.blockService.updateBlock(o,{status:"question"})):(y.default.info(`[${n.name}] Tool ${s} is auto-approved. Proceeding with execution.`),await this.executeToolForBlock(t,r,o,s,c))}catch(e){const i=e instanceof Error?e.message:String(e);y.default.error(`[${n.name}] Unhandled error during tool call detection/approval for ${s} (block ${o}): ${i}\n${e instanceof Error?e.stack:""}`);try{await this.blockService.updateBlock(o,{status:"error",errorText:`Error handling tool call: ${i}`}),await this.taskService.updateTask({taskId:r,status:R.TaskStatus.WAITING_FOR_INPUT}),y.default.info(`[${n.name}] Task ${r} status set back to ${R.TaskStatus.WAITING_FOR_INPUT} due to error during tool call handling.`),this.eventEmitter.emit(C.InternalEvents.TOOL_EXECUTION_COMPLETED,{clientId:t,taskId:r,blockId:o,toolName:s,result:{error:i},status:"error"})}catch(e){const t=e instanceof Error?e.message:String(e);y.default.error(`[${n.name}] Failed to update block/task status after error for block ${o}: ${t}`)}}}async executeToolForBlock(e,t,r,o,s){y.default.info(`[${n.name}] Executing tool ${o} for block ${r}`);if((await this.taskService.getTask(t)).status===R.TaskStatus.USER_CANCELLED)return y.default.info(`[${n.name}] Task ${t} is cancelled, not executing tool ${o}`),await this.blockService.updateBlock(r,{status:"error",errorText:"Tool execution cancelled by user"}),void this.eventEmitter.emit(C.InternalEvents.TOOL_EXECUTION_COMPLETED,{clientId:e,taskId:t,blockId:r,toolName:o,result:{error:"Tool execution cancelled by user"},status:"error"});await this.taskService.updateTask({taskId:t,status:R.TaskStatus.EXECUTING_TOOL}),y.default.info(`[${n.name}] Task ${t} status set to ${R.TaskStatus.EXECUTING_TOOL}`);try{if(await this.blockService.updateBlock(r,{status:"executing"}),!await this.isValidTool(t,o))throw new Error(`Tool ${o} is not valid for task ${t}`);const n=await this.getTask(t);let i;const a=n.workspaceName;if(!a)throw new Error(`Task ${t} has no associated workspace name`);{const e=await this.mainWorkspaceService.findOne(a);if(!e)throw new E.NotFoundException(`Workspace '${a}' not found`);i=e.repoBaseDir}const c=await this.homeService.getUserData(),l={workingDir:i,user:{userId:n.userId,email:c.email},osInfo:{platform:m.platform(),release:m.release(),homeDir:m.homedir(),shell:process.env.SHELL||"/bin/bash"},currentMode:n.mode||"act",currentTime:(new Date).toISOString()},d=this.toolProvider.getTools([o],l);if(0===d.length)throw new Error(`Tool not found: ${o}`);const u=d[0],f=await this.executeTool(u,s);await this.createToolResultMessage(t,o,f),await this.blockService.updateBlock(r,{status:"completed",output:"string"==typeof f?f:JSON.stringify(f)});const p=this.toolResultTransformerService.transformForClient(o,f);this.eventEmitter.emit(C.InternalEvents.TOOL_EXECUTION_COMPLETED,{clientId:e,taskId:t,blockId:r,toolName:o,result:f,status:"success"}),this.eventEmitter.emit(C.InternalEvents.TOOL_EXECUTED,{clientId:e,taskId:t,toolName:o,result:p,blockId:r,wasTransformed:this.toolResultTransformerService.hasTransformerFor(o)})}catch(s){y.default.error(`[${n.name}] Error executing tool ${o} for block ${r}: ${s.message}`);const i=s instanceof A.EveAgentError?s:new A.ToolExecutionError(s.message||"Unknown tool execution error",o,s.code||"TOOL_EXECUTION_ERROR",{originalError:s},!1);await this.blockService.updateBlock(r,{status:"error",errorText:i.message}),await this.createToolErrorMessage(t,o,i),this.eventEmitter.emit(C.InternalEvents.TOOL_EXECUTION_COMPLETED,{clientId:e,taskId:t,blockId:r,toolName:o,result:{error:i.message,code:i.code,context:i.context},status:"error"}),this.eventEmitter.emit(C.InternalEvents.TOOL_ERROR,{clientId:e,taskId:t,error:i.toUserMessage(),type:"tool_error",code:i.code,context:{toolName:o,blockId:r}})}}async createToolResultMessage(e,t,r){const o={id:(0,h.ulid)(),taskId:e,role:"user",segments:[{type:"text",content:this.formatToolResultMessage(t,r)}],providerId:"system",createdAt:new Date};await this.conversationHistoryService.addMessage(e,o)}async createToolErrorMessage(e,t,r){const o={id:(0,h.ulid)(),taskId:e,role:"user",segments:[{type:"text",content:this.formatToolErrorMessage(t,r)}],providerId:"system",createdAt:new Date};await this.conversationHistoryService.addMessage(e,o)}formatToolResultMessage(e,t){let r;try{r="string"==typeof t?t:JSON.stringify(t,null,2)}catch(e){r="[Complex result that cannot be stringified]"}return`[${e} result]\n${r}`}formatToolErrorMessage(e,t){return`[${e} error] ${t.message}\n${t.code?`Error code: ${t.code}\n`:""}${t.context?.failureSuggestion?`Suggestion: ${t.context.failureSuggestion}`:""}`}async getTask(e){try{const t=await this.appDataSource.knex("eve_tasks").where({taskId:e}).first();if(!t)throw new Error(`Task ${e} not found`);return t}catch(e){throw y.default.error(`[${n.name}] Error getting task: ${e.message}\n${e.stack}`),new Error(`Failed to get task: ${e.message}`)}}async shouldAutoApproveTool(e,t,r){v.debugLogger.log(`Checking auto-approval for tool ${t} for task ${e}`);try{const e=["read_file","list_files","list_code_definition_names","search_files","replace_in_file","write_to_file"];if(r&&void 0!==r.requires_approval){const e="string"==typeof r.requires_approval?"true"===r.requires_approval.toLowerCase():!!r.requires_approval;return v.debugLogger.log(`Tool ${t} has explicit requires_approval: ${e}`),!e}const o=e.includes(t);return v.debugLogger.log(`Auto-approval result for ${t}: ${o}`),o}catch(e){return y.default.error(`[${n.name}] Error checking auto-approval for tool ${t}: ${e.message}\n${e.stack}`),!1}}async getTools(){const e=process.cwd();y.default.warn(`[${n.name}] getTools using default working directory: ${e}. Implement proper default workspace handling.`);const t={workingDir:e,user:{userId:"default",email:"default@example.com"},osInfo:{platform:m.platform(),release:m.release(),homeDir:m.homedir(),shell:process.env.SHELL||"/bin/bash"},currentMode:"act",currentTime:(new Date).toISOString()},r=this.toolProvider.getAllToolFactories().map((e=>e.getToolName()));return this.toolProvider.getTools(r,t)}async isValidTool(e,t){try{const r=await this.getTask(e),o=this.personaRegistry.getPersona(r.personaId);return o.getToolNames().includes(t)}catch(e){return y.default.error(`[${n.name}] Error checking if tool is valid: ${e.message}\n${e.stack}`),!1}}async getToolInstance(e,t){try{const r=await this.getTask(e);let o;const n=r.workspaceName;if(!n)throw new Error(`Task ${e} has no associated workspace name.`);{const t=await this.mainWorkspaceService.findOne(n);if(!t)throw new E.NotFoundException(`Workspace '${n}' not found when getting tool instance for task ${e}`);o=t.repoBaseDir}const s=await this.homeService.getUserData(),i={workingDir:o,user:{userId:r.userId,email:s.email},osInfo:{platform:m.platform(),release:m.release(),homeDir:m.homedir(),shell:process.env.SHELL||"/bin/bash"},currentMode:r.mode||"act",currentTime:(new Date).toISOString()},a=this.toolProvider.getTools([t],i);return a.length>0?a[0]:void 0}catch(e){return void y.default.error(`[${n.name}] Error getting tool instance for ${t}: ${e.message}\n${e.stack}`)}}async executeTool(e,t){y.default.info(`[${n.name}] Executing tool: ${e.name}`),y.default.debug(`[${n.name}] Params type before validation: ${typeof t}`);let r=t;if("string"==typeof t)try{y.default.debug(`[${n.name}] Attempting to parse params string as JSON`);let e=t;e=e.replace(/"\s*"([^"]+)":/g,'","$1":'),r=JSON.parse(e),y.default.debug(`[${n.name}] Successfully parsed params string to object`)}catch(e){y.default.error(`[${n.name}] Failed to parse params string: ${e.message}`)}r&&"string"==typeof r.requires_approval&&(y.default.debug(`[${n.name}] Converting requires_approval from string "${r.requires_approval}" to boolean.`),r.requires_approval="true"===r.requires_approval.toLowerCase(),y.default.debug(`[${n.name}] Converted requires_approval is now type: ${typeof r.requires_approval}, value: ${r.requires_approval}`));try{y.default.debug(`[${n.name}] Params value before validation: ${JSON.stringify(r,null,2)}`)}catch(e){y.default.error(`[${n.name}] Could not stringify params before validation: ${e.message}`),y.default.debug(`[${n.name}] Params raw value before validation:`,r)}if(!e.validateParams(r))throw y.default.error(`[${n.name}] Invalid parameters for tool ${e.name}: ${JSON.stringify(r)}`),new Error(`Invalid parameters for tool ${e.name}`);try{const t=await e.execute(r);return y.default.info(`[${n.name}] Tool ${e.name} executed successfully`),t}catch(t){throw y.default.error(`[${n.name}] Error executing tool ${e.name}: ${t.message}\n${t.stack}`),new Error(`Error executing tool ${e.name}: ${t.message}`)}}};t.ToolExecutorService=M,a([(0,p.OnEvent)(C.InternalEvents.TOOL_CALL_DETECTED),l("design:type",Function),l("design:paramtypes",[Object]),l("design:returntype",Promise)],M.prototype,"handleToolCallDetected",null),t.ToolExecutorService=M=n=a([(0,f.Injectable)(),d(9,(0,f.Inject)((0,f.forwardRef)((()=>k.TaskService)))),l("design:paramtypes",[p.EventEmitter2,w.BlockService,b.ConversationHistoryService,S.ToolProvider,T.WorkspaceService,O.HomeService,P.PersonaRegistry,$.ToolResultTransformerService,I.AppDataSource,k.TaskService])],M)},8077:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DatasetService=void 0;const u=r(3563),f=r(9896),p=d(r(9055)),h=c(r(6928)),m=r(4623),g=r(1747),y=r(7184),v=r(6932),_=r(8460),w=r(8884),k=c(r(857));let b=n=class{constructor(e,t,r){this.datasetRepository=e,this.documentRepository=t,this.indexingService=r}async getAllDatasets(){return this.datasetRepository.findAll()}async getDatasetById(e){return this.datasetRepository.findById(e)}async createDataset(e,t){const r=(0,w.getEnv)("DATASETS_BASE_DIR",h.join(k.homedir(),".eve","datasets")),o=t||h.join(r,e);await f.promises.mkdir(o,{recursive:!0});const n=new m.Dataset(e,o);return await this.datasetRepository.create(n),n}async updateDataset(e,t){await this.datasetRepository.update(e,t)}async deleteDataset(e){const t=await this.documentRepository.findAll(e);for(const e of t)await this.deleteDocument(e.id);await this.datasetRepository.delete(e)}async getDocuments(e){return this.documentRepository.findAll(e)}async getDocumentById(e){return this.documentRepository.findById(e)}async createDocument(e,t,r,o){const s=await this.getDatasetById(e);if(!s)throw new Error("Dataset not found");const i=new g.DatasetDocument(e,t,r);await this.documentRepository.create(i);const a=h.join(s.baseDir,t);return await f.promises.mkdir(h.dirname(a),{recursive:!0}),await f.promises.writeFile(a,o),this.indexingService.indexDocument(i.id,e,a).catch((e=>{p.default.error(`[${n.name}] Failed to index document ${i.id}: ${e.message}\n${e.stack}`)})),i}async updateDocumentStatus(e,t){await this.documentRepository.updateStatus(e,t)}async deleteDocument(e){const t=await this.documentRepository.findById(e);if(!t)throw new Error("Document not found");const r=await this.getDatasetById(t.datasetId);if(!r)throw new Error("Dataset not found");try{await this.indexingService.removeDocumentFromIndex(e,r.name)}catch(t){p.default.error(`[${n.name}] Error removing document ${e} from index:`,t)}const o=h.join(r.baseDir,t.filename);try{await f.promises.unlink(o)}catch(e){p.default.error(`[${n.name}] Error deleting file ${o}:`,e)}await this.documentRepository.delete(e)}};t.DatasetService=b,t.DatasetService=b=n=a([(0,u.Injectable)(),l("design:paramtypes",[y.DatasetRepository,v.DatasetDocumentRepository,_.DatasetIndexingService])],b)},8144:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.StoredDocController=void 0;const i=r(3563),a=r(3381),c=r(7823);let l=class{constructor(e){this.storedDocService=e}async storeDoc(e,t,r){const o=await this.storedDocService.storeDoc(e,t,r);return c.StoredDocDTO.fromStoredDoc(o)}async getDoc(e){return this.storedDocService.getDoc(e)}async getDocContent(e,t){const r=await this.storedDocService.getDoc(e);if(!r)throw new Error(`Document not found with id: ${e}`);t.setHeader("Content-Type",r.mimeType),t.send(r.contents)}async getDocsBySession(e){return(await this.storedDocService.getDocsBySession(e)).map((e=>c.StoredDocDTO.fromStoredDoc(e)))}async getDocsByWorkspace(e){return(await this.storedDocService.getDocsByWorkspace(e)).map((e=>c.StoredDocDTO.fromStoredDoc(e)))}};t.StoredDocController=l,o([(0,i.Post)(),s(0,(0,i.Body)("contents")),s(1,(0,i.Query)("sessionId")),s(2,(0,i.Query)("workspaceName")),n("design:type",Function),n("design:paramtypes",[String,String,String]),n("design:returntype",Promise)],l.prototype,"storeDoc",null),o([(0,i.Get)(":id"),s(0,(0,i.Param)("id")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],l.prototype,"getDoc",null),o([(0,i.Get)(":id/contents"),s(0,(0,i.Param)("id")),s(1,(0,i.Res)()),n("design:type",Function),n("design:paramtypes",[String,Object]),n("design:returntype",Promise)],l.prototype,"getDocContent",null),o([(0,i.Get)("session/:sessionId"),s(0,(0,i.Param)("sessionId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],l.prototype,"getDocsBySession",null),o([(0,i.Get)("workspace/:workspaceName"),s(0,(0,i.Param)("workspaceName")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],l.prototype,"getDocsByWorkspace",null),t.StoredDocController=l=o([(0,i.Controller)("stored-docs"),n("design:paramtypes",[a.StoredDocService])],l)},8190:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.CancellationResetService=void 0;const c=r(3563),l=r(461),d=a(r(9055)),u=r(5324),f=r(6550),p=r(1280),h=r(5444);let m=o=class{constructor(e,t,r){this.blockService=e,this.taskService=t,this.eventEmitter=r,this.cancelledTasks=new Map,this.setupListeners(),d.default.info(`[${o.name}] CancellationResetService initialized`)}setupListeners(){this.eventEmitter.on(p.InternalEvents.TASK_UPDATED,(e=>{e.status===h.TaskStatus.USER_CANCELLED?this.handleTaskCancellation(e.taskId):this.cancelledTasks.has(e.taskId)&&(d.default.info(`[${o.name}] Task ${e.taskId} status changed to ${e.status}, clearing reset timeout.`),clearTimeout(this.cancelledTasks.get(e.taskId)),this.cancelledTasks.delete(e.taskId))})),d.default.info(`[${o.name}] Listening for TASK_STATUS_UPDATED events`)}handleTaskCancellation(e){d.default.info(`[${o.name}] Task ${e} cancelled. Setting reset timeout.`),this.cancelledTasks.has(e)&&clearTimeout(this.cancelledTasks.get(e));const t=setTimeout((()=>this.checkAndResetTask(e)),2e3);this.cancelledTasks.set(e,t)}async checkAndResetTask(e){this.cancelledTasks.delete(e);try{d.default.info(`[${o.name}] Checking if cancelled task ${e} can be reset to waiting_for_input.`);const t=await this.taskService.getTask(e);if(t.status!==h.TaskStatus.USER_CANCELLED)return void d.default.info(`[${o.name}] Task ${e} is no longer cancelled (status: ${t.status}), not resetting.`);const r=(await this.blockService.getBlocksForTask(e)).slice(-5);if(r.some((e=>"generating"===e.status||"executing"===e.status))){const t=r.filter((e=>"generating"===e.status||"executing"===e.status)).map((e=>`${e.blockId} (${e.status})`)).join(", ");d.default.info(`[${o.name}] Task ${e} still has active blocks: [${t}]. Setting another timeout.`);const n=setTimeout((()=>this.checkAndResetTask(e)),1e3);this.cancelledTasks.set(e,n)}else d.default.info(`[${o.name}] Task ${e} has no active blocks. Resetting to waiting_for_input.`),await this.taskService.updateTask({taskId:e,status:h.TaskStatus.WAITING_FOR_INPUT,result:JSON.stringify({details:"Task was cancelled and has now been reset. You can continue."})})}catch(t){d.default.error(`[${o.name}] Error checking/resetting task ${e}: ${t.message}\n${t.stack}`);const r=setTimeout((()=>this.checkAndResetTask(e)),2e3);this.cancelledTasks.set(e,r)}}};t.CancellationResetService=m,t.CancellationResetService=m=o=n([(0,c.Injectable)(),i(1,(0,c.Inject)((0,c.forwardRef)((()=>f.TaskService)))),s("design:paramtypes",[u.BlockService,f.TaskService,l.EventEmitter2])],m)},8191:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.createStateManager=function(){let e=null,t=null,r=null,o=!1,s=!1,i=null,a=!1,c=null,l=!1,d=[],u=!1,f=null,p=!1,h=!1,m="",g=!1;return{getCurrentBlockId:()=>e,setCurrentBlockId(t){e=t},getCurrentBlockType:()=>t,setCurrentBlockType(e){t=e},getCurrentTagName:()=>r,setCurrentTagName(e){r=e},isBlockGenerating:()=>o,setBlockGenerating(e){o=e},isInCodeBlock:()=>s,setInCodeBlock(e){s=e},getCodeBlockLanguage:()=>i,setCodeBlockLanguage(e){i=e},isInToolCall:()=>a,setInToolCall(e){a=e},getCurrentToolName:()=>c,setCurrentToolName(e){c=e},isFinalChunk:()=>l,setFinalChunk(e){l=e},getToolTagStack:()=>d,pushToolTag(e){d.push(e)},popToolTag:()=>d.pop(),clearToolTagStack(){d=[]},isInFencedToolCall:()=>u,setInFencedToolCall(e){u=e},getFencedToolCallName:()=>f,setFencedToolCallName(e){f=e},isFencedXmlStarted:()=>p,setFencedXmlStarted(e){p=e},isFencedXmlComplete:()=>h,setFencedXmlComplete(e){h=e},getPendingFencedContent:()=>m,setPendingFencedContent(e){m=e},appendPendingFencedContent(e){m+=e},resetFencedToolCallState(){u=!1,f=null,p=!1,h=!1,m=""},isInXmlFence:()=>g,setInXmlFence(e){g=e},reset(){n.default.debug("[StateManager] Resetting all state"),e=null,t=null,r=null,o=!1,s=!1,i=null,a=!1,c=null,l=!1,d=[],u=!1,f=null,p=!1,h=!1,m="",g=!1}}};const n=o(r(9055))},8221:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.ReportingModule=void 0;const n=r(3563),s=r(353),i=r(7510),a=r(376),c=r(7967);let l=class{};t.ReportingModule=l,t.ReportingModule=l=o([(0,n.Module)({imports:[a.DataSourceModule,c.ConfigModule],controllers:[s.ReportingController],providers:[i.ReportingService]})],l)},8312:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.OllamaProvider=void 0;const o=r(3548),n=r(8483),s=r(8959),i=r(2368);class a extends n.BaseProvider{getName(){return"ollama"}getBaseChatModel(e,t){return new o.ChatOllama({baseUrl:this.getBaseUrl(),model:this.shortModelName(e),temperature:t.temperature})}async getModelDescriptors(){return(await this.fetchModels()).map((e=>new s.ModelDescriptor("ollama",e,0,0,0,0)))}isValid(){return!!this.getBaseUrl()}getBaseUrl(){return i.ConfigService.getInstance().getProperty("OLLAMA_BASE_URL")}async fetchModels(){const e=this.getBaseUrl();try{const t=await fetch(`${e}/api/tags`);if(t.ok){const e=await t.json();return(e.models||[]).map((e=>e.name))}return console.log(`Failed to fetch Ollama models. Status code: ${t.status}`),[]}catch(e){return console.error(`Error fetching Ollama models: ${e}`),[]}}}t.OllamaProvider=a},8377:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.EpicsModule=void 0;const n=r(3563),s=r(7781),i=r(8610),a=r(5762),c=r(5873);let l=class{};t.EpicsModule=l,t.EpicsModule=l=o([(0,n.Module)({imports:[c.WorkspaceModule],controllers:[s.EpicsController],providers:[i.EpicsService,a.FileSystemEpicRepository],exports:[i.EpicsService]})],l)},8434:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createPatternUtils=function(){return{endsWithPartialPattern(e){if(/[`]{1,2}$/.test(e))return!0;if(/<[a-zA-Z0-9_-]*$/.test(e))return!0;const t=e.lastIndexOf("<");return-1!==t&&-1===e.indexOf(">",t)},findToolCallStart(e){for(const t of o.TOOL_CALL_TAGS){const r=`<${t}>`,o=e.indexOf(r);if(-1!==o)return{found:!0,toolName:t,index:o,length:r.length}}return{found:!1}},findCodeBlockStart(e){const t=e.match(/```(\w*)\s*\n?/);return t?{found:!0,language:t[1]?.trim()||void 0,index:t.index,length:t[0].length}:{found:!1}},findCodeBlockEnd(e){const t=e.indexOf("```");return-1!==t?{found:!0,contentBefore:e.substring(0,t),index:t,length:3}:{found:!1}},findToolCallInXml(e){for(const t of o.TOOL_CALL_TAGS){const r=`<${t}>`,o=`</${t}>`,n=e.indexOf(r),s=e.indexOf(o);if(-1!==n&&-1!==s&&s>n){return{found:!0,toolName:t,content:e.substring(n,s+o.length),index:n}}}return{found:!1}},countOccurrences(e,t){let r=0,o=0;for(;o=e.indexOf(t,o),-1!==o;)r++,o+=t.length;return r},findBreakPoint(e,t){if(e.length<=t)return e.length;const r=e.indexOf("\n",t);if(-1!==r)return r+1;const o=/[.!?]\s+/g;let n,s=-1;for(;null!==(n=o.exec(e));){if(n.index>=t)return n.index+n[0].length;s=n.index+n[0].length}if(-1!==s&&s>=t/2)return s;const i=e.indexOf(" ",t);return-1!==i?i+1:Math.min(e.length,t)},hasFencedXmlStart:e=>e.includes("```xml"),extractAfterFencedXmlStart(e){const t="```xml",r=e.indexOf(t);if(-1===r)return"";let o=r+6;return"\n"===e[o]&&o++,e.substring(o)},hasFencedXmlEnd:e=>/```\s*($|\n)/.test(e),extractBeforeFencedXmlEnd(e){const t=/```\s*($|\n)/.exec(e);return t?e.substring(0,t.index):e},findPotentialToolName(e){const t=/^\s*<([a-zA-Z0-9_]+)[\s>]/.exec(e);if(!t)return null;const r=t[1];return o.TOOL_CALL_TAGS.includes(r)?r:null},shouldBufferChunk(e){return e.length<10||(!!this.endsWithBacktickOrPartialFence(e)||!!this.endsWithTagStartOrPartialTag(e))},endsWithBacktickOrPartialFence:e=>!(!e.endsWith("`")&&!e.endsWith("``"))||!(!e.includes("`")||e.includes("```")),endsWithTagStartOrPartialTag(e){if(e.endsWith("<"))return!0;const t=e.lastIndexOf("<");return-1!==t&&-1===e.indexOf(">",t)},containsCompleteFenceEnd:e=>/```\s*($|\n)/.test(e)}};const o=r(1685)},8460:function(e,t,r){"use strict";var o,n,s=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},c=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),n=0;n<r.length;n++)"default"!==r[n]&&s(t,e,r[n]);return i(t,e),t}),l=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.DatasetIndexingService=void 0;const u=r(3563),f=r(2368),p=d(r(9055)),h=r(6932),m=r(7184),g=r(7093),y=r(5796),v=r(7310),_=r(8565),w=r(9179),k=r(7915),b=r(4897),S=r(779),T=c(r(6928)),O=r(9100);let P=n=class{constructor(e,t,r){this.configService=e,this.datasetRepository=t,this.documentRepository=r,this.embeddingsModel=process.env.EMBEDDINGS_MODEL||"Xenova/all-mpnet-base-v2",this.chunkSize=parseInt(process.env.CHUNK_SIZE||"1000",10),this.chunkOverlap=parseInt(process.env.CHUNK_OVERLAP||"200",10),this.chromaUrl=process.env.CHROMA_URL||"http://localhost:8000"}getLoader(e){const t=T.extname(e).toLowerCase();let r;switch(p.default.info(`[${n.name}] Selecting loader for file extension: ${t}`),t){case".pdf":p.default.info(`[${n.name}] Using PDFLoader`),r=new _.PDFLoader(e);break;case".docx":p.default.info(`[${n.name}] Using DocxLoader`),r=new w.DocxLoader(e);break;case".pptx":p.default.info(`[${n.name}] Using PPTXLoader`),r=new b.PPTXLoader(e);break;case".csv":p.default.info(`[${n.name}] Using CSVLoader`),r=new S.CSVLoader(e);break;default:p.default.info(`[${n.name}] Using UnstructuredLoader for unknown file type`),r=new k.UnstructuredLoader(e)}return r}async indexDocument(e,t,r){try{p.default.info(`[${n.name}] Starting indexing process for document ${e} in dataset ${t}`),await this.documentRepository.updateStatus(e,"indexing"),p.default.info(`[${n.name}] Updated document status to 'indexing'`),p.default.info(`[${n.name}] Loading document from path: ${r}`);const o=this.getLoader(r),s=await o.load();p.default.info(`[${n.name}] Successfully loaded document with ${s.length} pages/sections`),p.default.info(`[${n.name}] Splitting text with chunk size ${this.chunkSize} and overlap ${this.chunkOverlap}`);const i=new g.RecursiveCharacterTextSplitter({chunkSize:this.chunkSize,chunkOverlap:this.chunkOverlap}),a=await i.splitDocuments(s);p.default.info(`[${n.name}] Text split into ${a.length} chunks`),a.forEach((t=>{const r=(0,O.ulid)();t.id=r,t.metadata.original_document_id=e,t.metadata.id=r})),p.default.info(`[${n.name}] Initializing embeddings model: ${this.embeddingsModel}`);const c=new v.HuggingFaceTransformersEmbeddings({modelName:this.embeddingsModel}),l=await this.datasetRepository.findById(t);if(!l)throw new Error("Dataset not found");p.default.info(`[${n.name}] Using dataset collection name: ${l.name}`),p.default.info(`[${n.name}] Storing vectors in Chroma at ${this.chromaUrl}`);await y.Chroma.fromDocuments(a,c,{collectionName:l.name,url:this.chromaUrl});p.default.info(`[${n.name}] Successfully stored vectors in Chroma`),await this.documentRepository.updateStatus(e,"indexed"),p.default.info(`[${n.name}] Successfully completed indexing of document ${e} in dataset ${t}`)}catch(r){throw p.default.error(`[${n.name}] Failed to index document ${e} in dataset ${t}`),p.default.error(`[${n.name}] Error details: ${r.message}`),r.stack&&p.default.error(`[${n.name}] Stack trace: ${r.stack}`),await this.documentRepository.updateStatus(e,"error"),r}}async removeDocumentFromIndex(e,t){try{p.default.info(`[${n.name}] Removing document ${e} from index collection ${t}`);const r=new v.HuggingFaceTransformersEmbeddings({modelName:this.embeddingsModel}),o=new y.Chroma(r,{collectionName:t,url:this.chromaUrl});await o.delete({filter:{original_document_id:e}}),p.default.info(`[${n.name}] Successfully removed document ${e} from index`)}catch(t){throw p.default.error(`[${n.name}] Failed to remove document ${e} from index: ${t.message}`),t}}};t.DatasetIndexingService=P,t.DatasetIndexingService=P=n=a([(0,u.Injectable)(),l("design:paramtypes",[f.ConfigService,m.DatasetRepository,h.DatasetDocumentRepository])],P)},8471:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.PrivateCoderAgentService=void 0;const s=r(3563),i=r(989),a=r(1e3),c=r(8474),l=r(7373),d=r(538),u=r(3239),f=r(6158),p=r(1162),h=r(8921),m=r(3470);let g=class extends i.BaseToolCallingAgent{constructor(e,t,r,o,n,s,i){super(e,t,r,o,n,s,i)}getName(){return"private-coder-agent"}getModelCategory(){return p.ModelCategory.CODING}isPrivateModelsOnly(){return!0}getTools(e){const t=this.toolFactory.createTool("read_file",e),r=this.toolFactory.createTool("update_file",e),o=this.toolFactory.createTool("command_line",e),n=this.toolFactory.createTool("current_timestamp",e);return o.setPrivateRequired(!0),[t,r,o,n]}async getSpecificSystemPrompt(e){const t=await h.EpicsPrompts.updateStoryTasks(e);return`\nYou are an AI coding assistant focused on making high-quality code changes. Your task is to help implement the user's request by following this multi-step process:\n\n1. Initial Research (ALWAYS DO THIS FIRST):\n   a. Use the read_file tool to examine any relevant files before planning any changes.\n   b. Look at similar files in the codebase to understand:\n      - Code style and formatting conventions\n      - Use of DTOs vs use of domain entities etc\n      - Error handling patterns\n      - Logging practices\n      - Import organization\n      - Naming conventions\n      - Documentation style\n      - Tools and patterns being used\n   c. Never make assumptions about file contents - always verify with read_file\n   d. Study the existing patterns thoroughly before proceeding to planning.\n\n2. Planning (ONLY AFTER RESEARCH IS COMPLETE):\n   a. Based on the research, make a clear plan with multiple steps.\n   b. Break down complex changes into smaller, manageable steps.\n   c. Think through potential impacts on other parts of the codebase.\n   d. Consider how to maintain consistency with existing patterns.\n\n3. Implementation (FOLLOW PLAN STEP BY STEP):\n   a. Execute each step in the plan sequentially, explaining each change.\n   b. Make changes using the update_file tool, always providing all three arguments:\n      - filePath: The path to the file to modify\n      - search: The specific code block to replace\n      - replace: The new code block (never forget this!)\n   c. Keep changes focused and minimal - update only what's necessary.\n   d. Ensure code changes follow these principles:\n      - Clean, maintainable code structure\n      - Performance optimization\n      - Security best practices\n      - Scalability considerations\n      - Proper error handling\n      - Clear documentation\n      - Consistent with existing patterns (e.g. code style, formatting, naming conventions, dto's, repository patterns, etc)\n\n4. Testing:\n   a. After code changes, use the command_line tool to run: ${e.workspace.buildOrTestCommand}\n   b. If errors occur, analyze and fix them before proceeding.\n   c. Ensure all changes are properly tested.\n\n5. Summary:\n   Provide a concise final summary listing:\n   a. Files that were modified\n   b. Brief description of changes made to each file\n\nThe repository file structure is:\n${e.repositoryTree()}\n\n${e.repositoryHints()?`Additional hints provided by the user that must be adhered to:\n${e.repositoryHints()}`:""}\n\nIMPORTANT REMINDERS:\n- ALWAYS do thorough research first (use the read_file tool) and return that as a response\n- Keep reading more files if needed until you have a thorough understanding of the codebase\n- Then make a clear plan based on research findings and return that as a response (continue)\n- Then iterate through the plan step by step, using the update_file tool to make changes to the code\n- Keep changes minimal and focused (use the update_file tool)\n- Build/Test after making changes (use the command_line tool)\n- Provide clear, concise summaries\n\n# Task Management Instructions\n${t}\n\nIMPORTANT: When implementing tasks:\n1. Always check the task status in the task JSON file before starting work\n2. Update the task status to "inprogress" when you start working on it\n3. Update the task status to "done" when you complete it\n4. Always use current_timestamp to update the updatedAt field when changing task status\n5. Remember that task status changes may require updating the parent story status\n\n- COMMAND LINE TOOL RESTRICTIONS:\n  * Only use the command_line tool for:\n    1. Running the build/test command (${e.workspace.buildOrTestCommand})\n    2. Installing new local packages for the project\n  * Never use it for any other system changes\n  * Never traverse up above the workspace directory\n  * Always include automatic confirmation flags (--yes, -y, --force, etc.) for package installations\n`}};t.PrivateCoderAgentService=g,t.PrivateCoderAgentService=g=o([(0,s.Injectable)(),n("design:paramtypes",[c.WorkspaceService,l.SessionService,d.HomeService,u.SummaryCompletion,f.ToolFactoryService,a.CheckpointerService,m.AgentRuleService])],g)},8474:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.WorkspaceService=void 0;const d=r(3563),u=r(4717),f=a(r(9896)),p=a(r(6928)),h=l(r(9055)),m=l(r(3807)),g=r(2434);let y=class{constructor(e){this.workspaceRepository=e}async lockSessionWorkspace(e){const t=`session/${e}`;if(await this.workspaceRepository.findByName(t))return this.lockByName(t);const r=process.env.TEMP_WORKSPACE_ROOT_DIR||"~/.eve/temp-workspaces/",o=p.join(r,"session",e);f.mkdirSync(o,{recursive:!0});const n=await this.createWorkspace({name:t,repoBaseDir:o,isTemp:!0});return this.lockByName(n.name)}async lockTempWorkspace(e){const t=await this.workspaceRepository.findUnlockedTempWorkspaceByRemoteUrl(e);if(t)return this.lockByName(t.name);const r=this.generateWorkspaceName(e),o=this.createWorkspaceDirectory(r);await this.cloneRepository(e,o);const n=await this.createWorkspace({name:r,repoBaseDir:o,isTemp:!0});return this.lockByName(n.name)}generateWorkspaceName(e){return`${p.basename(e,".git")}-${Math.random().toString(36).substring(2,7)}`}createWorkspaceDirectory(e){const t=process.env.TEMP_WORKSPACE_ROOT_DIR||p.join(process.env.HOME||"","/.eve/temp-workspaces/"),r=p.join(t,e);return f.mkdirSync(r,{recursive:!0}),r}async cloneRepository(e,t){const r=(0,m.default)();await r.clone(e,t)}async updateWorkspace(e,t){const r=await this.workspaceRepository.findByName(e);if(!r)throw new d.NotFoundException(`Workspace with name ${e} not found`);return r.buildOrTestCommand=t.buildOrTestCommand,r.portFromBaseDir=t.portFromBaseDir,await this.workspaceRepository.update(e,{buildOrTestCommand:t.buildOrTestCommand,portFromBaseDir:t.portFromBaseDir}),h.default.info(`Workspace updated successfully: ${JSON.stringify(r)}`),r}async lockByName(e){const t=await this.workspaceRepository.findByName(e);if(!t)throw new d.NotFoundException(`Workspace with name ${e} not found`);if(t.isLocked)throw new d.BadRequestException(`Workspace with name ${e} is already locked`);return t.isLocked=!0,t.lastAccessedAt=new Date,await this.workspaceRepository.update(e,{isLocked:!0,lastAccessedAt:t.lastAccessedAt}),h.default.info(`Workspace locked successfully: ${JSON.stringify(t)}`),t}async unlockByName(e){const t=await this.workspaceRepository.findByName(e);if(!t)throw new d.NotFoundException(`Workspace with name ${e} not found`);return t.isLocked=!1,await this.workspaceRepository.update(e,{isLocked:!1}),h.default.info(`Workspace unlocked successfully: ${JSON.stringify(t)}`),t}async createWorkspace(e){h.default.info(`Importing workspace with request: ${JSON.stringify(e)}`);let t=e.name;t||(t=p.basename(e.repoBaseDir));if(await this.workspaceRepository.findByName(t))throw new d.BadRequestException("A workspace with the same name already exists");if(!f.existsSync(e.repoBaseDir)||!f.statSync(e.repoBaseDir).isDirectory())throw new d.BadRequestException("The specified repository directory does not exist or is not a directory");let r=await this.isValidGitRepo(e.repoBaseDir);if(h.default.info(`isGitRepo: ${r}`),!r&&e.ensureGitRepo){const t=(0,m.default)(e.repoBaseDir);await t.init(),r=!0,h.default.info(`Initialized new Git repository in ${e.repoBaseDir}`)}if(r){if(g.GitUtils.ensureGitignoreExists(e.repoBaseDir)){const t=(0,m.default)(e.repoBaseDir);await t.add(".gitignore"),await t.commit("Added default .gitignore file"),h.default.info("Added default .gitignore file")}}const o={name:t,repoBaseDir:e.repoBaseDir,status:"Created",remoteRepoUrl:"",buildOrTestCommand:null,isGitRepo:r,isLocked:!1,isTemp:e.isTemp??!1,lastAccessedAt:new Date,portFromBaseDir:e.portFromBaseDir};if(r)try{o.remoteRepoUrl=await this.getRemoteRepoUrl(e.repoBaseDir);(0,m.default)(e.repoBaseDir);await this.hasCommits(e.repoBaseDir)&&await this.getCurrentBranch(e.repoBaseDir)}catch(e){console.error("Error getting Git information:",e),o.status="Error: Unable to get Git information"}return await this.workspaceRepository.create(o),h.default.info(`Workspace created successfully: ${JSON.stringify(o)}`),o}async findAll(e){return this.workspaceRepository.findAll(e)}async findOne(e){return this.workspaceRepository.findByName(e)}async findById(e){return this.workspaceRepository.findById(e)}async updateLastAccessedAt(e){await this.workspaceRepository.updateLastAccessedAt(e)}async removeWorkspace(e){if(!await this.workspaceRepository.findByName(e))throw new d.NotFoundException(`Workspace with name ${e} not found`);await this.workspaceRepository.delete(e),h.default.info(`Workspace removed successfully: ${e}`)}async getRemoteRepoUrl(e){const t=(0,m.default)(e),r=(await t.getRemotes(!0)).find((e=>"origin"===e.name));return r?r.refs.fetch:""}async getCurrentBranch(e){return(0,m.default)(e).revparse(["--abbrev-ref","HEAD"])}async isValidGitRepo(e){try{const t=(0,m.default)(e);return await t.revparse(["--is-inside-work-tree"]),!0}catch(e){return!1}}async hasCommits(e){try{const t=(0,m.default)(e);return(await t.log(["--oneline","-1"])).total>0}catch(e){return!1}}};t.WorkspaceService=y,t.WorkspaceService=y=i([(0,d.Injectable)(),c("design:paramtypes",[u.WorkspaceRepository])],y)},8483:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BaseProvider=void 0;const n=r(8959),s=o(r(9055)),i=r(2088);t.BaseProvider=class{async getModelDescriptor(e){const t=await this.getModelDescriptors();if(!e)return t[0];const r=this.shortModelName(e),o=t.find((e=>e.name===r));if(!o&&this.supportsOnDemandModels())return new n.ModelDescriptor(this.getName(),r,0,0,0,0);if(!o)throw new Error(`Model ${r} not found for provider ${this.getName()}`);return o}shortModelName(e){const t=e.indexOf("/");if(-1===t)throw new Error(`Model name ${e} is not in the format provider/model`);return e.substring(t+1)||e}getChatModelOptions(e,t){return new i.ChatModelOptions}isPromptCachingEnabled(e){const t=!0===e?.cachePrompt;return s.default.info("isPromptCachingEnabled - cachePrompt: %s, result: %s",e?.cachePrompt,t),t}supportsOnDemandModels(){return!1}}},8489:e=>{"use strict";e.exports=require("shelljs")},8507:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.SearchFilesToolFactory=void 0;const s=r(3563),i=r(4390);let a=class{constructor(){}getToolName(){return"search_files"}create(e){return new i.SearchFilesTool(e.workingDir)}};t.SearchFilesToolFactory=a,t.SearchFilesToolFactory=a=o([(0,s.Injectable)(),n("design:paramtypes",[])],a)},8547:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SourceArtefact=void 0;t.SourceArtefact=class{constructor(e){Object.assign(this,e)}}},8565:e=>{"use strict";e.exports=require("@langchain/community/document_loaders/fs/pdf")},8610:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.EpicsService=void 0;const s=r(3563),i=r(5762),a=r(251),c=r(7655),l=r(9615);let d=class{constructor(e){this.epicRepository=e}async getRequirements(e,t){return this.epicRepository.getRequirements(e,t)}async updateRequirements(e,t,r){return this.epicRepository.updateRequirements(e,t,r)}async findAllEpics(e){return this.epicRepository.findAllByWorkspace(e)}async findEpicById(e,t){const r=await this.epicRepository.findById(e,t);if(!r)throw new Error(`Epic with id ${t} not found`);return r}async createEpic(e,t,r){const o=new a.Epic(t,r,e);return this.epicRepository.create(o)}async updateEpic(e,t,r,o){const n=await this.findEpicById(e,t);return n.title=r,n.description=o,n.updatedAt=new Date,this.epicRepository.update(n)}async deleteEpic(e,t){await this.epicRepository.delete(e,t)}async addStory(e,t,r,o,n){const s=new c.Story(r,o,n);return this.epicRepository.addStory(e,t,s)}async updateStory(e,t,r,o,n,s){const i=(await this.findEpicById(e,t)).stories.find((e=>e.id===r));if(!i)throw new Error(`Story with id ${r} not found`);return i.title=o,i.description=n,i.acceptanceCriteria=s,i.updatedAt=new Date,this.epicRepository.updateStory(e,t,i)}async deleteStory(e,t,r){await this.epicRepository.deleteStory(e,t,r)}async getStory(e,t,r){return this.epicRepository.getStory(e,t,r)}async addTask(e,t,r,o,n){const s=new l.Task(o,n);return this.epicRepository.addTask(e,t,r,s)}async updateTask(e,t,r,o,n,s,i){const a=new l.Task(n,s,i,o);return a.updatedAt=new Date,this.epicRepository.updateTask(e,t,r,a)}async deleteTask(e,t,r,o){await this.epicRepository.deleteTask(e,t,r,o)}async getTasks(e,t,r){if(!(await this.findEpicById(e,t)).stories.find((e=>e.id===r)))throw new Error(`Story with id ${r} not found`);return this.epicRepository.getTasks(e,t,r)}async getTask(e,t,r,o){if(!(await this.findEpicById(e,t)).stories.find((e=>e.id===r)))throw new Error(`Story with id ${r} not found`);return this.epicRepository.getTask(e,t,r,o)}};t.EpicsService=d,t.EpicsService=d=o([(0,s.Injectable)(),n("design:paramtypes",[i.FileSystemEpicRepository])],d)},8615:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PromptBuilderService=void 0;const a=r(3563),c=i(r(9055)),l=r(2141),d=r(6170);let u=o=class{constructor(e,t){this.fileSystemService=e,this.rulesService=t,this.FILE_LIST_LIMIT=1e3,c.default.info(`[${o.name}] PromptBuilderService initialized`)}async buildPersonaSystemPrompt(e,t,r){c.default.debug(`[${o.name}] Building system prompt for persona: ${e.getId()}`),c.default.debug(`[${o.name}] Context mode: ${r.currentMode}, working dir: ${r.workingDir}`),c.default.debug(`[${o.name}] Tools count: ${t.length}`);const n=await e.getSystemPrompt(r);c.default.debug(`[${o.name}] Base prompt length: ${n.length} characters`);const s=this.generateToolInstructions(t,r);c.default.debug(`[${o.name}] Tool instructions length: ${s.length} characters`);const i=await this.getUserInstructions(r.workingDir);c.default.debug(`[${o.name}] User instructions found: ${i?"yes":"no"}`),i&&c.default.debug(`[${o.name}] User instructions length: ${i.length} characters`);const a=await this.buildEnvironmentDetailsBlock(e,r);c.default.debug(`[${o.name}] Environment details length: ${a.length} characters`);const l=`${n}\n\n# Tools\n\n${s}\n\n====\n\n${a}\n\n${i?`\n====\n\nUSER'S CUSTOM INSTRUCTIONS\n\nThe following additional instructions are provided by the user, and should be followed to the best of your ability without interfering with the TOOL USE guidelines.\n\n${i}\n`:""}`;return c.default.debug(`[${o.name}] Final prompt assembled with total length: ${l.length} characters`),l}async buildEnvironmentDetailsBlock(e,t){c.default.debug(`[${o.name}] Building environment details block for persona: ${e.getId()}`);let r=`<environment_details>\n# Current Time\n${t.currentTime}`;if(e.requiresFileList?.()){c.default.debug(`[${o.name}] Persona requires file list, getting workspace files for: ${t.workingDir}`);const[e,n]=await this.fileSystemService.getWorkspaceFileList(t.workingDir,this.FILE_LIST_LIMIT);c.default.debug(`[${o.name}] Got ${e.length} files, truncated: ${n}`),r+=`\n\n# Current Working Directory (${t.workingDir}) Files\n${e.join("\n")}`,n&&(r+="\n\n(File list truncated. Use list_files on specific subdirectories if you need to explore further.)")}else c.default.debug(`[${o.name}] Persona does not require file list, skipping`);return r+=`\n\n# Current Mode\n${t.currentMode.toUpperCase()} MODE`,"plan"===t.currentMode&&(r+='\nIn this mode you should focus on information gathering, asking questions, and architecting a solution. Once you have a plan, use the plan_mode_respond tool to engage in a conversational back and forth with the user. Do not use the plan_mode_respond tool until you\'ve gathered all the information you need e.g. with read_file or ask_followup_question.\n(Remember: If it seems the user wants you to use tools only available in Act Mode, you should ask the user to "toggle to Act mode" (use those words) - they will have to manually do this themselves with the Plan/Act toggle button below. You do not have the ability to switch to Act Mode yourself, and must wait for the user to do it themselves once they are satisfied with the plan. You also cannot present an option to toggle to Act mode, as this will be something you need to direct the user to do manually themselves.)'),r+="\n</environment_details>",r}generateToolInstructions(e,t){return e.map((e=>e.getUsageInstructions(t))).join("\n\n")}async getUserInstructions(e){try{return await this.rulesService.getAllRules(e)}catch(e){return void c.default.error(`[${o.name}] Error getting user instructions: ${e.message}\n${e.stack}`)}}};t.PromptBuilderService=u,t.PromptBuilderService=u=o=n([(0,a.Injectable)(),s("design:paramtypes",[l.FileSystemService,d.RulesService])],u)},8620:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.LlmMetadataService=void 0;const i=r(3563),a=r(2776),c=r(6206),l=r(2368),d=s(r(9055));let u=class{constructor(e,t){this.appDataSource=e,this.providerRegistry=t,this.serviceName="LlmMetadataService"}get knex(){return this.appDataSource.knex}async onModuleInit(){await this.ensureProvidersInDatabase(),await this.refreshModelsFromProviderApis(),d.default.info(`[${this.serviceName}] LLM metadata service initialized`)}async ensureProvidersInDatabase(){const e=this.providerRegistry.getAllProviders();for(const t of e){const e=t.getId();await this.knex("llm_providers").where("provider_id",e).first()?(await this.knex("llm_providers").where("provider_id",e).update({name:t.getName(),default_model_id:t.getDefaultModelId(),default_base_url:t.getDefaultBaseUrl(),requires_api_key:t.requiresApiKey(),metadata:JSON.stringify(t.getMetadata()),updated_at:this.knex.fn.now()}),d.default.info(`[${this.serviceName}] Updated provider in database: ${e}`)):(await this.knex("llm_providers").insert({provider_id:e,name:t.getName(),default_model_id:t.getDefaultModelId(),default_base_url:t.getDefaultBaseUrl(),requires_api_key:t.requiresApiKey(),metadata:JSON.stringify(t.getMetadata())}),d.default.info(`[${this.serviceName}] Added provider to database: ${e}`))}}async refreshModelsFromProviderApis(){const e=this.providerRegistry.getAllProviders();for(const t of e){const e=t.getId();try{const r=t.getApiKeyName(),o=l.ConfigService.getProperty(r),n=t.getDefaultBaseUrl();o||d.default.warn(`[${this.serviceName}] No API key found for provider: ${e} (looked for environment variable: ${r})`);try{await this.refreshModelsForProvider(e,o||"",n),d.default.info(`[${this.serviceName}] Refreshed models for provider: ${e}`)}catch(t){d.default.error(`[${this.serviceName}] Failed to refresh models for provider ${e}: ${t.message}`)}}catch(t){d.default.error(`[${this.serviceName}] Error processing provider ${e}: ${t.message}`)}}}async refreshModelsForProvider(e,t,r){d.default.info(`[${this.serviceName}] Refreshing models for provider: ${e}`);try{const o=this.providerRegistry.getProvider(e);d.default.info(`[${this.serviceName}] Provider found: ${o.getName()}`),d.default.info(`[${this.serviceName}] Calling discoverModels for provider: ${e}`);const n=await o.discoverModels(t,r);d.default.info(`[${this.serviceName}] Discovered ${n.length} models for provider: ${e}`);for(const e of n)d.default.info(`[${this.serviceName}] Discovered model: ${e.modelId} (${e.name})`);for(const e of n)try{await this.knex("llm_models").where({model_id:e.modelId,provider_id:e.providerId}).first()?(d.default.info(`[${this.serviceName}] Updating existing model in database: ${e.modelId}`),await this.knex("llm_models").where({model_id:e.modelId,provider_id:e.providerId}).update({name:e.name,context_window:e.contextWindow,max_output_tokens:e.maxOutputTokens,supports_images:e.supportsImages,supports_tool_use:e.supportsToolUse,supports_computer_use:e.supportsComputerUse,supports_prompt_cache:e.supportsPromptCache,supports_thinking_tokens:e.supportsThinkingTokens,recommended_thinking_tokens:e.recommendedThinkingTokens,max_thinking_tokens:e.maxThinkingTokens,input_cost_per_million_tokens:e.inputCostPerMillionTokens,output_cost_per_million_tokens:e.outputCostPerMillionTokens,cache_writes_price:e.cacheWritesPrice,cache_reads_price:e.cacheReadsPrice,metadata:JSON.stringify(e.metadata||{}),is_default_for_provider:e.isDefaultForProvider,updated_at:this.knex.fn.now()}),d.default.info(`[${this.serviceName}] Successfully updated model in database: ${e.modelId}`)):(d.default.info(`[${this.serviceName}] Adding new model to database: ${e.modelId}`),await this.knex("llm_models").insert({model_id:e.modelId,provider_id:e.providerId,name:e.name,context_window:e.contextWindow,max_output_tokens:e.maxOutputTokens,supports_images:e.supportsImages,supports_tool_use:e.supportsToolUse,supports_computer_use:e.supportsComputerUse,supports_prompt_cache:e.supportsPromptCache,supports_thinking_tokens:e.supportsThinkingTokens,recommended_thinking_tokens:e.recommendedThinkingTokens,max_thinking_tokens:e.maxThinkingTokens,input_cost_per_million_tokens:e.inputCostPerMillionTokens,output_cost_per_million_tokens:e.outputCostPerMillionTokens,cache_writes_price:e.cacheWritesPrice,cache_reads_price:e.cacheReadsPrice,metadata:JSON.stringify(e.metadata||{}),is_default_for_provider:e.isDefaultForProvider}),d.default.info(`[${this.serviceName}] Successfully added model to database: ${e.modelId}`))}catch(t){d.default.error(`[${this.serviceName}] Error processing model ${e.modelId}: ${t.message}`,t.stack)}const s=await this.getModelsForProvider(e);d.default.info(`[${this.serviceName}] Retrieved ${s.length} models for provider ${e} after refresh`)}catch(t){throw d.default.error(`[${this.serviceName}] Error refreshing models for provider ${e}: ${t.message}`,t.stack),t}}async getModelsForProvider(e){d.default.info(`[${this.serviceName}] Getting models for provider: ${e}`);try{const t=this.providerRegistry.getProvider(e);d.default.info(`[${this.serviceName}] Provider found in registry: ${t.getName()}`);const r=await this.knex("llm_models").where("provider_id",e).select("*");if(d.default.info(`[${this.serviceName}] Retrieved ${r.length} models for provider ${e} from database`),0===r.length&&"gemini"===e)return d.default.info(`[${this.serviceName}] No models found for Gemini, using hardcoded fallback models`),[{modelId:"gemini-1.5-pro",providerId:"gemini",name:"Gemini 1.5 Pro",contextWindow:1e6,maxOutputTokens:8192,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!1,supportsThinkingTokens:!1,inputCostPerMillionTokens:7,outputCostPerMillionTokens:7,isDefaultForProvider:!0,metadata:{description:"Gemini 1.5 Pro is Google's most capable model, with strong performance across text, code, reasoning, and multimodal tasks."}},{modelId:"gemini-1.5-flash",providerId:"gemini",name:"Gemini 1.5 Flash",contextWindow:1e6,maxOutputTokens:8192,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!1,supportsThinkingTokens:!1,inputCostPerMillionTokens:.7,outputCostPerMillionTokens:.7,metadata:{description:"Gemini 1.5 Flash is a faster, more cost-effective model for simpler tasks."}}];const o=r.map((e=>({modelId:e.model_id,providerId:e.provider_id,name:e.name,contextWindow:e.context_window,maxOutputTokens:e.max_output_tokens,supportsImages:e.supports_images,supportsToolUse:e.supports_tool_use,supportsComputerUse:e.supports_computer_use,supportsPromptCache:e.supports_prompt_cache,supportsThinkingTokens:e.supports_thinking_tokens||!1,recommendedThinkingTokens:e.recommended_thinking_tokens,maxThinkingTokens:e.max_thinking_tokens,inputCostPerMillionTokens:e.input_cost_per_million_tokens,outputCostPerMillionTokens:e.output_cost_per_million_tokens,cacheWritesPrice:e.cache_writes_price,cacheReadsPrice:e.cache_reads_price,metadata:e.metadata?JSON.parse(e.metadata):void 0,isDefaultForProvider:e.is_default_for_provider})));for(const e of o)d.default.info(`[${this.serviceName}] Returning model: ${e.modelId} (${e.name})`);return o}catch(t){if(d.default.error(`[${this.serviceName}] Error getting models for provider ${e}: ${t.message}`,t.stack),"gemini"===e)return d.default.info(`[${this.serviceName}] Error occurred, using hardcoded fallback models for Gemini`),[{modelId:"gemini-1.5-pro",providerId:"gemini",name:"Gemini 1.5 Pro",contextWindow:1e6,maxOutputTokens:8192,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!1,supportsThinkingTokens:!1,inputCostPerMillionTokens:7,outputCostPerMillionTokens:7,isDefaultForProvider:!0,metadata:{description:"Gemini 1.5 Pro is Google's most capable model, with strong performance across text, code, reasoning, and multimodal tasks."}},{modelId:"gemini-1.5-flash",providerId:"gemini",name:"Gemini 1.5 Flash",contextWindow:1e6,maxOutputTokens:8192,supportsImages:!0,supportsToolUse:!0,supportsComputerUse:!1,supportsPromptCache:!1,supportsThinkingTokens:!1,inputCostPerMillionTokens:.7,outputCostPerMillionTokens:.7,metadata:{description:"Gemini 1.5 Flash is a faster, more cost-effective model for simpler tasks."}}];throw t}}};t.LlmMetadataService=u,t.LlmMetadataService=u=o([(0,i.Injectable)(),n("design:paramtypes",[a.AppDataSource,c.ProviderRegistry])],u)},8624:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.StoredFileModule=void 0;const n=r(3563),s=r(5056),i=r(7205),a=r(4632),c=r(376);let l=class{};t.StoredFileModule=l,t.StoredFileModule=l=o([(0,n.Module)({imports:[c.DataSourceModule],controllers:[s.StoredFileController],providers:[i.StoredFileService,a.StoredFileRepository],exports:[i.StoredFileService]})],l)},8627:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.KnexMigrationManager=void 0;const n=o(r(9055));t.KnexMigrationManager=class{constructor(e){this.knexInstance=e}async runMigrations(){try{const e=await this.knexInstance.migrate.latest();return n.default.info(`Ran ${e[1].length} migrations`),e[1]}catch(e){throw n.default.error("Failed to run Knex migrations",e),e}}async getMigrationStatus(){try{const e=await this.knexInstance.migrate.list();return{completed:e[0],newMigrations:e[1]}}catch(e){throw n.default.error("Failed to get Knex migration status",e),e}}}},8648:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.StoredDocRepository=void 0;const i=r(3563),a=(r(1832),r(3543)),c=r(7823);let l=class{constructor(e){this.knex=e,this.columns={all:["id","contents","mimeType","createdAt","sessionId","workspaceName"],withoutContents:["id","mimeType","createdAt","sessionId","workspaceName"]}}async save(e){await this.knex("stored_docs").insert({id:e.id,contents:e.contents,mimeType:e.mimeType,createdAt:e.createdAt,sessionId:e.sessionId,workspaceName:e.workspaceName})}async findById(e){const t=await this.knex("stored_docs").select(this.columns.all).where("id",e).first();return t?new a.StoredDoc(t.contents,t.mimeType,t.sessionId,t.workspaceName,t.id,t.createdAt):null}async findByIdWithoutContents(e){const t=await this.knex("stored_docs").select(this.columns.withoutContents).where("id",e).first();return t?c.StoredDocDTO.fromStoredDoc(t):null}async findBySessionId(e){return(await this.knex("stored_docs").select(this.columns.withoutContents).where("sessionId",e)).map((e=>c.StoredDocDTO.fromStoredDoc(e)))}async findByWorkspaceName(e){return(await this.knex("stored_docs").select(this.columns.withoutContents).where("workspaceName",e)).map((e=>c.StoredDocDTO.fromStoredDoc(e)))}};t.StoredDocRepository=l,t.StoredDocRepository=l=o([(0,i.Injectable)(),s(0,(0,i.Inject)("KNEX")),n("design:paramtypes",[Function])],l)},8678:e=>{"use strict";e.exports=require("tree-sitter-c-sharp")},8781:e=>{"use strict";e.exports=require("@nestjs/core")},8787:e=>{"use strict";e.exports=require("he")},8804:e=>{"use strict";e.exports=require("@langchain/langgraph/prebuilt")},8817:e=>{"use strict";e.exports=require("file-type")},8884:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getEnv=function(e,t){let r;"undefined"!=typeof process&&process.env?r=process.env[e]:"undefined"!=typeof globalThis&&"Deno"in globalThis?r=globalThis.Deno.env.get(e):console.warn(`Unable to access environment variables. Key: ${e}`);return void 0!==r?r:t}},8910:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.MistralProvider=void 0;const n=r(2196),s=r(8483),i=r(8959),a=r(2368),c=o(r(8938));class l extends s.BaseProvider{getName(){return"mistral"}getBaseChatModel(e,t){return new n.ChatMistralAI({modelName:this.shortModelName(e),temperature:t.temperature,apiKey:a.ConfigService.getInstance().getProperty("MISTRAL_API_KEY")})}async getModelDescriptors(){return(await this.fetchModels()).map((e=>{let t=1e-6,r=3e-6;return e.id.includes("large")?(t=7e-6,r=2e-5):e.id.includes("medium")&&(t=25e-7,r=7e-6),new i.ModelDescriptor("mistral",e.id,t,0,0,r)}))}isValid(){return!!a.ConfigService.getInstance().getProperty("MISTRAL_API_KEY")}async fetchModels(){if(l.modelsCache&&Date.now()-l.modelsCache.timestamp<l.CACHE_TTL)return l.modelsCache.models;const e=a.ConfigService.getInstance().getProperty("MISTRAL_API_KEY");if(!e)return console.log("Mistral API key not found"),[];try{const t=await c.default.get("https://api.mistral.ai/v1/models",{headers:{Authorization:`Bearer ${e}`}});if(200===t.status){const e=t.data.data||[];return l.modelsCache={models:e,timestamp:Date.now()},e}return console.log(`Failed to fetch Mistral models. Status code: ${t.status}`),[]}catch(e){return console.error(`Error fetching Mistral models: ${e}`),[]}}}t.MistralProvider=l,l.modelsCache=null,l.CACHE_TTL=3e5},8921:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.EpicsPrompts=void 0;const c=r(6426),l=i(r(6928)),d=i(r(9896)),u=a(r(526));t.EpicsPrompts=class{static async getEpicsTree(e){const t=l.join(e.workspace.repoBaseDir,"epics"),r=(0,u.default)();return d.existsSync(t)?(0,c.generateTreeRecursive)(t,r,t):(d.mkdirSync(t,{recursive:!0}),"└── (empty epics directory)")}static async existingEpicsAndStories(e){return`To work with epics in this workspace, you need to understand the file structure:\n\n${await this.getEpicsTree(e)}\n\nEach epic follows this structure:\nEPIC-XX_Name/\n  ├── requirements.md (contains epic title and description)\n  └── stories/\n      └── STORY-XX_Name/\n          ├── story.json (contains story details)\n          └── tasks/\n              └── TASK-XX_Name.json (individual task details)\n\nUse the read_file tool (e.g. path: ./epics/EPIC-XX_Name/requirements.md) to inspect these files and understand the current state of epics.`}static async updateEpicInstructions(e){return"To create or update an epic:\n\n1. For a new epic:\n   - Create a directory named EPIC-XX_Name (where XX is a sequential number and Name is a short title)\n   - Use update_file to create requirements.md in the epic directory with this structure:\n     # XX_Name\n     \n     ## Description\n     Epic description goes here\n     \n     ## Goals\n     - Add specific, measurable goals here\n     \n     ## Success Criteria\n     - List the criteria that define when this epic is complete\n\n2. For updating an existing epic:\n   - Use read_file to get the current requirements.md content\n   - Use update_file to update the requirements.md with the new content (path: ./epics/EPIC-XX_Name/requirements.md)\n   - Maintain the same format with title, description, goals, and success criteria sections\n\nThe epic directory should be under the workspace at: ./epics/EPIC-XX_Name/"}static async updateEpicStories(e){return'To create or update stories in an epic:\n\n1. For a new story:\n   - Create a directory named STORY-XX_Name under the epic\'s stories directory\n   - Use update_file to create story.json with this structure:\n     {\n       "id": "STORY-XX_Name",\n       "title": "Story Title",\n       "description": "Detailed story description",\n       "status": "backlog",\n       "createdAt": "<use current_timestamp>",\n       "updatedAt": "<use current_timestamp>",\n       "acceptanceCriteria": [\n         "AC01: Given a normal user, when they log in, then they should see a welcome message",\n         "AC02: Given an admin user, when they log in, then they should be taken to the admin dashboard"\n       ]\n     }\n\n2. For updating an existing story:\n   - Use read_file to get the current story.json content\n   - Use update_file to update the story.json with the new content\n   - Maintain all existing fields and update only what\'s changed\n   - Update the updatedAt timestamp using current_timestamp\n\nThe story file should be under the stories directory of the epic which is under the workspace at: ./epics/EPIC-XX_Name/stories/STORY-XX_Name/story.json\n\nValid status values are: "backlog", "inprogress", "done" (all lowercase)'}static async updateStoryTasks(e){return`To create or update tasks in a story:\n\n1. For a new task:\n   - Create a new file named TASK-XX_Name.json in the story's tasks directory\n   - Use update_file to create the task with this structure:\n     {\n       "id": "TASK-XX_Name",\n       "title": "Task Title",\n       "description": "Detailed task description",\n       "assignee": "Agent-X",\n       "status": "backlog",\n       "createdAt": "<use current_timestamp>",\n       "updatedAt": "<use current_timestamp>"\n     }\n\n2. For updating an existing task:\n   - Use read_file to get the current task JSON file\n   - Update the necessary fields\n   - Update the updatedAt timestamp using current_timestamp\n   - Use update_file to save the modified task\n\nThe task files should be at: ${e.workspace.repoBaseDir}/epics/EPIC-XX_Name/stories/STORY-XX_Name/tasks/TASK-XX_Name.json\n\nValid task status values are: "backlog", "inprogress", "done" (all lowercase)\n\nRemember to update the story's status based on its tasks:\n- If all tasks are done -> story is done\n- If any task is inprogress -> story is inprogress\n- If all tasks are backlog or no tasks -> story is backlog\n\nAlso update the story.json file to reflect the current task status.`}static async allEpicInstructions(e){return`# Complete Epic Management Instructions\n\n${await this.existingEpicsAndStories(e)}\n\n${await this.updateEpicInstructions(e)}\n\n${await this.updateEpicStories(e)}\n\n${await this.updateStoryTasks(e)}\n\nRemember:\n1. Keep timestamps updated using current_timestamp\n2. Maintain proper status transitions\n3. Preserve existing data when updating\n4. Follow the exact file structure and formats`}}},8938:e=>{"use strict";e.exports=require("axios")},8959:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ModelDescriptor=void 0;t.ModelDescriptor=class{constructor(e,t,r,o,n,s,i=!1){this.provider=e,this.name=t,this.costPerInputToken=r,this.costPerCacheWriteToken=o,this.costPerCacheReadToken=n,this.costPerOutputToken=s,this.supportsThinking=i}getFullName(){return`${this.provider}/${this.name}`}}},9023:e=>{"use strict";e.exports=require("util")},9037:e=>{"use strict";e.exports=require("@modelcontextprotocol/sdk/client/index.js")},9055:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const c=i(r(5124)),l=i(r(9896)),d=i(r(6928)),u=r(8884),f=a(r(9233)),p=d.join(process.cwd(),"logs");l.existsSync(p)||l.mkdirSync(p,{recursive:!0});const h=d.join(p,"debug");l.existsSync(h)||l.mkdirSync(h,{recursive:!0});const m=d.join(p,"eve-server-%DATE%.log"),g=(0,u.getEnv)("LOG_FILE_PATH",m);console.log(`Log file pattern: ${g}`);const y=new f.default({filename:g,datePattern:"YYYY-MM-DD",zippedArchive:!0,maxSize:"20m",maxFiles:"14d",level:"debug"}),v=c.format.printf((e=>{const{level:t,message:r,timestamp:o}=e,n=new Date(o);return`${`${(n.getMonth()+1).toString().padStart(2,"0")}/${n.getDate().toString().padStart(2,"0")}/${n.getFullYear()}, ${n.getHours().toString().padStart(2,"0")}:${n.getMinutes().toString().padStart(2,"0")}:${n.getSeconds().toString().padStart(2,"0")} ${n.getHours()>=12?"PM":"AM"}`} - ${t.toUpperCase()}: ${r}`})),_=c.createLogger({level:"debug",format:c.format.combine(c.format.splat(),c.format.timestamp(),v),transports:[new c.transports.Console({level:"info"}),y]});t.default=_},9076:function(e,t,r){"use strict";var o,n=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.FeedbackEventHandler=void 0;const a=r(3563),c=i(r(9055)),l=r(461),d=r(6550),u=r(6349),f=r(9100),p=r(1280),h=r(5444);let m=o=class{constructor(e,t,r){this.taskService=e,this.conversationHistoryService=t,this.eventEmitter=r}async handleFollowupResponse(e,t){c.default.info(`[${o.name}] Processing followupResponse message from client: ${t.id}`);try{await this.taskService.updateTaskStep({taskId:e.taskId,stepNumber:e.stepNumber,toolOutput:JSON.stringify({response:e.response}),status:"completed"}),this.eventEmitter.emit(p.InternalEvents.TASK_UPDATED,{clientId:t.id,taskId:e.taskId,status:h.TaskStatus.IN_PROGRESS,data:{action:"followup_response_received",details:"Processing followup response..."}})}catch(r){c.default.error(`[${o.name}] Error handling followup response: ${r.message}\n${r.stack}`),this.eventEmitter.emit(p.InternalEvents.TOOL_ERROR,{clientId:t.id,taskId:e.taskId,error:r.message,type:"task_error",context:{source:"followupResponse",stepNumber:e.stepNumber}})}}async handleCompletionFeedback(e,t,r){c.default.info(`[${o.name}] Processing completionFeedback message from client: ${t.id}`);try{const n={id:(0,f.ulid)(),taskId:e.taskId,role:"user",segments:[{type:"text",content:e.feedback}],providerId:"system",createdAt:new Date};if(await this.conversationHistoryService.addMessage(e.taskId,n),e.continueTask){c.default.info(`[${o.name}] Continuing task ${e.taskId} with feedback`),await this.taskService.updateTask({taskId:e.taskId,status:h.TaskStatus.IN_PROGRESS}),this.eventEmitter.emit(p.InternalEvents.TASK_UPDATED,{clientId:t.id,taskId:e.taskId,status:h.TaskStatus.IN_PROGRESS,data:{details:"Processing feedback..."}});const n=(await this.taskService.getTask(e.taskId)).mode||"act";await r(e.taskId,t.id,n)}else this.eventEmitter.emit(p.InternalEvents.TASK_UPDATED,{clientId:t.id,taskId:e.taskId,status:h.TaskStatus.WAITING_FOR_INPUT,data:{action:"feedback_received",details:"Feedback received. Task not continued."}})}catch(r){c.default.error(`[${o.name}] Error handling completion feedback: ${r.message}\n${r.stack}`),this.eventEmitter.emit(p.InternalEvents.TOOL_ERROR,{clientId:t.id,taskId:e.taskId,error:r.message,type:"task_error",context:{source:"completionFeedback"}})}}};t.FeedbackEventHandler=m,t.FeedbackEventHandler=m=o=n([(0,a.Injectable)(),s("design:paramtypes",[d.TaskService,u.ConversationHistoryService,l.EventEmitter2])],m)},9095:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.ItemRepository=void 0;const i=r(3563);r(1832);let a=class{constructor(e){this.knex=e}async findAll(e,t){let r=this.knex("items").select("*");if(t&&(r=r.orderBy(t.field,t.order.toLowerCase())),e){const{page:t,limit:o}=e,n=(t-1)*o;r=r.offset(n).limit(o)}return r}async findById(e){return this.knex("items").where("itemId",e).first()}async findBySessionId(e,t,r){let o=this.knex("items").where("sessionId",e);if(r&&(o=o.orderBy(r.field,r.order.toLowerCase())),t){const{page:e,limit:r}=t,n=(e-1)*r;o=o.offset(n).limit(r)}return o}async create(e){await this.knex("items").insert(e)}async update(e,t){await this.knex("items").where("itemId",e).update(t)}async delete(e){await this.knex("items").where("itemId",e).delete()}async countBySessionId(e){const t=await this.knex("items").where("sessionId",e).count("* as count").first();return t?.count}async getSessionStats(e){const t=await this.knex("items").select("sessionId").sum("inputTokens as inputTokens").sum("cacheWriteTokens as cacheWriteTokens").sum("cacheReadTokens as cacheReadTokens").sum("outputTokens as outputTokens").sum("totalTokens as totalTokens").sum("cost as cost").whereIn("sessionId",e).groupBy("sessionId"),r={};return t.forEach((e=>{r[e.sessionId]={inputTokens:e.inputTokens,cacheWriteTokens:e.cacheWriteTokens,cacheReadTokens:e.cacheReadTokens,outputTokens:e.outputTokens,totalTokens:e.totalTokens,cost:e.cost}})),r}async getRequestStats(e){const t=await this.knex("items").select("requestId").sum("inputTokens as inputTokens").sum("cacheWriteTokens as cacheWriteTokens").sum("cacheReadTokens as cacheReadTokens").sum("outputTokens as outputTokens").sum("totalTokens as totalTokens").sum("cost as cost").whereIn("requestId",e).groupBy("requestId"),r={};return t.forEach((e=>{r[e.requestId]={inputTokens:e.inputTokens,cacheWriteTokens:e.cacheWriteTokens,cacheReadTokens:e.cacheReadTokens,outputTokens:e.outputTokens,totalTokens:e.totalTokens,cost:e.cost}})),r}};t.ItemRepository=a,t.ItemRepository=a=o([(0,i.Injectable)(),s(0,(0,i.Inject)("KNEX")),n("design:paramtypes",[Function])],a)},9100:e=>{"use strict";e.exports=require("ulid")},9102:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.EveConfigService=void 0;const d=r(3563),u=r(2776),f=a(r(6982)),p=r(2368),h=r(6206),m=l(r(9055));let g=class{constructor(e,t){this.appDataSource=e,this.providerRegistry=t,this.serviceName="EveConfigService",this.encryptionEnabled=!!process.env.API_KEY_ENCRYPTION_SECRET,this.encryptionKey=this.encryptionEnabled?f.scryptSync(process.env.API_KEY_ENCRYPTION_SECRET,"salt",32):Buffer.alloc(32),this.encryptionIv=Buffer.from("1234567890123456"),this.encryptionEnabled?m.default.info(`[${this.serviceName}] API key encryption is enabled`):m.default.warn(`[${this.serviceName}] API key encryption is disabled - API keys will be stored in plain text. Set API_KEY_ENCRYPTION_SECRET to enable encryption.`)}get knex(){return this.appDataSource.knex}async getAllProviders(){try{return(await this.knex("llm_providers").select("*")).map((e=>({providerId:e.provider_id,name:e.name,defaultModelId:e.default_model_id,defaultBaseUrl:e.default_base_url,requiresApiKey:e.requires_api_key,metadata:e.metadata?JSON.parse(e.metadata):void 0})))}catch(e){throw m.default.error(`[${this.serviceName}] Failed to get providers: ${e}`),new Error("Failed to get providers")}}async getProvider(e){try{const t=await this.knex("llm_providers").where("provider_id",e).first();return t?{providerId:t.provider_id,name:t.name,defaultModelId:t.default_model_id,defaultBaseUrl:t.default_base_url,requiresApiKey:t.requires_api_key,metadata:t.metadata?JSON.parse(t.metadata):void 0}:null}catch(t){throw m.default.error(`[${this.serviceName}] Failed to get provider ${e}: ${t}`),new Error(`Failed to get provider: ${e}`)}}async getModelsForProvider(e){try{return(await this.knex("llm_models").where("provider_id",e).select("*")).map((e=>({modelId:e.model_id,providerId:e.provider_id,name:e.name,contextWindow:e.context_window,maxOutputTokens:e.max_output_tokens,supportsImages:e.supports_images,supportsToolUse:e.supports_tool_use,supportsComputerUse:e.supports_computer_use,supportsPromptCache:e.supports_prompt_cache,supportsThinkingTokens:e.supports_thinking_tokens||!1,recommendedThinkingTokens:e.recommended_thinking_tokens,maxThinkingTokens:e.max_thinking_tokens,inputCostPerMillionTokens:e.input_cost_per_million_tokens,outputCostPerMillionTokens:e.output_cost_per_million_tokens,cacheWritesPrice:e.cache_writes_price,cacheReadsPrice:e.cache_reads_price,metadata:e.metadata?JSON.parse(e.metadata):void 0,isDefaultForProvider:e.is_default_for_provider})))}catch(t){throw m.default.error(`[${this.serviceName}] Failed to get models for provider ${e}: ${t}`),new Error(`Failed to get models for provider: ${e}`)}}async getModel(e){try{const t=await this.knex("llm_models").where("model_id",e).first();return t?{modelId:t.model_id,providerId:t.provider_id,name:t.name,contextWindow:t.context_window,maxOutputTokens:t.max_output_tokens,supportsImages:t.supports_images,supportsToolUse:t.supports_tool_use,supportsComputerUse:t.supports_computer_use,supportsPromptCache:t.supports_prompt_cache,supportsThinkingTokens:t.supports_thinking_tokens||!1,recommendedThinkingTokens:t.recommended_thinking_tokens,maxThinkingTokens:t.max_thinking_tokens,inputCostPerMillionTokens:t.input_cost_per_million_tokens,outputCostPerMillionTokens:t.output_cost_per_million_tokens,cacheWritesPrice:t.cache_writes_price,cacheReadsPrice:t.cache_reads_price,metadata:t.metadata?JSON.parse(t.metadata):void 0,isDefaultForProvider:t.is_default_for_provider}:null}catch(t){throw m.default.error(`[${this.serviceName}] Failed to get model ${e}: ${t}`),new Error(`Failed to get model: ${e}`)}}async getAllModes(){try{return(await this.knex("agent_modes").select("*")).map((e=>({modeId:e.mode_id,name:e.name,description:e.description,defaultProviderId:e.default_provider_id,defaultModelId:e.default_model_id,defaultThinkingTokens:e.default_thinking_tokens,defaultBaseUrl:e.default_base_url,defaultApiKeySecretName:e.default_api_key_secret_name})))}catch(e){throw m.default.error(`[${this.serviceName}] Failed to get modes: ${e}`),new Error("Failed to get modes")}}async getMode(e){try{const t=await this.knex("agent_modes").where("mode_id",e).first();return t?{modeId:t.mode_id,name:t.name,description:t.description,defaultProviderId:t.default_provider_id,defaultModelId:t.default_model_id,defaultThinkingTokens:t.default_thinking_tokens,defaultBaseUrl:t.default_base_url,defaultApiKeySecretName:t.default_api_key_secret_name}:null}catch(t){throw m.default.error(`[${this.serviceName}] Failed to get mode ${e}: ${t}`),new Error(`Failed to get mode: ${e}`)}}async getUserConfiguration(e){try{const t=await this.knex("user_llm_configurations").where("user_id",e).select("*"),r=await this.getAllModes(),o={};for(const e of r)o[e.modeId]={activeProviderId:e.defaultProviderId,providerSettings:{}};for(const e of t)o[e.mode_id]||(o[e.mode_id]={activeProviderId:e.provider_id,providerSettings:{}}),e.is_active_for_mode&&(o[e.mode_id].activeProviderId=e.provider_id),o[e.mode_id].providerSettings[e.provider_id]={providerId:e.provider_id,selectedModelId:e.selected_model_id,baseUrl:e.base_url,thinkingTokens:e.thinking_tokens,apiKey:e.api_key?this.getMaskedApiKey(e.api_key):void 0,isApiKeySet:!!e.api_key};return o}catch(t){throw m.default.error(`[${this.serviceName}] Failed to get user configuration for ${e}: ${t}`),new Error(`Failed to get user configuration: ${e}`)}}async updateUserModeConfiguration(e,t,r,o){try{const n={};void 0!==o.selectedModelId&&(n.selected_model_id=o.selectedModelId),void 0!==o.baseUrl&&(n.base_url=o.baseUrl),void 0!==o.thinkingTokens&&(n.thinking_tokens=o.thinkingTokens),void 0!==o.apiKey&&(n.api_key=o.apiKey?this.encryptApiKey(o.apiKey):null);const s=await this.knex("user_llm_configurations").where({user_id:e,mode_id:t,provider_id:r}).first();"thinkingTokens"in o?n.thinking_tokens=void 0===o.thinkingTokens?null:o.thinkingTokens:s&&(n.thinking_tokens=null),s?await this.knex("user_llm_configurations").where({user_id:e,mode_id:t,provider_id:r}).update({...n,updated_at:this.knex.fn.now()}):await this.knex("user_llm_configurations").insert({user_id:e,mode_id:t,provider_id:r,...n,is_active_for_mode:!1})}catch(o){throw m.default.error(`[${this.serviceName}] Failed to update user configuration for ${e}, ${t}, ${r}: ${o}`),new Error(`Failed to update user configuration: ${e}, ${t}, ${r}`)}}async setActiveProviderForMode(e,t,r){try{await this.knex.transaction((async o=>{await o("user_llm_configurations").where({user_id:e,mode_id:t}).update({is_active_for_mode:!1,updated_at:o.fn.now()});await o("user_llm_configurations").where({user_id:e,mode_id:t,provider_id:r}).first()?await o("user_llm_configurations").where({user_id:e,mode_id:t,provider_id:r}).update({is_active_for_mode:!0,updated_at:o.fn.now()}):await o("user_llm_configurations").insert({user_id:e,mode_id:t,provider_id:r,is_active_for_mode:!0})}))}catch(o){throw m.default.error(`[${this.serviceName}] Failed to set active provider for ${e}, ${t}, ${r}: ${o}`),new Error(`Failed to set active provider: ${e}, ${t}, ${r}`)}}async assembleFinalConfiguration(e,t){try{const r=await this.getMode(t);if(!r)throw new Error(`Mode not found: ${t}`);const o=(await this.getUserConfiguration(e))[t];if(!o){const e=await this.getProvider(r.defaultProviderId);if(!e)throw new Error(`Default provider not found: ${r.defaultProviderId}`);const o=r.defaultModelId||e.defaultModelId;if(!o)throw new Error(`No default model found for mode: ${t} and provider: ${e.providerId}`);const n=await this.getModel(o);if(!n)throw new Error(`Model not found: ${o}`);let s;return r.defaultApiKeySecretName&&(s=process.env[r.defaultApiKeySecretName]),{modeId:t,providerId:e.providerId,modelId:o,baseUrl:r.defaultBaseUrl||e.defaultBaseUrl,apiKey:s,thinkingTokens:this.determineThinkingTokens(r,n),modelInfo:n}}const n=o.activeProviderId,s=await this.getProvider(n);if(!s)throw new Error(`Provider not found: ${n}`);const i=o.providerSettings[n]||{providerId:n,isApiKeySet:!1},a=i.selectedModelId||r.defaultModelId||s.defaultModelId;if(!a)throw new Error(`No model found for mode: ${t} and provider: ${s.providerId}`);const c=await this.getModel(a);if(!c)throw new Error(`Model not found: ${a}`);let l;if(i.isApiKeySet){const r=await this.knex("user_llm_configurations").where({user_id:e,mode_id:t,provider_id:n}).select("api_key").first();r&&r.api_key&&(l=this.decryptApiKey(r.api_key),m.default.info(`[${this.serviceName}] Using API key from user configurations for provider ${n}`))}if(!l)try{const e=this.providerRegistry.getProvider(n).getApiKeyName();if(l=p.ConfigService.getProperty(e),!l)throw new Error(`No API key found for provider ${n}. Please configure an API key in settings or system configuration.`);m.default.info(`[${this.serviceName}] Using API key from ConfigService for provider ${n}`)}catch(e){throw m.default.error(`[${this.serviceName}] Error getting API key for provider ${n}: ${e.message}`),new Error(`No valid API key configuration found for provider ${n}.`)}const d=i.baseUrl||r.defaultBaseUrl||s.defaultBaseUrl;return{modeId:t,providerId:n,modelId:a,baseUrl:d,apiKey:l,thinkingTokens:this.determineThinkingTokens(r,c,i.thinkingTokens),modelInfo:c}}catch(r){throw m.default.error(`[${this.serviceName}] Failed to assemble configuration for ${e}, ${t}: ${r}`),new Error(`Failed to assemble configuration: ${e}, ${t}`)}}determineThinkingTokens(e,t,r){if(t.supportsThinkingTokens)return void 0!==r?r:void 0!==e.defaultThinkingTokens?e.defaultThinkingTokens:void 0!==t.recommendedThinkingTokens?t.recommendedThinkingTokens:2048}encryptApiKey(e){if(!this.encryptionEnabled)return e;try{const t=f.createCipheriv("aes-256-cbc",this.encryptionKey,this.encryptionIv);let r=t.update(e,"utf8","hex");return r+=t.final("hex"),`enc:${r}`}catch(t){return m.default.error(`[${this.serviceName}] Failed to encrypt API key: ${t}`),e}}isEncryptedApiKey(e){return e.startsWith("enc:")}decryptApiKey(e){if(!this.isEncryptedApiKey(e))return e;if(!this.encryptionEnabled)return m.default.warn(`[${this.serviceName}] Found encrypted API key but encryption is not enabled`),e.substring(4);const t=e.substring(4);try{const e=f.createDecipheriv("aes-256-cbc",this.encryptionKey,this.encryptionIv);let r=e.update(t,"hex","utf8");return r+=e.final("utf8"),r}catch(e){return m.default.error(`[${this.serviceName}] Failed to decrypt API key: ${e}`),t}}getMaskedApiKey(e){try{const t=this.decryptApiKey(e);if(t.length<=8)return t;const r=t.substring(0,8);return`${r}${"*".repeat(Math.min(t.length-8,10))}`}catch(e){return m.default.error(`[${this.serviceName}] Failed to mask API key: ${e}`),"********"}}async findApiKeyForProvider(e,t){try{m.default.info(`[${this.serviceName}] Finding API key for user ${e} and provider ${t}`);const r=await this.knex("user_llm_configurations").where({user_id:e,provider_id:t}).whereNotNull("api_key").first();return r&&r.api_key?(m.default.info(`[${this.serviceName}] Found API key for provider ${t} from user ${e}`),{apiKey:this.decryptApiKey(r.api_key),baseUrl:r.base_url}):void m.default.info(`[${this.serviceName}] No API key found for provider ${t} from user ${e}`)}catch(e){return void m.default.error(`[${this.serviceName}] Error finding API key for provider ${t}: ${e.message}`)}}};t.EveConfigService=g,t.EveConfigService=g=i([(0,d.Injectable)(),c("design:paramtypes",[u.AppDataSource,h.ProviderRegistry])],g)},9150:e=>{"use strict";e.exports=require("@modelcontextprotocol/sdk/types.js")},9161:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.ChatCompletionModule=void 0;const n=r(3563),s=r(3239);let i=class{};t.ChatCompletionModule=i,t.ChatCompletionModule=i=o([(0,n.Module)({providers:[s.SummaryCompletion],exports:[s.SummaryCompletion]})],i)},9179:e=>{"use strict";e.exports=require("@langchain/community/document_loaders/fs/docx")},9187:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getDefaultKnexConfig=function(){y||(y=g());return y};const c=i(r(9896)),l=i(r(6928)),d=i(r(857)),u=a(r(9055)),f=l.join(d.homedir(),".eve","db","eve.sqlite");function p(){let e=__dirname,t=l.join(e,"migrations");for(u.default.info(`Looking for migrations in: ${t} - will recurse up looking for migrations`);!h(t);)e=l.dirname(e),t=l.join(e,"migrations");if(m(t)||(t=l.join(process.cwd(),"migrations")),m(t)||(t=l.join(process.cwd(),"server","migrations")),!m(t))throw new Error("No migrations directory found in any of the usual locations");return t}function h(e){return c.existsSync(e)&&m(e)}function m(e){return c.readdirSync(e).some((e=>e.endsWith(".js")))}function g(e){let t;void 0===e&&(e=process.env.DB_CHOICE||"local"),u.default.info(`Using database configuration: ${e}`);try{t=function(e=process.env.DB_CHOICE||"local"){let t,r=process.env.DB_CONFIG_PATH||"db-config.json";try{t=c.readFileSync(r,"utf8")}catch(e){r=l.join(process.cwd(),"config","db-config.json");try{t=c.readFileSync(r,"utf8")}catch(e){throw new Error("Unable to find db-config.json")}}u.default.info(`Using db config at: ${r}`);const o=JSON.parse(t);if(!o[e])throw u.default.error(`Invalid DB_CHOICE: ${e} - not found in db-config.json - ${JSON.stringify(o)}`),new Error(`Invalid DB_CHOICE: ${e} - not found in db-config.json`);const n=o[e],s=n.connection;if("object"==typeof s&&"filename"in s&&(s.filename=s.filename.replace("~",d.homedir()),!c.existsSync(s.filename))){const e=l.dirname(r),t=l.resolve(e,s.filename);u.default.info(`Resolved filename: ${t} from config file directory: ${e} using relative path: ${s.filename}`),c.existsSync(t)?s.filename=t:u.default.warn(`DB File does not exist: ${t}`)}const i=n.migrations;if(i&&"string"==typeof i.directory){const e=l.resolve(l.dirname(r),i.directory);m(e)&&(n.migrations.directory=e)}return n.useNullAsDefault=!0,n}(e)}catch(r){if("local"!==e)throw u.default.error("error",r),u.default.error(`Invalid DB_CHOICE: ${e} - no db-config.json found`),new Error(`Invalid DB_CHOICE: ${e} - no db-config.json found`);u.default.info("Did not find db-config.json, using default SQLite configuration"),t={client:"better-sqlite3",connection:{filename:f},useNullAsDefault:!0}}if(u.default.info(`Using db config (after making paths absolute): ${JSON.stringify(t)}`),t.migrations||(u.default.warn("No migrations directory found in db-config.json, using default"),t.migrations={directory:p()}),t.migrations.extension="js","better-sqlite3"===t.client?(u.default.warn("Enforcing single connection pool (min: 1, max: 1) for SQLite client to prevent locking issues."),t.pool={min:1,max:1,acquireTimeoutMillis:9e4},t.pragma&&t.pragma.busy_timeout&&(u.default.warn("Removing busy_timeout pragma as pool size is 1."),delete t.pragma.busy_timeout)):t.pool={min:1,max:10,acquireTimeoutMillis:6e4},t.connection&&"object"==typeof t.connection&&"filename"in t.connection){const e=t.connection.filename,r=l.dirname(e);c.existsSync(r)||(u.default.info(`Creating Database directory: ${r}`),c.mkdirSync(r,{recursive:!0}))}return u.default.info(`Using knex config: ${JSON.stringify(t)}`),t}var y=void 0;t.default=g},9191:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.LlmInitializerService=void 0;const i=r(3563),a=r(2776),c=s(r(9055));let l=class{constructor(e){this.appDataSource=e,this.serviceName="LlmInitializerService"}async onModuleInit(){c.default.info(`[${this.serviceName}] Initializing LLM configuration data...`);try{await this.initializeProviders(),await this.initializeModels(),await this.initializeAgentModes(),c.default.info(`[${this.serviceName}] LLM configuration data initialized successfully.`)}catch(e){c.default.error(`[${this.serviceName}] Error initializing LLM configuration data: ${e.message}`,e.stack)}}async initializeProviders(){try{await this.appDataSource.knex("llm_providers").where("provider_id","anthropic").first()?c.default.info(`[${this.serviceName}] Anthropic provider already exists.`):(c.default.info(`[${this.serviceName}] Creating Anthropic provider...`),await this.appDataSource.knex("llm_providers").insert({provider_id:"anthropic",name:"Anthropic",default_model_id:"claude-3-7-sonnet-20250219",requires_api_key:!0,metadata:JSON.stringify({description:"Anthropic Claude models",website:"https://www.anthropic.com"})}),c.default.info(`[${this.serviceName}] Anthropic provider created successfully.`));await this.appDataSource.knex("llm_providers").where("provider_id","gemini").first()?c.default.info(`[${this.serviceName}] Gemini provider already exists.`):(c.default.info(`[${this.serviceName}] Creating Gemini provider...`),await this.appDataSource.knex("llm_providers").insert({provider_id:"gemini",name:"Google Gemini",requires_api_key:!0,metadata:JSON.stringify({description:"Google Gemini models",website:"https://deepmind.google/technologies/gemini/"})}),c.default.info(`[${this.serviceName}] Gemini provider created successfully.`))}catch(e){if(!e.message.includes("UNIQUE constraint failed"))throw c.default.error(`[${this.serviceName}] Error initializing providers: ${e.message}`),e;c.default.info(`[${this.serviceName}] Anthropic provider already exists (concurrent initialization).`)}}async initializeModels(){try{await this.appDataSource.knex("llm_models").where("model_id","claude-3-7-sonnet-20250219").first()?c.default.info(`[${this.serviceName}] Claude 3.7 Sonnet model already exists.`):(c.default.info(`[${this.serviceName}] Creating Claude 3.7 Sonnet model...`),await this.appDataSource.knex("llm_models").insert({model_id:"claude-3-7-sonnet-20250219",provider_id:"anthropic",name:"Claude 3.7 Sonnet",context_window:2e5,max_output_tokens:4096,supports_images:!0,supports_tool_use:!0,supports_computer_use:!0,supports_prompt_cache:!1,supports_thinking_tokens:!0,recommended_thinking_tokens:1024,max_thinking_tokens:4e3,input_cost_per_million_tokens:15,output_cost_per_million_tokens:75,is_default_for_provider:!0,metadata:JSON.stringify({description:"Claude 3.7 Sonnet is a powerful, general-purpose AI assistant that excels at a wide range of tasks from creative content generation to complex reasoning.",release_date:"2025-02-19"})}),c.default.info(`[${this.serviceName}] Claude 3.7 Sonnet model created successfully.`))}catch(e){if(!e.message.includes("UNIQUE constraint failed"))throw c.default.error(`[${this.serviceName}] Error initializing models: ${e.message}`),e;c.default.info(`[${this.serviceName}] Claude 3.7 Sonnet model already exists (concurrent initialization).`)}}async initializeAgentModes(){try{await this.appDataSource.knex("agent_modes").where("mode_id","plan").first()?c.default.info(`[${this.serviceName}] Plan mode already exists.`):(c.default.info(`[${this.serviceName}] Creating plan mode...`),await this.appDataSource.knex("agent_modes").insert({mode_id:"plan",name:"Plan Mode",description:"Mode for planning tasks",default_provider_id:"anthropic",default_model_id:"claude-3-7-sonnet-20250219",default_thinking_tokens:1024,default_api_key_secret_name:"ANTHROPIC_API_KEY"}),c.default.info(`[${this.serviceName}] Plan mode created successfully.`))}catch(e){if(!e.message.includes("UNIQUE constraint failed"))throw c.default.error(`[${this.serviceName}] Error initializing plan mode: ${e.message}`),e;c.default.info(`[${this.serviceName}] Plan mode already exists (concurrent initialization).`)}try{await this.appDataSource.knex("agent_modes").where("mode_id","act").first()?c.default.info(`[${this.serviceName}] Act mode already exists.`):(c.default.info(`[${this.serviceName}] Creating act mode...`),await this.appDataSource.knex("agent_modes").insert({mode_id:"act",name:"Act Mode",description:"Mode for executing tasks",default_provider_id:"anthropic",default_model_id:"claude-3-7-sonnet-20250219",default_thinking_tokens:1024,default_api_key_secret_name:"ANTHROPIC_API_KEY"}),c.default.info(`[${this.serviceName}] Act mode created successfully.`))}catch(e){if(!e.message.includes("UNIQUE constraint failed"))throw c.default.error(`[${this.serviceName}] Error initializing act mode: ${e.message}`),e;c.default.info(`[${this.serviceName}] Act mode already exists (concurrent initialization).`)}}};t.LlmInitializerService=l,t.LlmInitializerService=l=o([(0,i.Injectable)(),n("design:paramtypes",[a.AppDataSource])],l)},9220:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.AskFollowupQuestionToolFactory=void 0;const s=r(3563),i=r(1921);let a=class{constructor(){}getToolName(){return"ask_followup_question"}create(e){return new i.AskFollowupQuestionTool}};t.AskFollowupQuestionToolFactory=a,t.AskFollowupQuestionToolFactory=a=o([(0,s.Injectable)(),n("design:paramtypes",[])],a)},9233:e=>{"use strict";e.exports=require("winston-daily-rotate-file")},9234:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.RequestContext=void 0;const a=r(6426),c=i(r(9896)),l=i(r(6928));class d{constructor(e,t,r){this.workspace=e,this.requestId=t,this.sessionId=r,this.toolBaseDir=null}getToolBaseDir(){return null!==this.toolBaseDir?this.toolBaseDir:this.workspace.repoBaseDir}setToolBaseDir(e){this.toolBaseDir=e}portFromSourceTree(){if(this.workspace.portFromBaseDir)return(0,a.generateAdaptiveTree)(this.workspace.portFromBaseDir)}repositoryTree(){return(0,a.generateAdaptiveTree)(this.workspace.repoBaseDir)}repositoryHints(){const e=l.join(this.workspace.repoBaseDir,"hints.md");if(c.existsSync(e))return c.readFileSync(e,"utf-8")}productHints(){const e=l.join(this.workspace.repoBaseDir,"product-hints.md");if(c.existsSync(e))return c.readFileSync(e,"utf-8")}}t.RequestContext=d,d.TREE_SIZE_WARNING_THRESHOLD=1e5},9235:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.ListFilesToolFactory=void 0;const s=r(3563),i=r(62),a=r(2141),c=r(4155);let l=class{constructor(e,t){this.fileSystemService=e,this.responseFormatter=t}getToolName(){return"list_files"}create(e){return new i.ListFilesTool(this.fileSystemService,this.responseFormatter,e.workingDir)}};t.ListFilesToolFactory=l,t.ListFilesToolFactory=l=o([(0,s.Injectable)(),n("design:paramtypes",[a.FileSystemService,c.ResponseFormatterService])],l)},9314:e=>{"use strict";e.exports=require("@langchain/langgraph")},9352:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.DeepSeekProvider=void 0;const o=r(8483),n=r(8959),s=r(2368),i=r(6228);class a extends o.BaseProvider{getName(){return"deepseek"}getBaseChatModel(e,t){return new i.ChatOpenAI({modelName:this.shortModelName(e),temperature:t.temperature,openAIApiKey:s.ConfigService.getInstance().getProperty("DEEPSEEK_API_KEY"),configuration:{baseURL:a.BASE_URL}})}async getModelDescriptors(){return[new n.ModelDescriptor("deepseek",a.DEEPSEEK_CHAT,0,0,0,0),new n.ModelDescriptor("deepseek",a.DEEPSEEK_REASONER,0,0,0,0)]}isValid(){return!!s.ConfigService.getInstance().getProperty("DEEPSEEK_API_KEY")}supportsOnDemandModels(){return!1}}t.DeepSeekProvider=a,a.DEEPSEEK_CHAT="deepseek-chat",a.DEEPSEEK_REASONER="deepseek-reasoner",a.BASE_URL="https://api.deepseek.com/v1"},9361:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GoogleProvider=void 0;const o=r(8483),n=r(8959),s=r(9664),i=r(2368);class a extends o.BaseProvider{getName(){return"google"}getBaseChatModel(e,t){const r=i.ConfigService.getInstance().getProperty("GOOGLE_API_KEY");if(!r)throw new Error("Google API key not found in configuration");const o=i.ConfigService.getInstance().getProperty("GOOGLE_BASE_URL")||"https://generativelanguage.googleapis.com";return new s.ChatGoogleGenerativeAI({model:this.shortModelName(e),maxOutputTokens:65536,apiKey:r,baseUrl:o})}supportsCancellation(){return!0}async getModelDescriptors(){return[new n.ModelDescriptor(this.getName(),a.GEMINI_PRO_EXP_MODEL,0,0,0,0)]}isValid(){return!!i.ConfigService.getInstance().getProperty("GOOGLE_API_KEY")}}t.GoogleProvider=a,a.GEMINI_PRO_EXP_MODEL="gemini-2.5-pro-exp-03-25"},9445:e=>{"use strict";e.exports=require("tree-sitter-go")},9448:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createStreamProcessor=t.createPatternUtils=t.createStateManager=t.createBlockManager=void 0;const o=r(1075);Object.defineProperty(t,"createBlockManager",{enumerable:!0,get:function(){return o.createBlockManager}});const n=r(8191);Object.defineProperty(t,"createStateManager",{enumerable:!0,get:function(){return n.createStateManager}});const s=r(8434);Object.defineProperty(t,"createPatternUtils",{enumerable:!0,get:function(){return s.createPatternUtils}});const i=r(7627);Object.defineProperty(t,"createStreamProcessor",{enumerable:!0,get:function(){return i.createStreamProcessor}})},9449:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i};Object.defineProperty(t,"__esModule",{value:!0}),t.LangchainModule=void 0;const n=r(3563),s=r(1e3);let i=class{};t.LangchainModule=i,t.LangchainModule=i=o([(0,n.Module)({providers:[s.CheckpointerService],exports:[s.CheckpointerService]})],i)},9461:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ListFiles=void 0;const c=r(5534),l=r(1569),d=i(r(9896)),u=i(r(6928)),f=a(r(9055));class p extends c.Tool{constructor(e){super(),this.name="list_files",this.description="List files and directories, showing size, timestamps, and for directories also showing total size and latest update time",this.schema=l.z.object({dirPath:l.z.string().describe("The relative path of the directory to list")}),this.workspaceRootDir=e}async _call(e){const t=this.listFiles(e.dirPath);return"Directory listing for "+e.dirPath+":\n"+JSON.stringify(t,null,2)}getFilePermissions(e){const t=["---","--x","-w-","-wx","r--","r-x","rw-","rwx"];return`${t[e>>6&7]}${t[e>>3&7]}${t[7&e]}`}getDirStats(e){let t=0,r=new Date(0);try{return d.readdirSync(e).forEach((o=>{const n=u.join(e,o),s=d.statSync(n);t+=s.size,s.mtime>r&&(r=s.mtime)})),{totalSize:t,latestUpdate:r.toISOString()}}catch(e){return f.default.error(`Error getting directory stats: ${e.message}`),{totalSize:0,latestUpdate:new Date(0).toISOString()}}}listFiles(e){f.default.info(`ListFiles.listFiles called with: ${e}`);const t=u.join(this.workspaceRootDir,e);try{return d.readdirSync(t).map((e=>{const r=u.join(t,e),o=d.statSync(r),n={name:e,size:o.size,modifiedTime:o.mtime.toISOString(),isDirectory:o.isDirectory(),permissions:this.getFilePermissions(o.mode)};if(o.isDirectory()){const e=this.getDirStats(r);n.totalSize=e.totalSize,n.latestUpdate=e.latestUpdate}return n}))}catch(t){if(f.default.error(`Error listing directory: ${t.message}`),"ENOENT"===t.code)throw new Error(`Directory not found - ${e}`);throw new Error(`Error listing directory: ${t.message}`)}}}t.ListFiles=p},9547:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.retry=i,t.retryApiOperation=a,t.retryWithContextTruncation=async function(e,t,r={}){try{return await a(e,r)}catch(e){if((0,n.toEveAgentError)(e)instanceof n.ContextWindowError){return(r.logger||s.logger).warn("[RetryUtil] Context window exceeded. Truncating conversation history and retrying."),await t()}throw e}};const n=r(9581),s={maxRetries:3,initialDelayMs:1e3,maxDelayMs:3e4,backoffFactor:2,jitter:!0,isRetriable:e=>(0,n.toEveAgentError)(e).retriable,onRetry:()=>{},logger:o(r(9055)).default};async function i(e,t={}){const r={...s,...t};let o,i=0;for(;i<=r.maxRetries;)try{return await e()}catch(e){if(o=e,i++,i>r.maxRetries||!r.isRetriable(e))throw e;let t=r.initialDelayMs*Math.pow(r.backoffFactor,i-1);if(r.jitter){const e=.8+.4*Math.random();t=Math.floor(t*e)}t=Math.min(t,r.maxDelayMs);const s=(0,n.toEveAgentError)(e);s instanceof n.RateLimitError&&s.context?.retryAfterSeconds&&(t=Math.max(t,1e3*s.context.retryAfterSeconds)),r.logger.warn(`[RetryUtil] Retrying operation after error (attempt ${i}/${r.maxRetries}, delay: ${t}ms): ${s.message}`),r.onRetry(e,i,t),await new Promise((e=>setTimeout(e,t)))}throw o}async function a(e,t={}){return i(e,{...t,isRetriable:e=>{const r=(0,n.toEveAgentError)(e);return!(r instanceof n.ContextWindowError)&&(r instanceof n.ApiError?r.retriable:t.isRetriable?t.isRetriable(e):s.isRetriable(e))}})}},9556:e=>{"use strict";e.exports=require("@nestjs/platform-express")},9560:function(e,t,r){"use strict";var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.createBlockManager=function(e){function t(e){return 0===e.trim().length}return{safeEmitUpdate(r){const o=e.getCurrentBlockId();if(!o)return s.default.error("[BlockManager] CRITICAL: Attempting to yield blockUpdate with null currentBlockId!"),null;if(r.appendContent){if(t(r.appendContent)&&!r.errorText&&!r.newStatus)return null;if("finished"===r.newStatus){const t=e.getContentBuffer()+r.appendContent;e.clearContentBuffer();return{type:"blockUpdate",blockId:o,appendContent:t.trim().length>0?t:void 0,newStatus:"finished"}}e.appendContentBuffer(r.appendContent);const n=e.getContentBuffer();if(n.length<i&&!r.errorText)return null;const s=n;return e.clearContentBuffer(),{type:"blockUpdate",blockId:o,appendContent:s}}return{type:"blockUpdate",blockId:o,...r}},async*finishCurrentBlockIfNeeded(){if(e.isBlockGenerating()&&e.getCurrentBlockId()){const t=e.getContentBuffer(),r=this.safeEmitUpdate({appendContent:t.length>0?t:void 0,newStatus:"finished"});r&&(yield r),e.clearContentBuffer(),e.setBlockGenerating(!1),e.setCurrentBlockId(null),e.setCurrentBlockType(null),e.setCurrentTagName(null)}},async*flushBuffer(){const r=e.getContentBuffer();if(r&&!t(r)){const e=this.safeEmitUpdate({appendContent:r});e&&(yield e)}e.clearContentBuffer()},async*startNewBlock(t,r,o){yield*this.finishCurrentBlockIfNeeded();const s=(0,n.ulid)();e.setCurrentBlockId(s),e.setCurrentBlockType(t),e.setCurrentTagName(r),e.setBlockGenerating(!0);const i={blockId:s,blockType:t,status:"error"===t?"error":"generating",content:"error"===t?"":o};"tool_call"!==t&&"thinking"!==t||!r||(i.tagName=r),yield{type:"block",block:i}},async*appendOrStartText(t,r){if(t)if(r.value+=t,e.isBlockGenerating()&&e.getCurrentBlockId()){const e=this.safeEmitUpdate({appendContent:t});e&&(yield e)}else t.trim()&&(yield*this.startNewBlock("text",null,t))},async*appendAndFinishText(t,r){if(t)if(r.value+=t,e.isBlockGenerating()&&e.getCurrentBlockId()){const r=this.safeEmitUpdate({appendContent:t,newStatus:"finished"});r&&(yield r),e.setBlockGenerating(!1),e.setCurrentBlockId(null),e.setCurrentBlockType(null),e.setCurrentTagName(null)}else if(t.trim()){yield*this.startNewBlock("text",null,t);const r=this.safeEmitUpdate({newStatus:"finished"});r&&(yield r),e.setBlockGenerating(!1),e.setCurrentBlockId(null),e.setCurrentBlockType(null),e.setCurrentTagName(null)}},async*createErrorBlock(e){yield*this.finishCurrentBlockIfNeeded();const t=(0,n.ulid)();yield{type:"block",block:{blockId:t,blockType:"error",status:"error",content:e}}}}};const n=r(9100),s=o(r(9055)),i=10},9581:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MissingToolParameterError=t.InvalidToolParameterError=t.ToolRejectedError=t.CommandExecutionError=t.PermissionError=t.FileNotFoundError=t.FileSystemError=t.ToolExecutionError=t.RateLimitError=t.ContextWindowError=t.ApiError=t.EveAgentError=void 0,t.toEveAgentError=function(e,t="UNKNOWN_ERROR",i="An unknown error occurred."){if(e instanceof r)return e;const a=e?.message||i,c=e?.code||t,l=e?.context||{};if("context_length_exceeded"===c||a.includes("context window")||a.includes("context length")||a.includes("token limit"))return new n(a,l.provider||"unknown",l);if("rate_limit_exceeded"===c||a.includes("rate limit")||a.includes("too many requests"))return new s(a,l.provider||"unknown",e?.retryAfter,l);if(e?.statusCode||e?.status){const t=e?.statusCode||e?.status;return new o(a,c,t,l,function(e){if(!e)return!1;return 429===e||e>=500&&e<600}(t))}return new r(a,c,l)};class r extends Error{constructor(e,t="UNKNOWN_ERROR",o,n=!1){super(e),this.name=this.constructor.name,this.code=t,this.context=o,this.retriable=n,Object.setPrototypeOf(this,r.prototype)}toUserMessage(){return this.message}toLlmMessage(){return`[Error: ${this.code}] ${this.message}`}toJSON(){return{name:this.name,message:this.message,code:this.code,context:this.context,retriable:this.retriable}}}t.EveAgentError=r;class o extends r{constructor(e,t="API_ERROR",r,n,s=!1){super(e,t,n,s),this.statusCode=r,Object.setPrototypeOf(this,o.prototype)}toJSON(){return{...super.toJSON(),statusCode:this.statusCode}}toUserMessage(){return`API Error: ${this.message}${this.statusCode?` (Status: ${this.statusCode})`:""}`}toLlmMessage(){return`[API Error: ${this.code}${this.statusCode?`, Status: ${this.statusCode}`:""}] ${this.message}`}}t.ApiError=o;class n extends o{constructor(e="The context window has been exceeded.",t="unknown",r){super(e,"CONTEXT_WINDOW_EXCEEDED",413,{...r,provider:t},!0),Object.setPrototypeOf(this,n.prototype)}toUserMessage(){return"The conversation history is too large for the AI model. Some older messages will be automatically removed to continue."}toLlmMessage(){return"[Context Window Exceeded] The conversation history was truncated to fit within the model's context window. Some earlier messages have been removed."}}t.ContextWindowError=n;class s extends o{constructor(e="Rate limit exceeded. Please try again later.",t="unknown",r,o){super(e,"RATE_LIMIT_EXCEEDED",429,{...o,provider:t,retryAfterSeconds:r},!0),Object.setPrototypeOf(this,s.prototype)}toUserMessage(){const e=this.context?.retryAfterSeconds;return e?`Rate limit exceeded. Please try again in ${e} seconds.`:"Rate limit exceeded. Please try again later."}}t.RateLimitError=s;class i extends r{constructor(e,t,r="TOOL_EXECUTION_ERROR",o,n=!1){super(e,r,o,n),this.toolName=t,Object.setPrototypeOf(this,i.prototype)}toJSON(){return{...super.toJSON(),toolName:this.toolName}}toUserMessage(){return`Error executing tool '${this.toolName}': ${this.message}`}toLlmMessage(){return`[Tool Error: ${this.code}, Tool: ${this.toolName}] ${this.message}`}}t.ToolExecutionError=i;class a extends i{constructor(e,t,r,o="FILE_SYSTEM_ERROR",n,s=!1){super(e,t,o,{...n,path:r},s),this.path=r,Object.setPrototypeOf(this,a.prototype)}toJSON(){return{...super.toJSON(),path:this.path}}toUserMessage(){return this.path?`Error with file '${this.path}': ${this.message}`:super.toUserMessage()}toLlmMessage(){return this.path?`[File Error: ${this.code}, Path: ${this.path}] ${this.message}`:super.toLlmMessage()}}t.FileSystemError=a;class c extends a{constructor(e,t,r){super(`File not found: ${e}`,t,e,"FILE_NOT_FOUND",r,!1),Object.setPrototypeOf(this,c.prototype)}}t.FileNotFoundError=c;class l extends a{constructor(e,t,r){super(`Permission denied: ${e}`,t,e,"PERMISSION_DENIED",r,!1),Object.setPrototypeOf(this,l.prototype)}}t.PermissionError=l;class d extends i{constructor(e,t,r,o){super(e,"execute_command","COMMAND_EXECUTION_ERROR",{...o,command:t,exitCode:r},!1),this.command=t,this.exitCode=r,Object.setPrototypeOf(this,d.prototype)}toJSON(){return{...super.toJSON(),command:this.command,exitCode:this.exitCode}}toUserMessage(){return this.command?`Error executing command '${this.command}'${this.exitCode?` (Exit code: ${this.exitCode})`:""}: ${this.message}`:super.toUserMessage()}toLlmMessage(){return this.command?`[Command Error${this.exitCode?`, Exit Code: ${this.exitCode}`:""}] Error executing '${this.command}': ${this.message}`:super.toLlmMessage()}}t.CommandExecutionError=d;class u extends i{constructor(e,t){super("The user denied this operation.",e,"TOOL_REJECTED",t,!1),Object.setPrototypeOf(this,u.prototype)}toLlmMessage(){return`[Tool Rejected] The user denied the use of the '${this.toolName}' tool. Consider an alternative approach or ask for more information.`}}t.ToolRejectedError=u;class f extends i{constructor(e,t,r,o){super(r||`Invalid parameter '${e}' for tool '${t}'.`,t,"INVALID_TOOL_PARAMETER",{...o,paramName:e},!1),this.paramName=e,Object.setPrototypeOf(this,f.prototype)}toJSON(){return{...super.toJSON(),paramName:this.paramName}}toLlmMessage(){return`[Invalid Parameter: ${this.paramName}] ${this.message}`}}t.InvalidToolParameterError=f;class p extends f{constructor(e,t,r){super(e,t,`Missing required parameter '${e}' for tool '${t}'.`,r),Object.setPrototypeOf(this,p.prototype)}}t.MissingToolParameterError=p},9615:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Task=t.TaskStatus=void 0;const o=r(9100);var n;!function(e){e.BACKLOG="backlog",e.IN_PROGRESS="in_progress",e.DONE="done"}(n||(t.TaskStatus=n={}));t.Task=class{constructor(e,t,r=n.BACKLOG,s=(0,o.ulid)(),i=new Date,a=new Date){this.id=s,this.title=e,this.description=t,this.status=r,this.createdAt=i,this.updatedAt=a}}},9664:e=>{"use strict";e.exports=require("@langchain/google-genai")},9668:function(e,t,r){"use strict";var o,n=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var n=Object.getOwnPropertyDescriptor(t,r);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,n)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},a=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=o(e),i=0;i<r.length;i++)"default"!==r[i]&&n(t,e,r[i]);return s(t,e),t}),c=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UserService=t.AuthenticationError=void 0;const d=r(3563),u=r(2368),f=l(r(8938)),p=a(r(857)),h=l(r(9055));class m extends Error{constructor(e,t){super(e),this.cause=t,this.name="AuthenticationError"}}t.AuthenticationError=m;let g=class{constructor(e){this.configService=e,this.userData=null,this.lastAuthCheck=null,this.CACHE_TTL_MS=864e5}async getCurrentUser(){if(this.userData&&this.lastAuthCheck&&Date.now()-this.lastAuthCheck.getTime()<this.CACHE_TTL_MS)return this.userData;const e=this.configService.getProperty("EVE_API_KEY");if(!e)throw h.default.error("[UserService] API Key is not configured"),new m("API Key is not configured");if(!this.isValidUUID(e))throw h.default.error("[UserService] Invalid API Key format"),new m("Invalid API Key format");try{const t=p.hostname(),r=await f.default.post("https://otiiwxlfsrejhbrxdras.supabase.co/functions/v1/log-access",{hostname:t},{headers:{Authorization:`Bearer ${e}`},timeout:3e3});if(r.data&&r.data.userId&&r.data.email){const{userId:e,email:t}=r.data;return this.userData={userId:e,email:t},this.lastAuthCheck=new Date,h.default.info(`[UserService] Access granted for user: ${t} (ID: ${e})`),this.userData}throw h.default.error("[UserService] Log access response did not contain expected user data"),new m("Authentication response did not contain expected user data")}catch(e){const t=e;throw t.response?(h.default.error(`[UserService] Authentication failed with status ${t.response.status}`),new m(`Authentication failed with status ${t.response.status}`,e)):t.request?(h.default.error("[UserService] Authentication request failed - no response from server"),new m("Authentication server is unreachable",e)):(h.default.error("[UserService] Authentication request setup failed",e),new m("Authentication request setup failed",e))}}isValidUUID(e){return/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)}};t.UserService=g,t.UserService=g=i([(0,d.Injectable)(),c("design:paramtypes",[u.ConfigService])],g)},9791:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default="\n(function_declaration\n  name: (identifier) @name.definition.function) @definition.function\n\n(method_definition\n  name: (property_identifier) @name.definition.method) @definition.method\n\n(class_declaration\n  name: (identifier) @name.definition.class) @definition.class\n"},9841:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0}),t.AttemptCompletionToolFactory=void 0;const s=r(3563),i=r(3060);let a=class{constructor(){}getToolName(){return"attempt_completion"}create(e){return new i.AttemptCompletionTool}};t.AttemptCompletionToolFactory=a,t.AttemptCompletionToolFactory=a=o([(0,s.Injectable)(),n("design:paramtypes",[])],a)},9863:e=>{"use strict";e.exports=require("xpath")},9896:e=>{"use strict";e.exports=require("fs")},9970:e=>{"use strict";e.exports=require("@anthropic-ai/sdk")},9989:function(e,t,r){"use strict";var o=this&&this.__decorate||function(e,t,r,o){var n,s=arguments.length,i=s<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(i=(s<3?n(i):s>3?n(t,r,i):n(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},n=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.MutationsController=void 0;const i=r(3563),a=r(7602);let c=class{constructor(e){this.mutationsService=e}async getMutationsForSession(e){return this.mutationsService.getMutationsForSession(e)}async getMutation(e){return this.mutationsService.getMutation(e)}};t.MutationsController=c,o([(0,i.Get)("session/:sessionId"),s(0,(0,i.Param)("sessionId")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"getMutationsForSession",null),o([(0,i.Get)(":id"),s(0,(0,i.Param)("id")),n("design:type",Function),n("design:paramtypes",[String]),n("design:returntype",Promise)],c.prototype,"getMutation",null),t.MutationsController=c=o([(0,i.Controller)("mutations"),n("design:paramtypes",[a.MutationsService])],c)}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__webpack_require__),r.loaded=!0,r.exports}__webpack_require__.c=__webpack_module_cache__,__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var __webpack_exports__=__webpack_require__(__webpack_require__.s=7201)})();