import{p as w}from"./chunk-4BMEZGHF-Bo_5ucvh.js";import{C as B,s as S,g as F,n as z,o as P,b as W,c as D,_ as n,l as v,D as x,E as T,t as E,H as _,k as A}from"./index-CbH9nPw3.js";import{p as N}from"./radar-MK3ICKWK-Do_R1f6t.js";import"./_baseUniq-Bb8CnTHD.js";import"./_basePickBy-rOfB6rBO.js";import"./clone-M8tCxo-d.js";var C={packet:[]},m=structuredClone(C),L=B.packet,Y=n((()=>{const t=x({...L,...T().packet});return t.showBits&&(t.paddingY+=10),t}),"getConfig"),H=n((()=>m.packet),"getPacket"),I=n((t=>{t.length>0&&m.packet.push(t)}),"pushWord"),M=n((()=>{E(),m=structuredClone(C)}),"clear"),h={pushWord:I,getPacket:H,getConfig:Y,clear:M,setAccTitle:S,getAccTitle:F,setDiagramTitle:z,getDiagramTitle:P,getAccDescription:W,setAccDescription:D},O=1e4,G=n((t=>{w(t,h);let e=-1,a=[],r=1;const{bitsPerRow:n}=h.getConfig();for(let{start:o,end:l,label:s}of t.blocks){if(l&&l<o)throw new Error(`Packet block ${o} - ${l} is invalid. End must be greater than start.`);if(o!==e+1)throw new Error(`Packet block ${o} - ${l??o} is not contiguous. It should start from ${e+1}.`);for(e=l??o,v.debug(`Packet block ${o} - ${e} with label ${s}`);a.length<=n+1&&h.getPacket().length<O;){const[t,e]=K({start:o,end:l,label:s},r,n);if(a.push(t),t.end+1===r*n&&(h.pushWord(a),a=[],r++),!e)break;({start:o,end:l,label:s}=e)}}h.pushWord(a)}),"populate"),K=n(((t,e,a)=>{if(void 0===t.end&&(t.end=t.start),t.start>t.end)throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);return t.end+1<=e*a?[t,void 0]:[{start:t.start,end:e*a-1,label:t.label},{start:e*a,end:t.end,label:t.label}]}),"getNextFittingBlock"),R={parse:n((async t=>{const e=await N("packet",t);v.debug(e),G(e)}),"parse")},U=n(((t,e,a,r)=>{const n=r.db,o=n.getConfig(),{rowHeight:l,paddingY:s,bitWidth:i,bitsPerRow:c}=o,d=n.getPacket(),p=n.getDiagramTitle(),k=l+s,b=k*(d.length+1)-(p?0:l),h=i*c+2,g=_(e);g.attr("viewbox",`0 0 ${h} ${b}`),A(g,b,h,o.useMaxWidth);for(const[t,e]of d.entries())X(g,e,t,o);g.append("text").text(p).attr("x",h/2).attr("y",b-k/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")}),"draw"),X=n(((t,e,a,{rowHeight:r,paddingX:n,paddingY:o,bitWidth:l,bitsPerRow:s,showBits:i})=>{const c=t.append("g"),d=a*(r+o)+o;for(const t of e){const e=t.start%s*l+1,a=(t.end-t.start+1)*l-n;if(c.append("rect").attr("x",e).attr("y",d).attr("width",a).attr("height",r).attr("class","packetBlock"),c.append("text").attr("x",e+a/2).attr("y",d+r/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(t.label),!i)continue;const o=t.end===t.start,p=d-2;c.append("text").attr("x",e+(o?a/2:0)).attr("y",p).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",o?"middle":"start").text(t.start),o||c.append("text").attr("x",e+a).attr("y",p).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(t.end)}}),"drawWord"),j={draw:U},q={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},J=n((({packet:t}={})=>{const e=x(q,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`}),"styles"),rt={parser:R,db:h,renderer:j,styles:J};export{rt as diagram};