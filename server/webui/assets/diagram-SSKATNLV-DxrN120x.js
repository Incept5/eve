import{p as k}from"./chunk-4BMEZGHF-BtVf7-KU.js";import{C as R,_ as l,s as E,g as I,n as _,o as D,b as F,c as G,l as P,D as y,E as C,t as z,H,K as V}from"./index-vojyHYZE.js";import{p as W}from"./radar-MK3ICKWK-Dx33eo8c.js";import"./_baseUniq-CnE7gPf3.js";import"./_basePickBy-CmZgzr2G.js";import"./clone-BQc1gzsH.js";var h={showLegend:!0,ticks:5,max:null,min:0,graticule:"circle"},w={axes:[],curves:[],options:h},m=structuredClone(w),B=R.radar,j=l((()=>y({...B,...C().radar})),"getConfig"),b=l((()=>m.axes),"getAxes"),K=l((()=>m.curves),"getCurves"),N=l((()=>m.options),"getOptions"),U=l((t=>{m.axes=t.map((t=>({name:t.name,label:t.label??t.name})))}),"setAxes"),X=l((t=>{m.curves=t.map((t=>({name:t.name,label:t.label??t.name,entries:Y(t.entries)})))}),"setCurves"),Y=l((t=>{if(null==t[0].axis)return t.map((t=>t.value));const e=b();if(0===e.length)throw new Error("Axes must be populated before curves for reference entries");return e.map((e=>{const a=t.find((t=>{var a;return(null==(a=t.axis)?void 0:a.$refText)===e.name}));if(void 0===a)throw new Error("Missing entry for axis "+e.label);return a.value}))}),"computeCurveEntries"),Z=l((t=>{var e,a,r,n,s;const i=t.reduce(((t,e)=>(t[e.name]=e,t)),{});m.options={showLegend:(null==(e=i.showLegend)?void 0:e.value)??h.showLegend,ticks:(null==(a=i.ticks)?void 0:a.value)??h.ticks,max:(null==(r=i.max)?void 0:r.value)??h.max,min:(null==(n=i.min)?void 0:n.value)??h.min,graticule:(null==(s=i.graticule)?void 0:s.value)??h.graticule}}),"setOptions"),q=l((()=>{z(),m=structuredClone(w)}),"clear"),$={getAxes:b,getCurves:K,getOptions:N,setAxes:U,setCurves:X,setOptions:Z,getConfig:j,clear:q,setAccTitle:E,getAccTitle:I,setDiagramTitle:_,getDiagramTitle:D,getAccDescription:F,setAccDescription:G},J=l((t=>{k(t,$);const{axes:e,curves:a,options:r}=t;$.setAxes(e),$.setCurves(a),$.setOptions(r)}),"populate"),Q={parse:l((async t=>{const e=await W("radar",t);P.debug(e),J(e)}),"parse")},tt=l(((t,e,a,r)=>{const n=r.db,s=n.getAxes(),i=n.getCurves(),o=n.getOptions(),l=n.getConfig(),c=n.getDiagramTitle(),d=H(e),g=et(d,l),h=o.max??Math.max(...i.map((t=>Math.max(...t.entries)))),u=o.min,p=Math.min(l.width,l.height)/2;at(g,s,p,o.ticks,o.graticule),rt(g,s,p,l),M(g,s,i,u,h,o.graticule,l),T(g,i,o.showLegend,l),g.append("text").attr("class","radarTitle").text(c).attr("x",0).attr("y",-l.height/2-l.marginTop)}),"draw"),et=l(((t,e)=>{const a=e.width+e.marginLeft+e.marginRight,r=e.height+e.marginTop+e.marginBottom,n=e.marginLeft+e.width/2,s=e.marginTop+e.height/2;return t.attr("viewbox",`0 0 ${a} ${r}`).attr("width",a).attr("height",r),t.append("g").attr("transform",`translate(${n}, ${s})`)}),"drawFrame"),at=l(((t,e,a,r,n)=>{if("circle"===n)for(let e=0;e<r;e++){const n=a*(e+1)/r;t.append("circle").attr("r",n).attr("class","radarGraticule")}else if("polygon"===n){const n=e.length;for(let s=0;s<r;s++){const i=a*(s+1)/r,o=e.map(((t,e)=>{const a=2*e*Math.PI/n-Math.PI/2;return`${i*Math.cos(a)},${i*Math.sin(a)}`})).join(" ");t.append("polygon").attr("points",o).attr("class","radarGraticule")}}}),"drawGraticule"),rt=l(((t,e,a,r)=>{const n=e.length;for(let s=0;s<n;s++){const i=e[s].label,o=2*s*Math.PI/n-Math.PI/2;t.append("line").attr("x1",0).attr("y1",0).attr("x2",a*r.axisScaleFactor*Math.cos(o)).attr("y2",a*r.axisScaleFactor*Math.sin(o)).attr("class","radarAxisLine"),t.append("text").text(i).attr("x",a*r.axisLabelFactor*Math.cos(o)).attr("y",a*r.axisLabelFactor*Math.sin(o)).attr("class","radarAxisLabel")}}),"drawAxes");function M(t,e,a,r,n,s,i){const o=e.length,l=Math.min(i.width,i.height)/2;a.forEach(((e,a)=>{if(e.entries.length!==o)return;const c=e.entries.map(((t,e)=>{const a=2*Math.PI*e/o-Math.PI/2,s=A(t,r,n,l);return{x:s*Math.cos(a),y:s*Math.sin(a)}}));"circle"===s?t.append("path").attr("d",L(c,i.curveTension)).attr("class",`radarCurve-${a}`):"polygon"===s&&t.append("polygon").attr("points",c.map((t=>`${t.x},${t.y}`)).join(" ")).attr("class",`radarCurve-${a}`)}))}function A(t,e,a,r){return r*(Math.min(Math.max(t,e),a)-e)/(a-e)}function L(t,e){const a=t.length;let r=`M${t[0].x},${t[0].y}`;for(let n=0;n<a;n++){const s=t[(n-1+a)%a],i=t[n],o=t[(n+1)%a],l=t[(n+2)%a],c={x:i.x+(o.x-s.x)*e,y:i.y+(o.y-s.y)*e},d={x:o.x-(l.x-i.x)*e,y:o.y-(l.y-i.y)*e};r+=` C${c.x},${c.y} ${d.x},${d.y} ${o.x},${o.y}`}return`${r} Z`}function T(t,e,a,r){if(!a)return;const n=3*(r.width/2+r.marginRight)/4,s=3*-(r.height/2+r.marginTop)/4;e.forEach(((e,a)=>{const r=t.append("g").attr("transform",`translate(${n}, ${s+20*a})`);r.append("rect").attr("width",12).attr("height",12).attr("class",`radarLegendBox-${a}`),r.append("text").attr("x",16).attr("y",0).attr("class","radarLegendText").text(e.label)}))}l(M,"drawCurves"),l(A,"relativeRadius"),l(L,"closedRoundCurve"),l(T,"drawLegend");var st={draw:tt},nt=l(((t,e)=>{let a="";for(let r=0;r<t.THEME_COLOR_LIMIT;r++){const n=t[`cScale${r}`];a+=`\n\t\t.radarCurve-${r} {\n\t\t\tcolor: ${n};\n\t\t\tfill: ${n};\n\t\t\tfill-opacity: ${e.curveOpacity};\n\t\t\tstroke: ${n};\n\t\t\tstroke-width: ${e.curveStrokeWidth};\n\t\t}\n\t\t.radarLegendBox-${r} {\n\t\t\tfill: ${n};\n\t\t\tfill-opacity: ${e.curveOpacity};\n\t\t\tstroke: ${n};\n\t\t}\n\t\t`}return a}),"genIndexStyles"),ot=l((t=>{const e=V(),a=C(),r=y(e,a.themeVariables);return{themeVariables:r,radarOptions:y(r.radar,t)}}),"buildRadarStyleOptions"),it=l((({radar:t}={})=>{const{themeVariables:e,radarOptions:a}=ot(t);return`\n\t.radarTitle {\n\t\tfont-size: ${e.fontSize};\n\t\tcolor: ${e.titleColor};\n\t\tdominant-baseline: hanging;\n\t\ttext-anchor: middle;\n\t}\n\t.radarAxisLine {\n\t\tstroke: ${a.axisColor};\n\t\tstroke-width: ${a.axisStrokeWidth};\n\t}\n\t.radarAxisLabel {\n\t\tdominant-baseline: middle;\n\t\ttext-anchor: middle;\n\t\tfont-size: ${a.axisLabelFontSize}px;\n\t\tcolor: ${a.axisColor};\n\t}\n\t.radarGraticule {\n\t\tfill: ${a.graticuleColor};\n\t\tfill-opacity: ${a.graticuleOpacity};\n\t\tstroke: ${a.graticuleColor};\n\t\tstroke-width: ${a.graticuleStrokeWidth};\n\t}\n\t.radarLegendText {\n\t\ttext-anchor: start;\n\t\tfont-size: ${a.legendFontSize}px;\n\t\tdominant-baseline: hanging;\n\t}\n\t${nt(e,a)}\n\t`}),"styles"),mt={parser:Q,db:$,renderer:st,styles:it};export{mt as diagram};