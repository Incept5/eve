exports.up=function(e){return Promise.all([e.schema.createTable("eve_user_configs",(function(t){t.increments("id").primary(),t.string("userId").notNullable(),t.string("key").notNullable(),t.text("value").notNullable(),t.timestamp("createdAt").defaultTo(e.fn.now()),t.timestamp("updatedAt").defaultTo(e.fn.now()),t.unique(["userId","key"])})),e.schema.createTable("eve_workspace_configs",(function(t){t.increments("id").primary(),t.string("workspaceName").notNullable(),t.string("key").notNullable(),t.text("value").notNullable(),t.timestamp("createdAt").defaultTo(e.fn.now()),t.timestamp("updatedAt").defaultTo(e.fn.now()),t.unique(["workspaceName","key"])})),e.schema.createTable("eve_tasks",(function(t){t.increments("id").primary(),t.string("taskId").notNullable().unique(),t.string("userId").notNullable(),t.string("workspaceName").nullable(),t.text("prompt").nullable(),t.text("systemPrompt").nullable(),t.string("status").notNullable().defaultTo("created"),t.text("result").nullable(),t.timestamp("createdAt").defaultTo(e.fn.now()),t.timestamp("updatedAt").defaultTo(e.fn.now()),t.timestamp("completedAt").nullable()}))])},exports.down=function(e){return Promise.all([e.schema.dropTableIfExists("eve_tasks"),e.schema.dropTableIfExists("eve_workspace_configs"),e.schema.dropTableIfExists("eve_user_configs")])};